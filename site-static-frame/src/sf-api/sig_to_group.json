{"Series.__init__()": "Constructor", "Series.from_concat()": "Constructor", "Series.from_concat_items()": "Constructor", "Series.from_delimited()": "Constructor", "Series.from_dict()": "Constructor", "Series.from_element()": "Constructor", "Series.from_items()": "Constructor", "Series.from_overlay()": "Constructor", "Series.from_pandas()": "Constructor", "Series.to_frame()": "Exporter", "Series.to_frame_go()": "Exporter", "Series.to_frame_he()": "Exporter", "Series.to_html()": "Exporter", "Series.to_html_datatables()": "Exporter", "Series.to_pairs()": "Exporter", "Series.to_pandas()": "Exporter", "Series.to_series_he()": "Exporter", "Series.to_visidata()": "Exporter", "Series.STATIC": "Attribute", "Series.T": "Attribute", "Series.dtype": "Attribute", "Series.index": "Attribute", "Series.memory": "Attribute", "Series.mloc": "Attribute", "Series.name": "Attribute", "Series.nbytes": "Attribute", "Series.ndim": "Attribute", "Series.shape": "Attribute", "Series.size": "Attribute", "Series.__array__()": "Method", "Series.__array_ufunc__()": "Method", "Series.__bool__()": "Method", "Series.__copy__()": "Method", "Series.__deepcopy__()": "Method", "Series.__len__()": "Method", "Series.__round__()": "Method", "Series.all()": "Method", "Series.any()": "Method", "Series.astype()": "Method", "Series.clip()": "Method", "Series.corr()": "Method", "Series.count()": "Method", "Series.cov()": "Method", "Series.cumprod()": "Method", "Series.cumsum()": "Method", "Series.drop_duplicated()": "Method", "Series.dropfalsy()": "Method", "Series.dropna()": "Method", "Series.duplicated()": "Method", "Series.equals()": "Method", "Series.fillfalsy()": "Method", "Series.fillfalsy_backward()": "Method", "Series.fillfalsy_forward()": "Method", "Series.fillfalsy_leading()": "Method", "Series.fillfalsy_trailing()": "Method", "Series.fillna()": "Method", "Series.fillna_backward()": "Method", "Series.fillna_forward()": "Method", "Series.fillna_leading()": "Method", "Series.fillna_trailing()": "Method", "Series.head()": "Method", "Series.iloc_max()": "Method", "Series.iloc_min()": "Method", "Series.iloc_notfalsy_first()": "Method", "Series.iloc_notfalsy_last()": "Method", "Series.iloc_notna_first()": "Method", "Series.iloc_notna_last()": "Method", "Series.iloc_searchsorted()": "Method", "Series.insert_after()": "Method", "Series.insert_before()": "Method", "Series.isfalsy()": "Method", "Series.isin()": "Method", "Series.isna()": "Method", "Series.loc_max()": "Method", "Series.loc_min()": "Method", "Series.loc_notfalsy_first()": "Method", "Series.loc_notfalsy_last()": "Method", "Series.loc_notna_first()": "Method", "Series.loc_notna_last()": "Method", "Series.loc_searchsorted()": "Method", "Series.max()": "Method", "Series.mean()": "Method", "Series.median()": "Method", "Series.min()": "Method", "Series.notfalsy()": "Method", "Series.notna()": "Method", "Series.prod()": "Method", "Series.rank_dense()": "Method", "Series.rank_max()": "Method", "Series.rank_mean()": "Method", "Series.rank_min()": "Method", "Series.rank_ordinal()": "Method", "Series.rehierarch()": "Method", "Series.reindex()": "Method", "Series.relabel()": "Method", "Series.relabel_flat()": "Method", "Series.relabel_level_add()": "Method", "Series.relabel_level_drop()": "Method", "Series.rename()": "Method", "Series.roll()": "Method", "Series.sample()": "Method", "Series.shift()": "Method", "Series.sort_index()": "Method", "Series.sort_values()": "Method", "Series.std()": "Method", "Series.sum()": "Method", "Series.tail()": "Method", "Series.transpose()": "Method", "Series.unique()": "Method", "Series.unique_enumerated()": "Method", "Series.var()": "Method", "Series.__contains__()": "Dictionary-Like", "Series.__iter__()": "Dictionary-Like", "Series.__reversed__()": "Dictionary-Like", "Series.get()": "Dictionary-Like", "Series.items()": "Dictionary-Like", "Series.keys()": "Dictionary-Like", "Series.values": "Dictionary-Like", "Series.interface": "Display", "Series.__repr__()": "Display", "Series.__str__()": "Display", "Series.display()": "Display", "Series.display_tall()": "Display", "Series.display_wide()": "Display", "Series.assign[]()": "Assignment", "Series.assign[].apply()": "Assignment", "Series.assign[].apply_element()": "Assignment", "Series.assign[].apply_element_items()": "Assignment", "Series.assign.iloc[]()": "Assignment", "Series.assign.iloc[].apply()": "Assignment", "Series.assign.iloc[].apply_element()": "Assignment", "Series.assign.iloc[].apply_element_items()": "Assignment", "Series.assign.loc[]()": "Assignment", "Series.assign.loc[].apply()": "Assignment", "Series.assign.loc[].apply_element()": "Assignment", "Series.assign.loc[].apply_element_items()": "Assignment", "Series.drop[]": "Selector", "Series.drop.iloc[]": "Selector", "Series.drop.loc[]": "Selector", "Series.mask[]": "Selector", "Series.mask.iloc[]": "Selector", "Series.mask.loc[]": "Selector", "Series.masked_array[]": "Selector", "Series.masked_array.iloc[]": "Selector", "Series.masked_array.loc[]": "Selector", "Series.[]": "Selector", "Series.iloc[]": "Selector", "Series.loc[]": "Selector", "Series.iter_element()": "Iterator", "Series.iter_element().apply()": "Iterator", "Series.iter_element().apply_iter()": "Iterator", "Series.iter_element().apply_iter_items()": "Iterator", "Series.iter_element().apply_pool()": "Iterator", "Series.iter_element().map_all()": "Iterator", "Series.iter_element().map_all_iter()": "Iterator", "Series.iter_element().map_all_iter_items()": "Iterator", "Series.iter_element().map_any()": "Iterator", "Series.iter_element().map_any_iter()": "Iterator", "Series.iter_element().map_any_iter_items()": "Iterator", "Series.iter_element().map_fill()": "Iterator", "Series.iter_element().map_fill_iter()": "Iterator", "Series.iter_element().map_fill_iter_items()": "Iterator", "Series.iter_element_items()": "Iterator", "Series.iter_element_items().apply()": "Iterator", "Series.iter_element_items().apply_iter()": "Iterator", "Series.iter_element_items().apply_iter_items()": "Iterator", "Series.iter_element_items().apply_pool()": "Iterator", "Series.iter_element_items().map_all()": "Iterator", "Series.iter_element_items().map_all_iter()": "Iterator", "Series.iter_element_items().map_all_iter_items()": "Iterator", "Series.iter_element_items().map_any()": "Iterator", "Series.iter_element_items().map_any_iter()": "Iterator", "Series.iter_element_items().map_any_iter_items()": "Iterator", "Series.iter_element_items().map_fill()": "Iterator", "Series.iter_element_items().map_fill_iter()": "Iterator", "Series.iter_element_items().map_fill_iter_items()": "Iterator", "Series.iter_group()": "Iterator", "Series.iter_group().apply()": "Iterator", "Series.iter_group().apply_iter()": "Iterator", "Series.iter_group().apply_iter_items()": "Iterator", "Series.iter_group().apply_pool()": "Iterator", "Series.iter_group_array()": "Iterator", "Series.iter_group_array().apply()": "Iterator", "Series.iter_group_array().apply_iter()": "Iterator", "Series.iter_group_array().apply_iter_items()": "Iterator", "Series.iter_group_array().apply_pool()": "Iterator", "Series.iter_group_array_items()": "Iterator", "Series.iter_group_array_items().apply()": "Iterator", "Series.iter_group_array_items().apply_iter()": "Iterator", "Series.iter_group_array_items().apply_iter_items()": "Iterator", "Series.iter_group_array_items().apply_pool()": "Iterator", "Series.iter_group_items()": "Iterator", "Series.iter_group_items().apply()": "Iterator", "Series.iter_group_items().apply_iter()": "Iterator", "Series.iter_group_items().apply_iter_items()": "Iterator", "Series.iter_group_items().apply_pool()": "Iterator", "Series.iter_group_labels()": "Iterator", "Series.iter_group_labels().apply()": "Iterator", "Series.iter_group_labels().apply_iter()": "Iterator", "Series.iter_group_labels().apply_iter_items()": "Iterator", "Series.iter_group_labels().apply_pool()": "Iterator", "Series.iter_group_labels_array()": "Iterator", "Series.iter_group_labels_array().apply()": "Iterator", "Series.iter_group_labels_array().apply_iter()": "Iterator", "Series.iter_group_labels_array().apply_iter_items()": "Iterator", "Series.iter_group_labels_array().apply_pool()": "Iterator", "Series.iter_group_labels_array_items()": "Iterator", "Series.iter_group_labels_array_items().apply()": "Iterator", "Series.iter_group_labels_array_items().apply_iter()": "Iterator", "Series.iter_group_labels_array_items().apply_iter_items()": "Iterator", "Series.iter_group_labels_array_items().apply_pool()": "Iterator", "Series.iter_group_labels_items()": "Iterator", "Series.iter_group_labels_items().apply()": "Iterator", "Series.iter_group_labels_items().apply_iter()": "Iterator", "Series.iter_group_labels_items().apply_iter_items()": "Iterator", "Series.iter_group_labels_items().apply_pool()": "Iterator", "Series.iter_group_other()": "Iterator", "Series.iter_group_other().apply()": "Iterator", "Series.iter_group_other().apply_iter()": "Iterator", "Series.iter_group_other().apply_iter_items()": "Iterator", "Series.iter_group_other().apply_pool()": "Iterator", "Series.iter_group_other_array()": "Iterator", "Series.iter_group_other_array().apply()": "Iterator", "Series.iter_group_other_array().apply_iter()": "Iterator", "Series.iter_group_other_array().apply_iter_items()": "Iterator", "Series.iter_group_other_array().apply_pool()": "Iterator", "Series.iter_group_other_array_items()": "Iterator", "Series.iter_group_other_array_items().apply()": "Iterator", "Series.iter_group_other_array_items().apply_iter()": "Iterator", "Series.iter_group_other_array_items().apply_iter_items()": "Iterator", "Series.iter_group_other_array_items().apply_pool()": "Iterator", "Series.iter_group_other_items()": "Iterator", "Series.iter_group_other_items().apply()": "Iterator", "Series.iter_group_other_items().apply_iter()": "Iterator", "Series.iter_group_other_items().apply_iter_items()": "Iterator", "Series.iter_group_other_items().apply_pool()": "Iterator", "Series.iter_window()": "Iterator", "Series.iter_window().apply()": "Iterator", "Series.iter_window().apply_iter()": "Iterator", "Series.iter_window().apply_iter_items()": "Iterator", "Series.iter_window().apply_pool()": "Iterator", "Series.iter_window_array()": "Iterator", "Series.iter_window_array().apply()": "Iterator", "Series.iter_window_array().apply_iter()": "Iterator", "Series.iter_window_array().apply_iter_items()": "Iterator", "Series.iter_window_array().apply_pool()": "Iterator", "Series.iter_window_array_items()": "Iterator", "Series.iter_window_array_items().apply()": "Iterator", "Series.iter_window_array_items().apply_iter()": "Iterator", "Series.iter_window_array_items().apply_iter_items()": "Iterator", "Series.iter_window_array_items().apply_pool()": "Iterator", "Series.iter_window_items()": "Iterator", "Series.iter_window_items().apply()": "Iterator", "Series.iter_window_items().apply_iter()": "Iterator", "Series.iter_window_items().apply_iter_items()": "Iterator", "Series.iter_window_items().apply_pool()": "Iterator", "Series.__add__()": "Operator Binary", "Series.__and__()": "Operator Binary", "Series.__eq__()": "Operator Binary", "Series.__floordiv__()": "Operator Binary", "Series.__ge__()": "Operator Binary", "Series.__gt__()": "Operator Binary", "Series.__le__()": "Operator Binary", "Series.__lt__()": "Operator Binary", "Series.__matmul__()": "Operator Binary", "Series.__mod__()": "Operator Binary", "Series.__mul__()": "Operator Binary", "Series.__ne__()": "Operator Binary", "Series.__or__()": "Operator Binary", "Series.__pow__()": "Operator Binary", "Series.__radd__()": "Operator Binary", "Series.__rfloordiv__()": "Operator Binary", "Series.__rmatmul__()": "Operator Binary", "Series.__rmul__()": "Operator Binary", "Series.__rshift__()": "Operator Binary", "Series.__rsub__()": "Operator Binary", "Series.__rtruediv__()": "Operator Binary", "Series.__sub__()": "Operator Binary", "Series.__truediv__()": "Operator Binary", "Series.__xor__()": "Operator Binary", "Series.__abs__()": "Operator Unary", "Series.__invert__()": "Operator Unary", "Series.__neg__()": "Operator Unary", "Series.__pos__()": "Operator Unary", "Series.abs()": "Operator Unary", "Series.via_values.apply()": "Accessor Values", "Series.via_values.__array_ufunc__()": "Accessor Values", "Series.via_values.__call__()": "Accessor Values", "Series.via_dt.__call__()": "Accessor Datetime", "Series.via_dt.year": "Accessor Datetime", "Series.via_dt.year_month": "Accessor Datetime", "Series.via_dt.year_quarter": "Accessor Datetime", "Series.via_dt.month": "Accessor Datetime", "Series.via_dt.day": "Accessor Datetime", "Series.via_dt.hour": "Accessor Datetime", "Series.via_dt.minute": "Accessor Datetime", "Series.via_dt.second": "Accessor Datetime", "Series.via_dt.weekday()": "Accessor Datetime", "Series.via_dt.quarter()": "Accessor Datetime", "Series.via_dt.is_month_end()": "Accessor Datetime", "Series.via_dt.is_month_start()": "Accessor Datetime", "Series.via_dt.is_year_end()": "Accessor Datetime", "Series.via_dt.is_year_start()": "Accessor Datetime", "Series.via_dt.is_quarter_end()": "Accessor Datetime", "Series.via_dt.is_quarter_start()": "Accessor Datetime", "Series.via_dt.timetuple()": "Accessor Datetime", "Series.via_dt.isoformat()": "Accessor Datetime", "Series.via_dt.fromisoformat()": "Accessor Datetime", "Series.via_dt.strftime()": "Accessor Datetime", "Series.via_dt.strptime()": "Accessor Datetime", "Series.via_dt.strpdate()": "Accessor Datetime", "Series.via_str.__getitem__()": "Accessor String", "Series.via_str.capitalize()": "Accessor String", "Series.via_str.center()": "Accessor String", "Series.via_str.contains()": "Accessor String", "Series.via_str.count()": "Accessor String", "Series.via_str.decode()": "Accessor String", "Series.via_str.encode()": "Accessor String", "Series.via_str.endswith()": "Accessor String", "Series.via_str.find()": "Accessor String", "Series.via_str.format()": "Accessor String", "Series.via_str.index()": "Accessor String", "Series.via_str.isalnum()": "Accessor String", "Series.via_str.isalpha()": "Accessor String", "Series.via_str.isdecimal()": "Accessor String", "Series.via_str.isdigit()": "Accessor String", "Series.via_str.islower()": "Accessor String", "Series.via_str.isnumeric()": "Accessor String", "Series.via_str.isspace()": "Accessor String", "Series.via_str.istitle()": "Accessor String", "Series.via_str.isupper()": "Accessor String", "Series.via_str.ljust()": "Accessor String", "Series.via_str.len()": "Accessor String", "Series.via_str.lower()": "Accessor String", "Series.via_str.lstrip()": "Accessor String", "Series.via_str.partition()": "Accessor String", "Series.via_str.replace()": "Accessor String", "Series.via_str.rfind()": "Accessor String", "Series.via_str.rindex()": "Accessor String", "Series.via_str.rjust()": "Accessor String", "Series.via_str.rpartition()": "Accessor String", "Series.via_str.rsplit()": "Accessor String", "Series.via_str.rstrip()": "Accessor String", "Series.via_str.split()": "Accessor String", "Series.via_str.startswith()": "Accessor String", "Series.via_str.strip()": "Accessor String", "Series.via_str.swapcase()": "Accessor String", "Series.via_str.title()": "Accessor String", "Series.via_str.upper()": "Accessor String", "Series.via_str.zfill()": "Accessor String", "Series.via_fill_value().loc": "Accessor Fill Value", "Series.via_fill_value().__getitem__()": "Accessor Fill Value", "Series.via_fill_value().via_T": "Accessor Fill Value", "Series.via_fill_value().__add__()": "Accessor Fill Value", "Series.via_fill_value().__sub__()": "Accessor Fill Value", "Series.via_fill_value().__mul__()": "Accessor Fill Value", "Series.via_fill_value().__truediv__()": "Accessor Fill Value", "Series.via_fill_value().__floordiv__()": "Accessor Fill Value", "Series.via_fill_value().__mod__()": "Accessor Fill Value", "Series.via_fill_value().__pow__()": "Accessor Fill Value", "Series.via_fill_value().__lshift__()": "Accessor Fill Value", "Series.via_fill_value().__rshift__()": "Accessor Fill Value", "Series.via_fill_value().__and__()": "Accessor Fill Value", "Series.via_fill_value().__xor__()": "Accessor Fill Value", "Series.via_fill_value().__or__()": "Accessor Fill Value", "Series.via_fill_value().__lt__()": "Accessor Fill Value", "Series.via_fill_value().__le__()": "Accessor Fill Value", "Series.via_fill_value().__eq__()": "Accessor Fill Value", "Series.via_fill_value().__ne__()": "Accessor Fill Value", "Series.via_fill_value().__gt__()": "Accessor Fill Value", "Series.via_fill_value().__ge__()": "Accessor Fill Value", "Series.via_fill_value().__radd__()": "Accessor Fill Value", "Series.via_fill_value().__rsub__()": "Accessor Fill Value", "Series.via_fill_value().__rmul__()": "Accessor Fill Value", "Series.via_fill_value().__rtruediv__()": "Accessor Fill Value", "Series.via_fill_value().__rfloordiv__()": "Accessor Fill Value", "Series.via_re().search()": "Accessor Regular Expression", "Series.via_re().match()": "Accessor Regular Expression", "Series.via_re().fullmatch()": "Accessor Regular Expression", "Series.via_re().split()": "Accessor Regular Expression", "Series.via_re().findall()": "Accessor Regular Expression", "Series.via_re().sub()": "Accessor Regular Expression", "Series.via_re().subn()": "Accessor Regular Expression", "Series.via_hashlib().to_bytes()": "Accessor Hashlib", "Series.via_hashlib().md5()": "Accessor Hashlib", "Series.via_hashlib().sha256()": "Accessor Hashlib", "Series.via_hashlib().sha512()": "Accessor Hashlib", "Series.via_hashlib().sha3_256()": "Accessor Hashlib", "Series.via_hashlib().sha3_512()": "Accessor Hashlib", "Series.via_hashlib().shake_128()": "Accessor Hashlib", "Series.via_hashlib().shake_256()": "Accessor Hashlib", "Series.via_hashlib().blake2b()": "Accessor Hashlib", "Series.via_hashlib().blake2s()": "Accessor Hashlib", "Series.via_type_clinic.to_hint()": "Accessor Type Clinic", "Series.via_type_clinic.check()": "Accessor Type Clinic", "Series.via_type_clinic.warn()": "Accessor Type Clinic", "Series.via_type_clinic.__call__()": "Accessor Type Clinic", "Series.via_type_clinic.__repr__()": "Accessor Type Clinic", "Series.via_mapping.__getitem__()": "Accessor Mapping", "Series.via_mapping.__iter__()": "Accessor Mapping", "Series.via_mapping.__len__()": "Accessor Mapping", "Series.via_mapping.__contains__()": "Accessor Mapping", "Series.via_mapping.__repr__()": "Accessor Mapping", "Series.via_mapping.keys()": "Accessor Mapping", "Series.via_mapping.values()": "Accessor Mapping", "Series.via_mapping.items()": "Accessor Mapping", "SeriesHE.__init__()": "Constructor", "SeriesHE.from_concat()": "Constructor", "SeriesHE.from_concat_items()": "Constructor", "SeriesHE.from_delimited()": "Constructor", "SeriesHE.from_dict()": "Constructor", "SeriesHE.from_element()": "Constructor", "SeriesHE.from_items()": "Constructor", "SeriesHE.from_overlay()": "Constructor", "SeriesHE.from_pandas()": "Constructor", "SeriesHE.to_frame()": "Exporter", "SeriesHE.to_frame_go()": "Exporter", "SeriesHE.to_frame_he()": "Exporter", "SeriesHE.to_html()": "Exporter", "SeriesHE.to_html_datatables()": "Exporter", "SeriesHE.to_pairs()": "Exporter", "SeriesHE.to_pandas()": "Exporter", "SeriesHE.to_series()": "Exporter", "SeriesHE.to_series_he()": "Exporter", "SeriesHE.to_visidata()": "Exporter", "SeriesHE.STATIC": "Attribute", "SeriesHE.T": "Attribute", "SeriesHE.dtype": "Attribute", "SeriesHE.index": "Attribute", "SeriesHE.memory": "Attribute", "SeriesHE.mloc": "Attribute", "SeriesHE.name": "Attribute", "SeriesHE.nbytes": "Attribute", "SeriesHE.ndim": "Attribute", "SeriesHE.shape": "Attribute", "SeriesHE.size": "Attribute", "SeriesHE.__array__()": "Method", "SeriesHE.__array_ufunc__()": "Method", "SeriesHE.__bool__()": "Method", "SeriesHE.__copy__()": "Method", "SeriesHE.__deepcopy__()": "Method", "SeriesHE.__len__()": "Method", "SeriesHE.__round__()": "Method", "SeriesHE.all()": "Method", "SeriesHE.any()": "Method", "SeriesHE.astype()": "Method", "SeriesHE.clip()": "Method", "SeriesHE.corr()": "Method", "SeriesHE.count()": "Method", "SeriesHE.cov()": "Method", "SeriesHE.cumprod()": "Method", "SeriesHE.cumsum()": "Method", "SeriesHE.drop_duplicated()": "Method", "SeriesHE.dropfalsy()": "Method", "SeriesHE.dropna()": "Method", "SeriesHE.duplicated()": "Method", "SeriesHE.equals()": "Method", "SeriesHE.fillfalsy()": "Method", "SeriesHE.fillfalsy_backward()": "Method", "SeriesHE.fillfalsy_forward()": "Method", "SeriesHE.fillfalsy_leading()": "Method", "SeriesHE.fillfalsy_trailing()": "Method", "SeriesHE.fillna()": "Method", "SeriesHE.fillna_backward()": "Method", "SeriesHE.fillna_forward()": "Method", "SeriesHE.fillna_leading()": "Method", "SeriesHE.fillna_trailing()": "Method", "SeriesHE.head()": "Method", "SeriesHE.iloc_max()": "Method", "SeriesHE.iloc_min()": "Method", "SeriesHE.iloc_notfalsy_first()": "Method", "SeriesHE.iloc_notfalsy_last()": "Method", "SeriesHE.iloc_notna_first()": "Method", "SeriesHE.iloc_notna_last()": "Method", "SeriesHE.iloc_searchsorted()": "Method", "SeriesHE.insert_after()": "Method", "SeriesHE.insert_before()": "Method", "SeriesHE.isfalsy()": "Method", "SeriesHE.isin()": "Method", "SeriesHE.isna()": "Method", "SeriesHE.loc_max()": "Method", "SeriesHE.loc_min()": "Method", "SeriesHE.loc_notfalsy_first()": "Method", "SeriesHE.loc_notfalsy_last()": "Method", "SeriesHE.loc_notna_first()": "Method", "SeriesHE.loc_notna_last()": "Method", "SeriesHE.loc_searchsorted()": "Method", "SeriesHE.max()": "Method", "SeriesHE.mean()": "Method", "SeriesHE.median()": "Method", "SeriesHE.min()": "Method", "SeriesHE.notfalsy()": "Method", "SeriesHE.notna()": "Method", "SeriesHE.prod()": "Method", "SeriesHE.rank_dense()": "Method", "SeriesHE.rank_max()": "Method", "SeriesHE.rank_mean()": "Method", "SeriesHE.rank_min()": "Method", "SeriesHE.rank_ordinal()": "Method", "SeriesHE.rehierarch()": "Method", "SeriesHE.reindex()": "Method", "SeriesHE.relabel()": "Method", "SeriesHE.relabel_flat()": "Method", "SeriesHE.relabel_level_add()": "Method", "SeriesHE.relabel_level_drop()": "Method", "SeriesHE.rename()": "Method", "SeriesHE.roll()": "Method", "SeriesHE.sample()": "Method", "SeriesHE.shift()": "Method", "SeriesHE.sort_index()": "Method", "SeriesHE.sort_values()": "Method", "SeriesHE.std()": "Method", "SeriesHE.sum()": "Method", "SeriesHE.tail()": "Method", "SeriesHE.transpose()": "Method", "SeriesHE.unique()": "Method", "SeriesHE.unique_enumerated()": "Method", "SeriesHE.var()": "Method", "SeriesHE.__contains__()": "Dictionary-Like", "SeriesHE.__iter__()": "Dictionary-Like", "SeriesHE.__reversed__()": "Dictionary-Like", "SeriesHE.get()": "Dictionary-Like", "SeriesHE.items()": "Dictionary-Like", "SeriesHE.keys()": "Dictionary-Like", "SeriesHE.values": "Dictionary-Like", "SeriesHE.interface": "Display", "SeriesHE.__repr__()": "Display", "SeriesHE.__str__()": "Display", "SeriesHE.display()": "Display", "SeriesHE.display_tall()": "Display", "SeriesHE.display_wide()": "Display", "SeriesHE.assign[]()": "Assignment", "SeriesHE.assign[].apply()": "Assignment", "SeriesHE.assign[].apply_element()": "Assignment", "SeriesHE.assign[].apply_element_items()": "Assignment", "SeriesHE.assign.iloc[]()": "Assignment", "SeriesHE.assign.iloc[].apply()": "Assignment", "SeriesHE.assign.iloc[].apply_element()": "Assignment", "SeriesHE.assign.iloc[].apply_element_items()": "Assignment", "SeriesHE.assign.loc[]()": "Assignment", "SeriesHE.assign.loc[].apply()": "Assignment", "SeriesHE.assign.loc[].apply_element()": "Assignment", "SeriesHE.assign.loc[].apply_element_items()": "Assignment", "SeriesHE.drop[]": "Selector", "SeriesHE.drop.iloc[]": "Selector", "SeriesHE.drop.loc[]": "Selector", "SeriesHE.mask[]": "Selector", "SeriesHE.mask.iloc[]": "Selector", "SeriesHE.mask.loc[]": "Selector", "SeriesHE.masked_array[]": "Selector", "SeriesHE.masked_array.iloc[]": "Selector", "SeriesHE.masked_array.loc[]": "Selector", "SeriesHE.[]": "Selector", "SeriesHE.iloc[]": "Selector", "SeriesHE.loc[]": "Selector", "SeriesHE.iter_element()": "Iterator", "SeriesHE.iter_element().apply()": "Iterator", "SeriesHE.iter_element().apply_iter()": "Iterator", "SeriesHE.iter_element().apply_iter_items()": "Iterator", "SeriesHE.iter_element().apply_pool()": "Iterator", "SeriesHE.iter_element().map_all()": "Iterator", "SeriesHE.iter_element().map_all_iter()": "Iterator", "SeriesHE.iter_element().map_all_iter_items()": "Iterator", "SeriesHE.iter_element().map_any()": "Iterator", "SeriesHE.iter_element().map_any_iter()": "Iterator", "SeriesHE.iter_element().map_any_iter_items()": "Iterator", "SeriesHE.iter_element().map_fill()": "Iterator", "SeriesHE.iter_element().map_fill_iter()": "Iterator", "SeriesHE.iter_element().map_fill_iter_items()": "Iterator", "SeriesHE.iter_element_items()": "Iterator", "SeriesHE.iter_element_items().apply()": "Iterator", "SeriesHE.iter_element_items().apply_iter()": "Iterator", "SeriesHE.iter_element_items().apply_iter_items()": "Iterator", "SeriesHE.iter_element_items().apply_pool()": "Iterator", "SeriesHE.iter_element_items().map_all()": "Iterator", "SeriesHE.iter_element_items().map_all_iter()": "Iterator", "SeriesHE.iter_element_items().map_all_iter_items()": "Iterator", "SeriesHE.iter_element_items().map_any()": "Iterator", "SeriesHE.iter_element_items().map_any_iter()": "Iterator", "SeriesHE.iter_element_items().map_any_iter_items()": "Iterator", "SeriesHE.iter_element_items().map_fill()": "Iterator", "SeriesHE.iter_element_items().map_fill_iter()": "Iterator", "SeriesHE.iter_element_items().map_fill_iter_items()": "Iterator", "SeriesHE.iter_group()": "Iterator", "SeriesHE.iter_group().apply()": "Iterator", "SeriesHE.iter_group().apply_iter()": "Iterator", "SeriesHE.iter_group().apply_iter_items()": "Iterator", "SeriesHE.iter_group().apply_pool()": "Iterator", "SeriesHE.iter_group_array()": "Iterator", "SeriesHE.iter_group_array().apply()": "Iterator", "SeriesHE.iter_group_array().apply_iter()": "Iterator", "SeriesHE.iter_group_array().apply_iter_items()": "Iterator", "SeriesHE.iter_group_array().apply_pool()": "Iterator", "SeriesHE.iter_group_array_items()": "Iterator", "SeriesHE.iter_group_array_items().apply()": "Iterator", "SeriesHE.iter_group_array_items().apply_iter()": "Iterator", "SeriesHE.iter_group_array_items().apply_iter_items()": "Iterator", "SeriesHE.iter_group_array_items().apply_pool()": "Iterator", "SeriesHE.iter_group_items()": "Iterator", "SeriesHE.iter_group_items().apply()": "Iterator", "SeriesHE.iter_group_items().apply_iter()": "Iterator", "SeriesHE.iter_group_items().apply_iter_items()": "Iterator", "SeriesHE.iter_group_items().apply_pool()": "Iterator", "SeriesHE.iter_group_labels()": "Iterator", "SeriesHE.iter_group_labels().apply()": "Iterator", "SeriesHE.iter_group_labels().apply_iter()": "Iterator", "SeriesHE.iter_group_labels().apply_iter_items()": "Iterator", "SeriesHE.iter_group_labels().apply_pool()": "Iterator", "SeriesHE.iter_group_labels_array()": "Iterator", "SeriesHE.iter_group_labels_array().apply()": "Iterator", "SeriesHE.iter_group_labels_array().apply_iter()": "Iterator", "SeriesHE.iter_group_labels_array().apply_iter_items()": "Iterator", "SeriesHE.iter_group_labels_array().apply_pool()": "Iterator", "SeriesHE.iter_group_labels_array_items()": "Iterator", "SeriesHE.iter_group_labels_array_items().apply()": "Iterator", "SeriesHE.iter_group_labels_array_items().apply_iter()": "Iterator", "SeriesHE.iter_group_labels_array_items().apply_iter_items()": "Iterator", "SeriesHE.iter_group_labels_array_items().apply_pool()": "Iterator", "SeriesHE.iter_group_labels_items()": "Iterator", "SeriesHE.iter_group_labels_items().apply()": "Iterator", "SeriesHE.iter_group_labels_items().apply_iter()": "Iterator", "SeriesHE.iter_group_labels_items().apply_iter_items()": "Iterator", "SeriesHE.iter_group_labels_items().apply_pool()": "Iterator", "SeriesHE.iter_group_other()": "Iterator", "SeriesHE.iter_group_other().apply()": "Iterator", "SeriesHE.iter_group_other().apply_iter()": "Iterator", "SeriesHE.iter_group_other().apply_iter_items()": "Iterator", "SeriesHE.iter_group_other().apply_pool()": "Iterator", "SeriesHE.iter_group_other_array()": "Iterator", "SeriesHE.iter_group_other_array().apply()": "Iterator", "SeriesHE.iter_group_other_array().apply_iter()": "Iterator", "SeriesHE.iter_group_other_array().apply_iter_items()": "Iterator", "SeriesHE.iter_group_other_array().apply_pool()": "Iterator", "SeriesHE.iter_group_other_array_items()": "Iterator", "SeriesHE.iter_group_other_array_items().apply()": "Iterator", "SeriesHE.iter_group_other_array_items().apply_iter()": "Iterator", "SeriesHE.iter_group_other_array_items().apply_iter_items()": "Iterator", "SeriesHE.iter_group_other_array_items().apply_pool()": "Iterator", "SeriesHE.iter_group_other_items()": "Iterator", "SeriesHE.iter_group_other_items().apply()": "Iterator", "SeriesHE.iter_group_other_items().apply_iter()": "Iterator", "SeriesHE.iter_group_other_items().apply_iter_items()": "Iterator", "SeriesHE.iter_group_other_items().apply_pool()": "Iterator", "SeriesHE.iter_window()": "Iterator", "SeriesHE.iter_window().apply()": "Iterator", "SeriesHE.iter_window().apply_iter()": "Iterator", "SeriesHE.iter_window().apply_iter_items()": "Iterator", "SeriesHE.iter_window().apply_pool()": "Iterator", "SeriesHE.iter_window_array()": "Iterator", "SeriesHE.iter_window_array().apply()": "Iterator", "SeriesHE.iter_window_array().apply_iter()": "Iterator", "SeriesHE.iter_window_array().apply_iter_items()": "Iterator", "SeriesHE.iter_window_array().apply_pool()": "Iterator", "SeriesHE.iter_window_array_items()": "Iterator", "SeriesHE.iter_window_array_items().apply()": "Iterator", "SeriesHE.iter_window_array_items().apply_iter()": "Iterator", "SeriesHE.iter_window_array_items().apply_iter_items()": "Iterator", "SeriesHE.iter_window_array_items().apply_pool()": "Iterator", "SeriesHE.iter_window_items()": "Iterator", "SeriesHE.iter_window_items().apply()": "Iterator", "SeriesHE.iter_window_items().apply_iter()": "Iterator", "SeriesHE.iter_window_items().apply_iter_items()": "Iterator", "SeriesHE.iter_window_items().apply_pool()": "Iterator", "SeriesHE.__add__()": "Operator Binary", "SeriesHE.__and__()": "Operator Binary", "SeriesHE.__eq__()": "Operator Binary", "SeriesHE.__floordiv__()": "Operator Binary", "SeriesHE.__ge__()": "Operator Binary", "SeriesHE.__gt__()": "Operator Binary", "SeriesHE.__le__()": "Operator Binary", "SeriesHE.__lt__()": "Operator Binary", "SeriesHE.__matmul__()": "Operator Binary", "SeriesHE.__mod__()": "Operator Binary", "SeriesHE.__mul__()": "Operator Binary", "SeriesHE.__ne__()": "Operator Binary", "SeriesHE.__or__()": "Operator Binary", "SeriesHE.__pow__()": "Operator Binary", "SeriesHE.__radd__()": "Operator Binary", "SeriesHE.__rfloordiv__()": "Operator Binary", "SeriesHE.__rmatmul__()": "Operator Binary", "SeriesHE.__rmul__()": "Operator Binary", "SeriesHE.__rshift__()": "Operator Binary", "SeriesHE.__rsub__()": "Operator Binary", "SeriesHE.__rtruediv__()": "Operator Binary", "SeriesHE.__sub__()": "Operator Binary", "SeriesHE.__truediv__()": "Operator Binary", "SeriesHE.__xor__()": "Operator Binary", "SeriesHE.__abs__()": "Operator Unary", "SeriesHE.__invert__()": "Operator Unary", "SeriesHE.__neg__()": "Operator Unary", "SeriesHE.__pos__()": "Operator Unary", "SeriesHE.abs()": "Operator Unary", "SeriesHE.via_values.apply()": "Accessor Values", "SeriesHE.via_values.__array_ufunc__()": "Accessor Values", "SeriesHE.via_values.__call__()": "Accessor Values", "SeriesHE.via_dt.__call__()": "Accessor Datetime", "SeriesHE.via_dt.year": "Accessor Datetime", "SeriesHE.via_dt.year_month": "Accessor Datetime", "SeriesHE.via_dt.year_quarter": "Accessor Datetime", "SeriesHE.via_dt.month": "Accessor Datetime", "SeriesHE.via_dt.day": "Accessor Datetime", "SeriesHE.via_dt.hour": "Accessor Datetime", "SeriesHE.via_dt.minute": "Accessor Datetime", "SeriesHE.via_dt.second": "Accessor Datetime", "SeriesHE.via_dt.weekday()": "Accessor Datetime", "SeriesHE.via_dt.quarter()": "Accessor Datetime", "SeriesHE.via_dt.is_month_end()": "Accessor Datetime", "SeriesHE.via_dt.is_month_start()": "Accessor Datetime", "SeriesHE.via_dt.is_year_end()": "Accessor Datetime", "SeriesHE.via_dt.is_year_start()": "Accessor Datetime", "SeriesHE.via_dt.is_quarter_end()": "Accessor Datetime", "SeriesHE.via_dt.is_quarter_start()": "Accessor Datetime", "SeriesHE.via_dt.timetuple()": "Accessor Datetime", "SeriesHE.via_dt.isoformat()": "Accessor Datetime", "SeriesHE.via_dt.fromisoformat()": "Accessor Datetime", "SeriesHE.via_dt.strftime()": "Accessor Datetime", "SeriesHE.via_dt.strptime()": "Accessor Datetime", "SeriesHE.via_dt.strpdate()": "Accessor Datetime", "SeriesHE.via_str.__getitem__()": "Accessor String", "SeriesHE.via_str.capitalize()": "Accessor String", "SeriesHE.via_str.center()": "Accessor String", "SeriesHE.via_str.contains()": "Accessor String", "SeriesHE.via_str.count()": "Accessor String", "SeriesHE.via_str.decode()": "Accessor String", "SeriesHE.via_str.encode()": "Accessor String", "SeriesHE.via_str.endswith()": "Accessor String", "SeriesHE.via_str.find()": "Accessor String", "SeriesHE.via_str.format()": "Accessor String", "SeriesHE.via_str.index()": "Accessor String", "SeriesHE.via_str.isalnum()": "Accessor String", "SeriesHE.via_str.isalpha()": "Accessor String", "SeriesHE.via_str.isdecimal()": "Accessor String", "SeriesHE.via_str.isdigit()": "Accessor String", "SeriesHE.via_str.islower()": "Accessor String", "SeriesHE.via_str.isnumeric()": "Accessor String", "SeriesHE.via_str.isspace()": "Accessor String", "SeriesHE.via_str.istitle()": "Accessor String", "SeriesHE.via_str.isupper()": "Accessor String", "SeriesHE.via_str.ljust()": "Accessor String", "SeriesHE.via_str.len()": "Accessor String", "SeriesHE.via_str.lower()": "Accessor String", "SeriesHE.via_str.lstrip()": "Accessor String", "SeriesHE.via_str.partition()": "Accessor String", "SeriesHE.via_str.replace()": "Accessor String", "SeriesHE.via_str.rfind()": "Accessor String", "SeriesHE.via_str.rindex()": "Accessor String", "SeriesHE.via_str.rjust()": "Accessor String", "SeriesHE.via_str.rpartition()": "Accessor String", "SeriesHE.via_str.rsplit()": "Accessor String", "SeriesHE.via_str.rstrip()": "Accessor String", "SeriesHE.via_str.split()": "Accessor String", "SeriesHE.via_str.startswith()": "Accessor String", "SeriesHE.via_str.strip()": "Accessor String", "SeriesHE.via_str.swapcase()": "Accessor String", "SeriesHE.via_str.title()": "Accessor String", "SeriesHE.via_str.upper()": "Accessor String", "SeriesHE.via_str.zfill()": "Accessor String", "SeriesHE.via_fill_value().loc": "Accessor Fill Value", "SeriesHE.via_fill_value().__getitem__()": "Accessor Fill Value", "SeriesHE.via_fill_value().via_T": "Accessor Fill Value", "SeriesHE.via_fill_value().__add__()": "Accessor Fill Value", "SeriesHE.via_fill_value().__sub__()": "Accessor Fill Value", "SeriesHE.via_fill_value().__mul__()": "Accessor Fill Value", "SeriesHE.via_fill_value().__truediv__()": "Accessor Fill Value", "SeriesHE.via_fill_value().__floordiv__()": "Accessor Fill Value", "SeriesHE.via_fill_value().__mod__()": "Accessor Fill Value", "SeriesHE.via_fill_value().__pow__()": "Accessor Fill Value", "SeriesHE.via_fill_value().__lshift__()": "Accessor Fill Value", "SeriesHE.via_fill_value().__rshift__()": "Accessor Fill Value", "SeriesHE.via_fill_value().__and__()": "Accessor Fill Value", "SeriesHE.via_fill_value().__xor__()": "Accessor Fill Value", "SeriesHE.via_fill_value().__or__()": "Accessor Fill Value", "SeriesHE.via_fill_value().__lt__()": "Accessor Fill Value", "SeriesHE.via_fill_value().__le__()": "Accessor Fill Value", "SeriesHE.via_fill_value().__eq__()": "Accessor Fill Value", "SeriesHE.via_fill_value().__ne__()": "Accessor Fill Value", "SeriesHE.via_fill_value().__gt__()": "Accessor Fill Value", "SeriesHE.via_fill_value().__ge__()": "Accessor Fill Value", "SeriesHE.via_fill_value().__radd__()": "Accessor Fill Value", "SeriesHE.via_fill_value().__rsub__()": "Accessor Fill Value", "SeriesHE.via_fill_value().__rmul__()": "Accessor Fill Value", "SeriesHE.via_fill_value().__rtruediv__()": "Accessor Fill Value", "SeriesHE.via_fill_value().__rfloordiv__()": "Accessor Fill Value", "SeriesHE.via_re().search()": "Accessor Regular Expression", "SeriesHE.via_re().match()": "Accessor Regular Expression", "SeriesHE.via_re().fullmatch()": "Accessor Regular Expression", "SeriesHE.via_re().split()": "Accessor Regular Expression", "SeriesHE.via_re().findall()": "Accessor Regular Expression", "SeriesHE.via_re().sub()": "Accessor Regular Expression", "SeriesHE.via_re().subn()": "Accessor Regular Expression", "SeriesHE.via_hashlib().to_bytes()": "Accessor Hashlib", "SeriesHE.via_hashlib().md5()": "Accessor Hashlib", "SeriesHE.via_hashlib().sha256()": "Accessor Hashlib", "SeriesHE.via_hashlib().sha512()": "Accessor Hashlib", "SeriesHE.via_hashlib().sha3_256()": "Accessor Hashlib", "SeriesHE.via_hashlib().sha3_512()": "Accessor Hashlib", "SeriesHE.via_hashlib().shake_128()": "Accessor Hashlib", "SeriesHE.via_hashlib().shake_256()": "Accessor Hashlib", "SeriesHE.via_hashlib().blake2b()": "Accessor Hashlib", "SeriesHE.via_hashlib().blake2s()": "Accessor Hashlib", "SeriesHE.via_type_clinic.to_hint()": "Accessor Type Clinic", "SeriesHE.via_type_clinic.check()": "Accessor Type Clinic", "SeriesHE.via_type_clinic.warn()": "Accessor Type Clinic", "SeriesHE.via_type_clinic.__call__()": "Accessor Type Clinic", "SeriesHE.via_type_clinic.__repr__()": "Accessor Type Clinic", "SeriesHE.via_mapping.__getitem__()": "Accessor Mapping", "SeriesHE.via_mapping.__iter__()": "Accessor Mapping", "SeriesHE.via_mapping.__len__()": "Accessor Mapping", "SeriesHE.via_mapping.__contains__()": "Accessor Mapping", "SeriesHE.via_mapping.__repr__()": "Accessor Mapping", "SeriesHE.via_mapping.keys()": "Accessor Mapping", "SeriesHE.via_mapping.values()": "Accessor Mapping", "SeriesHE.via_mapping.items()": "Accessor Mapping", "Frame.__init__()": "Constructor", "Frame.from_arrow()": "Constructor", "Frame.from_clipboard()": "Constructor", "Frame.from_concat()": "Constructor", "Frame.from_concat_items()": "Constructor", "Frame.from_csv()": "Constructor", "Frame.from_delimited()": "Constructor", "Frame.from_dict()": "Constructor", "Frame.from_dict_fields()": "Constructor", "Frame.from_dict_records()": "Constructor", "Frame.from_dict_records_items()": "Constructor", "Frame.from_element()": "Constructor", "Frame.from_element_items()": "Constructor", "Frame.from_elements()": "Constructor", "Frame.from_fields()": "Constructor", "Frame.from_items()": "Constructor", "Frame.from_json_columns()": "Constructor", "Frame.from_json_index()": "Constructor", "Frame.from_json_records()": "Constructor", "Frame.from_json_split()": "Constructor", "Frame.from_json_typed()": "Constructor", "Frame.from_json_values()": "Constructor", "Frame.from_npy()": "Constructor", "Frame.from_npy_mmap()": "Constructor", "Frame.from_npz()": "Constructor", "Frame.from_overlay()": "Constructor", "Frame.from_pandas()": "Constructor", "Frame.from_parquet()": "Constructor", "Frame.from_pickle()": "Constructor", "Frame.from_records()": "Constructor", "Frame.from_records_items()": "Constructor", "Frame.from_series()": "Constructor", "Frame.from_sql()": "Constructor", "Frame.from_sqlite()": "Constructor", "Frame.from_structured_array()": "Constructor", "Frame.from_tsv()": "Constructor", "Frame.from_xlsx()": "Constructor", "Frame.to_arrow()": "Exporter", "Frame.to_clipboard()": "Exporter", "Frame.to_csv()": "Exporter", "Frame.to_delimited()": "Exporter", "Frame.to_frame()": "Exporter", "Frame.to_frame_go()": "Exporter", "Frame.to_frame_he()": "Exporter", "Frame.to_html()": "Exporter", "Frame.to_html_datatables()": "Exporter", "Frame.to_json_columns()": "Exporter", "Frame.to_json_index()": "Exporter", "Frame.to_json_records()": "Exporter", "Frame.to_json_split()": "Exporter", "Frame.to_json_typed()": "Exporter", "Frame.to_json_values()": "Exporter", "Frame.to_latex()": "Exporter", "Frame.to_markdown()": "Exporter", "Frame.to_npy()": "Exporter", "Frame.to_npz()": "Exporter", "Frame.to_pairs()": "Exporter", "Frame.to_pandas()": "Exporter", "Frame.to_parquet()": "Exporter", "Frame.to_pickle()": "Exporter", "Frame.to_rst()": "Exporter", "Frame.to_series()": "Exporter", "Frame.to_sql()": "Exporter", "Frame.to_sqlite()": "Exporter", "Frame.to_tsv()": "Exporter", "Frame.to_visidata()": "Exporter", "Frame.to_xarray()": "Exporter", "Frame.to_xlsx()": "Exporter", "Frame.STATIC": "Attribute", "Frame.T": "Attribute", "Frame.columns": "Attribute", "Frame.dtypes": "Attribute", "Frame.index": "Attribute", "Frame.memory": "Attribute", "Frame.mloc": "Attribute", "Frame.name": "Attribute", "Frame.nbytes": "Attribute", "Frame.ndim": "Attribute", "Frame.shape": "Attribute", "Frame.size": "Attribute", "Frame.__array__()": "Method", "Frame.__array_ufunc__()": "Method", "Frame.__bool__()": "Method", "Frame.__copy__()": "Method", "Frame.__dataframe__()": "Method", "Frame.__deepcopy__()": "Method", "Frame.__len__()": "Method", "Frame.__round__()": "Method", "Frame.all()": "Method", "Frame.any()": "Method", "Frame.astype[]()": "Method", "Frame.astype()": "Method", "Frame.clip()": "Method", "Frame.consolidate[]": "Method", "Frame.consolidate()": "Method", "Frame.consolidate.status": "Method", "Frame.corr()": "Method", "Frame.count()": "Method", "Frame.cov()": "Method", "Frame.cumprod()": "Method", "Frame.cumsum()": "Method", "Frame.drop_duplicated()": "Method", "Frame.dropfalsy()": "Method", "Frame.dropna()": "Method", "Frame.duplicated()": "Method", "Frame.equals()": "Method", "Frame.fillfalsy()": "Method", "Frame.fillfalsy_backward()": "Method", "Frame.fillfalsy_forward()": "Method", "Frame.fillfalsy_leading()": "Method", "Frame.fillfalsy_trailing()": "Method", "Frame.fillna()": "Method", "Frame.fillna_backward()": "Method", "Frame.fillna_forward()": "Method", "Frame.fillna_leading()": "Method", "Frame.fillna_trailing()": "Method", "Frame.head()": "Method", "Frame.iloc_max()": "Method", "Frame.iloc_min()": "Method", "Frame.iloc_notfalsy_first()": "Method", "Frame.iloc_notfalsy_last()": "Method", "Frame.iloc_notna_first()": "Method", "Frame.iloc_notna_last()": "Method", "Frame.insert_after()": "Method", "Frame.insert_before()": "Method", "Frame.isfalsy()": "Method", "Frame.isin()": "Method", "Frame.isna()": "Method", "Frame.join_inner()": "Method", "Frame.join_left()": "Method", "Frame.join_outer()": "Method", "Frame.join_right()": "Method", "Frame.loc_max()": "Method", "Frame.loc_min()": "Method", "Frame.loc_notfalsy_first()": "Method", "Frame.loc_notfalsy_last()": "Method", "Frame.loc_notna_first()": "Method", "Frame.loc_notna_last()": "Method", "Frame.max()": "Method", "Frame.mean()": "Method", "Frame.median()": "Method", "Frame.merge_inner()": "Method", "Frame.merge_left()": "Method", "Frame.merge_outer()": "Method", "Frame.merge_right()": "Method", "Frame.min()": "Method", "Frame.notfalsy()": "Method", "Frame.notna()": "Method", "Frame.pivot()": "Method", "Frame.pivot_stack()": "Method", "Frame.pivot_unstack()": "Method", "Frame.prod()": "Method", "Frame.rank_dense()": "Method", "Frame.rank_max()": "Method", "Frame.rank_mean()": "Method", "Frame.rank_min()": "Method", "Frame.rank_ordinal()": "Method", "Frame.rehierarch()": "Method", "Frame.reindex()": "Method", "Frame.relabel()": "Method", "Frame.relabel_flat()": "Method", "Frame.relabel_level_add()": "Method", "Frame.relabel_level_drop()": "Method", "Frame.relabel_shift_in()": "Method", "Frame.relabel_shift_out()": "Method", "Frame.rename()": "Method", "Frame.roll()": "Method", "Frame.sample()": "Method", "Frame.set_columns()": "Method", "Frame.set_columns_hierarchy()": "Method", "Frame.set_index()": "Method", "Frame.set_index_hierarchy()": "Method", "Frame.shift()": "Method", "Frame.sort_columns()": "Method", "Frame.sort_index()": "Method", "Frame.sort_values()": "Method", "Frame.std()": "Method", "Frame.sum()": "Method", "Frame.tail()": "Method", "Frame.transpose()": "Method", "Frame.unique()": "Method", "Frame.unique_enumerated()": "Method", "Frame.unset_columns()": "Method", "Frame.unset_index()": "Method", "Frame.var()": "Method", "Frame.__contains__()": "Dictionary-Like", "Frame.__iter__()": "Dictionary-Like", "Frame.__reversed__()": "Dictionary-Like", "Frame.get()": "Dictionary-Like", "Frame.items()": "Dictionary-Like", "Frame.keys()": "Dictionary-Like", "Frame.values": "Dictionary-Like", "Frame.interface": "Display", "Frame.__repr__()": "Display", "Frame.__str__()": "Display", "Frame.display()": "Display", "Frame.display_tall()": "Display", "Frame.display_wide()": "Display", "Frame.assign[]()": "Assignment", "Frame.assign[].apply()": "Assignment", "Frame.assign[].apply_element()": "Assignment", "Frame.assign[].apply_element_items()": "Assignment", "Frame.assign.iloc[]()": "Assignment", "Frame.assign.iloc[].apply()": "Assignment", "Frame.assign.iloc[].apply_element()": "Assignment", "Frame.assign.iloc[].apply_element_items()": "Assignment", "Frame.assign.loc[]()": "Assignment", "Frame.assign.loc[].apply()": "Assignment", "Frame.assign.loc[].apply_element()": "Assignment", "Frame.assign.loc[].apply_element_items()": "Assignment", "Frame.assign.bloc[]()": "Assignment", "Frame.assign.bloc[].apply()": "Assignment", "Frame.assign.bloc[].apply_element()": "Assignment", "Frame.assign.bloc[].apply_element_items()": "Assignment", "Frame.bloc[]": "Selector", "Frame.drop[]": "Selector", "Frame.drop.iloc[]": "Selector", "Frame.drop.loc[]": "Selector", "Frame.mask[]": "Selector", "Frame.mask.iloc[]": "Selector", "Frame.mask.loc[]": "Selector", "Frame.masked_array[]": "Selector", "Frame.masked_array.iloc[]": "Selector", "Frame.masked_array.loc[]": "Selector", "Frame.[]": "Selector", "Frame.iloc[]": "Selector", "Frame.loc[]": "Selector", "Frame.iter_array()": "Iterator", "Frame.iter_array().apply()": "Iterator", "Frame.iter_array().apply_iter()": "Iterator", "Frame.iter_array().apply_iter_items()": "Iterator", "Frame.iter_array().apply_pool()": "Iterator", "Frame.iter_array_items()": "Iterator", "Frame.iter_array_items().apply()": "Iterator", "Frame.iter_array_items().apply_iter()": "Iterator", "Frame.iter_array_items().apply_iter_items()": "Iterator", "Frame.iter_array_items().apply_pool()": "Iterator", "Frame.iter_element()": "Iterator", "Frame.iter_element().apply()": "Iterator", "Frame.iter_element().apply_iter()": "Iterator", "Frame.iter_element().apply_iter_items()": "Iterator", "Frame.iter_element().apply_pool()": "Iterator", "Frame.iter_element().map_all()": "Iterator", "Frame.iter_element().map_all_iter()": "Iterator", "Frame.iter_element().map_all_iter_items()": "Iterator", "Frame.iter_element().map_any()": "Iterator", "Frame.iter_element().map_any_iter()": "Iterator", "Frame.iter_element().map_any_iter_items()": "Iterator", "Frame.iter_element().map_fill()": "Iterator", "Frame.iter_element().map_fill_iter()": "Iterator", "Frame.iter_element().map_fill_iter_items()": "Iterator", "Frame.iter_element_items()": "Iterator", "Frame.iter_element_items().apply()": "Iterator", "Frame.iter_element_items().apply_iter()": "Iterator", "Frame.iter_element_items().apply_iter_items()": "Iterator", "Frame.iter_element_items().apply_pool()": "Iterator", "Frame.iter_element_items().map_all()": "Iterator", "Frame.iter_element_items().map_all_iter()": "Iterator", "Frame.iter_element_items().map_all_iter_items()": "Iterator", "Frame.iter_element_items().map_any()": "Iterator", "Frame.iter_element_items().map_any_iter()": "Iterator", "Frame.iter_element_items().map_any_iter_items()": "Iterator", "Frame.iter_element_items().map_fill()": "Iterator", "Frame.iter_element_items().map_fill_iter()": "Iterator", "Frame.iter_element_items().map_fill_iter_items()": "Iterator", "Frame.iter_group()": "Iterator", "Frame.iter_group().apply()": "Iterator", "Frame.iter_group().apply_iter()": "Iterator", "Frame.iter_group().apply_iter_items()": "Iterator", "Frame.iter_group().apply_pool()": "Iterator", "Frame.iter_group().reduce.from_func().keys()": "Iterator", "Frame.iter_group().reduce.from_func().__iter__()": "Iterator", "Frame.iter_group().reduce.from_func().items()": "Iterator", "Frame.iter_group().reduce.from_func().values()": "Iterator", "Frame.iter_group().reduce.from_func().to_frame()": "Iterator", "Frame.iter_group().reduce.from_map_func().keys()": "Iterator", "Frame.iter_group().reduce.from_map_func().__iter__()": "Iterator", "Frame.iter_group().reduce.from_map_func().items()": "Iterator", "Frame.iter_group().reduce.from_map_func().values()": "Iterator", "Frame.iter_group().reduce.from_map_func().to_frame()": "Iterator", "Frame.iter_group().reduce.from_label_map().keys()": "Iterator", "Frame.iter_group().reduce.from_label_map().__iter__()": "Iterator", "Frame.iter_group().reduce.from_label_map().items()": "Iterator", "Frame.iter_group().reduce.from_label_map().values()": "Iterator", "Frame.iter_group().reduce.from_label_map().to_frame()": "Iterator", "Frame.iter_group().reduce.from_label_pair_map().keys()": "Iterator", "Frame.iter_group().reduce.from_label_pair_map().__iter__()": "Iterator", "Frame.iter_group().reduce.from_label_pair_map().items()": "Iterator", "Frame.iter_group().reduce.from_label_pair_map().values()": "Iterator", "Frame.iter_group().reduce.from_label_pair_map().to_frame()": "Iterator", "Frame.iter_group_array()": "Iterator", "Frame.iter_group_array().apply()": "Iterator", "Frame.iter_group_array().apply_iter()": "Iterator", "Frame.iter_group_array().apply_iter_items()": "Iterator", "Frame.iter_group_array().apply_pool()": "Iterator", "Frame.iter_group_array().reduce.from_func().keys()": "Iterator", "Frame.iter_group_array().reduce.from_func().__iter__()": "Iterator", "Frame.iter_group_array().reduce.from_func().items()": "Iterator", "Frame.iter_group_array().reduce.from_func().values()": "Iterator", "Frame.iter_group_array().reduce.from_func().to_frame()": "Iterator", "Frame.iter_group_array().reduce.from_map_func().keys()": "Iterator", "Frame.iter_group_array().reduce.from_map_func().__iter__()": "Iterator", "Frame.iter_group_array().reduce.from_map_func().items()": "Iterator", "Frame.iter_group_array().reduce.from_map_func().values()": "Iterator", "Frame.iter_group_array().reduce.from_map_func().to_frame()": "Iterator", "Frame.iter_group_array().reduce.from_label_map().keys()": "Iterator", "Frame.iter_group_array().reduce.from_label_map().__iter__()": "Iterator", "Frame.iter_group_array().reduce.from_label_map().items()": "Iterator", "Frame.iter_group_array().reduce.from_label_map().values()": "Iterator", "Frame.iter_group_array().reduce.from_label_map().to_frame()": "Iterator", "Frame.iter_group_array().reduce.from_label_pair_map().keys()": "Iterator", "Frame.iter_group_array().reduce.from_label_pair_map().__iter__()": "Iterator", "Frame.iter_group_array().reduce.from_label_pair_map().items()": "Iterator", "Frame.iter_group_array().reduce.from_label_pair_map().values()": "Iterator", "Frame.iter_group_array().reduce.from_label_pair_map().to_frame()": "Iterator", "Frame.iter_group_array_items()": "Iterator", "Frame.iter_group_array_items().apply()": "Iterator", "Frame.iter_group_array_items().apply_iter()": "Iterator", "Frame.iter_group_array_items().apply_iter_items()": "Iterator", "Frame.iter_group_array_items().apply_pool()": "Iterator", "Frame.iter_group_array_items().reduce.from_func().keys()": "Iterator", "Frame.iter_group_array_items().reduce.from_func().__iter__()": "Iterator", "Frame.iter_group_array_items().reduce.from_func().items()": "Iterator", "Frame.iter_group_array_items().reduce.from_func().values()": "Iterator", "Frame.iter_group_array_items().reduce.from_func().to_frame()": "Iterator", "Frame.iter_group_array_items().reduce.from_map_func().keys()": "Iterator", "Frame.iter_group_array_items().reduce.from_map_func().__iter__()": "Iterator", "Frame.iter_group_array_items().reduce.from_map_func().items()": "Iterator", "Frame.iter_group_array_items().reduce.from_map_func().values()": "Iterator", "Frame.iter_group_array_items().reduce.from_map_func().to_frame()": "Iterator", "Frame.iter_group_array_items().reduce.from_label_map().keys()": "Iterator", "Frame.iter_group_array_items().reduce.from_label_map().__iter__()": "Iterator", "Frame.iter_group_array_items().reduce.from_label_map().items()": "Iterator", "Frame.iter_group_array_items().reduce.from_label_map().values()": "Iterator", "Frame.iter_group_array_items().reduce.from_label_map().to_frame()": "Iterator", "Frame.iter_group_array_items().reduce.from_label_pair_map().keys()": "Iterator", "Frame.iter_group_array_items().reduce.from_label_pair_map().__iter__()": "Iterator", "Frame.iter_group_array_items().reduce.from_label_pair_map().items()": "Iterator", "Frame.iter_group_array_items().reduce.from_label_pair_map().values()": "Iterator", "Frame.iter_group_array_items().reduce.from_label_pair_map().to_frame()": "Iterator", "Frame.iter_group_items()": "Iterator", "Frame.iter_group_items().apply()": "Iterator", "Frame.iter_group_items().apply_iter()": "Iterator", "Frame.iter_group_items().apply_iter_items()": "Iterator", "Frame.iter_group_items().apply_pool()": "Iterator", "Frame.iter_group_items().reduce.from_func().keys()": "Iterator", "Frame.iter_group_items().reduce.from_func().__iter__()": "Iterator", "Frame.iter_group_items().reduce.from_func().items()": "Iterator", "Frame.iter_group_items().reduce.from_func().values()": "Iterator", "Frame.iter_group_items().reduce.from_func().to_frame()": "Iterator", "Frame.iter_group_items().reduce.from_map_func().keys()": "Iterator", "Frame.iter_group_items().reduce.from_map_func().__iter__()": "Iterator", "Frame.iter_group_items().reduce.from_map_func().items()": "Iterator", "Frame.iter_group_items().reduce.from_map_func().values()": "Iterator", "Frame.iter_group_items().reduce.from_map_func().to_frame()": "Iterator", "Frame.iter_group_items().reduce.from_label_map().keys()": "Iterator", "Frame.iter_group_items().reduce.from_label_map().__iter__()": "Iterator", "Frame.iter_group_items().reduce.from_label_map().items()": "Iterator", "Frame.iter_group_items().reduce.from_label_map().values()": "Iterator", "Frame.iter_group_items().reduce.from_label_map().to_frame()": "Iterator", "Frame.iter_group_items().reduce.from_label_pair_map().keys()": "Iterator", "Frame.iter_group_items().reduce.from_label_pair_map().__iter__()": "Iterator", "Frame.iter_group_items().reduce.from_label_pair_map().items()": "Iterator", "Frame.iter_group_items().reduce.from_label_pair_map().values()": "Iterator", "Frame.iter_group_items().reduce.from_label_pair_map().to_frame()": "Iterator", "Frame.iter_group_labels()": "Iterator", "Frame.iter_group_labels().apply()": "Iterator", "Frame.iter_group_labels().apply_iter()": "Iterator", "Frame.iter_group_labels().apply_iter_items()": "Iterator", "Frame.iter_group_labels().apply_pool()": "Iterator", "Frame.iter_group_labels_array()": "Iterator", "Frame.iter_group_labels_array().apply()": "Iterator", "Frame.iter_group_labels_array().apply_iter()": "Iterator", "Frame.iter_group_labels_array().apply_iter_items()": "Iterator", "Frame.iter_group_labels_array().apply_pool()": "Iterator", "Frame.iter_group_labels_array_items()": "Iterator", "Frame.iter_group_labels_array_items().apply()": "Iterator", "Frame.iter_group_labels_array_items().apply_iter()": "Iterator", "Frame.iter_group_labels_array_items().apply_iter_items()": "Iterator", "Frame.iter_group_labels_array_items().apply_pool()": "Iterator", "Frame.iter_group_labels_items()": "Iterator", "Frame.iter_group_labels_items().apply()": "Iterator", "Frame.iter_group_labels_items().apply_iter()": "Iterator", "Frame.iter_group_labels_items().apply_iter_items()": "Iterator", "Frame.iter_group_labels_items().apply_pool()": "Iterator", "Frame.iter_group_other()": "Iterator", "Frame.iter_group_other().apply()": "Iterator", "Frame.iter_group_other().apply_iter()": "Iterator", "Frame.iter_group_other().apply_iter_items()": "Iterator", "Frame.iter_group_other().apply_pool()": "Iterator", "Frame.iter_group_other().reduce.from_func().keys()": "Iterator", "Frame.iter_group_other().reduce.from_func().__iter__()": "Iterator", "Frame.iter_group_other().reduce.from_func().items()": "Iterator", "Frame.iter_group_other().reduce.from_func().values()": "Iterator", "Frame.iter_group_other().reduce.from_func().to_frame()": "Iterator", "Frame.iter_group_other().reduce.from_map_func().keys()": "Iterator", "Frame.iter_group_other().reduce.from_map_func().__iter__()": "Iterator", "Frame.iter_group_other().reduce.from_map_func().items()": "Iterator", "Frame.iter_group_other().reduce.from_map_func().values()": "Iterator", "Frame.iter_group_other().reduce.from_map_func().to_frame()": "Iterator", "Frame.iter_group_other().reduce.from_label_map().keys()": "Iterator", "Frame.iter_group_other().reduce.from_label_map().__iter__()": "Iterator", "Frame.iter_group_other().reduce.from_label_map().items()": "Iterator", "Frame.iter_group_other().reduce.from_label_map().values()": "Iterator", "Frame.iter_group_other().reduce.from_label_map().to_frame()": "Iterator", "Frame.iter_group_other().reduce.from_label_pair_map().keys()": "Iterator", "Frame.iter_group_other().reduce.from_label_pair_map().__iter__()": "Iterator", "Frame.iter_group_other().reduce.from_label_pair_map().items()": "Iterator", "Frame.iter_group_other().reduce.from_label_pair_map().values()": "Iterator", "Frame.iter_group_other().reduce.from_label_pair_map().to_frame()": "Iterator", "Frame.iter_group_other_array()": "Iterator", "Frame.iter_group_other_array().apply()": "Iterator", "Frame.iter_group_other_array().apply_iter()": "Iterator", "Frame.iter_group_other_array().apply_iter_items()": "Iterator", "Frame.iter_group_other_array().apply_pool()": "Iterator", "Frame.iter_group_other_array().reduce.from_func().keys()": "Iterator", "Frame.iter_group_other_array().reduce.from_func().__iter__()": "Iterator", "Frame.iter_group_other_array().reduce.from_func().items()": "Iterator", "Frame.iter_group_other_array().reduce.from_func().values()": "Iterator", "Frame.iter_group_other_array().reduce.from_func().to_frame()": "Iterator", "Frame.iter_group_other_array().reduce.from_map_func().keys()": "Iterator", "Frame.iter_group_other_array().reduce.from_map_func().__iter__()": "Iterator", "Frame.iter_group_other_array().reduce.from_map_func().items()": "Iterator", "Frame.iter_group_other_array().reduce.from_map_func().values()": "Iterator", "Frame.iter_group_other_array().reduce.from_map_func().to_frame()": "Iterator", "Frame.iter_group_other_array().reduce.from_label_map().keys()": "Iterator", "Frame.iter_group_other_array().reduce.from_label_map().__iter__()": "Iterator", "Frame.iter_group_other_array().reduce.from_label_map().items()": "Iterator", "Frame.iter_group_other_array().reduce.from_label_map().values()": "Iterator", "Frame.iter_group_other_array().reduce.from_label_map().to_frame()": "Iterator", "Frame.iter_group_other_array().reduce.from_label_pair_map().keys()": "Iterator", "Frame.iter_group_other_array().reduce.from_label_pair_map().__iter__()": "Iterator", "Frame.iter_group_other_array().reduce.from_label_pair_map().items()": "Iterator", "Frame.iter_group_other_array().reduce.from_label_pair_map().values()": "Iterator", "Frame.iter_group_other_array().reduce.from_label_pair_map().to_frame()": "Iterator", "Frame.iter_group_other_array_items()": "Iterator", "Frame.iter_group_other_array_items().apply()": "Iterator", "Frame.iter_group_other_array_items().apply_iter()": "Iterator", "Frame.iter_group_other_array_items().apply_iter_items()": "Iterator", "Frame.iter_group_other_array_items().apply_pool()": "Iterator", "Frame.iter_group_other_array_items().reduce.from_func().keys()": "Iterator", "Frame.iter_group_other_array_items().reduce.from_func().__iter__()": "Iterator", "Frame.iter_group_other_array_items().reduce.from_func().items()": "Iterator", "Frame.iter_group_other_array_items().reduce.from_func().values()": "Iterator", "Frame.iter_group_other_array_items().reduce.from_func().to_frame()": "Iterator", "Frame.iter_group_other_array_items().reduce.from_map_func().keys()": "Iterator", "Frame.iter_group_other_array_items().reduce.from_map_func().__iter__()": "Iterator", "Frame.iter_group_other_array_items().reduce.from_map_func().items()": "Iterator", "Frame.iter_group_other_array_items().reduce.from_map_func().values()": "Iterator", "Frame.iter_group_other_array_items().reduce.from_map_func().to_frame()": "Iterator", "Frame.iter_group_other_array_items().reduce.from_label_map().keys()": "Iterator", "Frame.iter_group_other_array_items().reduce.from_label_map().__iter__()": "Iterator", "Frame.iter_group_other_array_items().reduce.from_label_map().items()": "Iterator", "Frame.iter_group_other_array_items().reduce.from_label_map().values()": "Iterator", "Frame.iter_group_other_array_items().reduce.from_label_map().to_frame()": "Iterator", "Frame.iter_group_other_array_items().reduce.from_label_pair_map().keys()": "Iterator", "Frame.iter_group_other_array_items().reduce.from_label_pair_map().__iter__()": "Iterator", "Frame.iter_group_other_array_items().reduce.from_label_pair_map().items()": "Iterator", "Frame.iter_group_other_array_items().reduce.from_label_pair_map().values()": "Iterator", "Frame.iter_group_other_array_items().reduce.from_label_pair_map().to_frame()": "Iterator", "Frame.iter_group_other_items()": "Iterator", "Frame.iter_group_other_items().apply()": "Iterator", "Frame.iter_group_other_items().apply_iter()": "Iterator", "Frame.iter_group_other_items().apply_iter_items()": "Iterator", "Frame.iter_group_other_items().apply_pool()": "Iterator", "Frame.iter_group_other_items().reduce.from_func().keys()": "Iterator", "Frame.iter_group_other_items().reduce.from_func().__iter__()": "Iterator", "Frame.iter_group_other_items().reduce.from_func().items()": "Iterator", "Frame.iter_group_other_items().reduce.from_func().values()": "Iterator", "Frame.iter_group_other_items().reduce.from_func().to_frame()": "Iterator", "Frame.iter_group_other_items().reduce.from_map_func().keys()": "Iterator", "Frame.iter_group_other_items().reduce.from_map_func().__iter__()": "Iterator", "Frame.iter_group_other_items().reduce.from_map_func().items()": "Iterator", "Frame.iter_group_other_items().reduce.from_map_func().values()": "Iterator", "Frame.iter_group_other_items().reduce.from_map_func().to_frame()": "Iterator", "Frame.iter_group_other_items().reduce.from_label_map().keys()": "Iterator", "Frame.iter_group_other_items().reduce.from_label_map().__iter__()": "Iterator", "Frame.iter_group_other_items().reduce.from_label_map().items()": "Iterator", "Frame.iter_group_other_items().reduce.from_label_map().values()": "Iterator", "Frame.iter_group_other_items().reduce.from_label_map().to_frame()": "Iterator", "Frame.iter_group_other_items().reduce.from_label_pair_map().keys()": "Iterator", "Frame.iter_group_other_items().reduce.from_label_pair_map().__iter__()": "Iterator", "Frame.iter_group_other_items().reduce.from_label_pair_map().items()": "Iterator", "Frame.iter_group_other_items().reduce.from_label_pair_map().values()": "Iterator", "Frame.iter_group_other_items().reduce.from_label_pair_map().to_frame()": "Iterator", "Frame.iter_series()": "Iterator", "Frame.iter_series().apply()": "Iterator", "Frame.iter_series().apply_iter()": "Iterator", "Frame.iter_series().apply_iter_items()": "Iterator", "Frame.iter_series().apply_pool()": "Iterator", "Frame.iter_series_items()": "Iterator", "Frame.iter_series_items().apply()": "Iterator", "Frame.iter_series_items().apply_iter()": "Iterator", "Frame.iter_series_items().apply_iter_items()": "Iterator", "Frame.iter_series_items().apply_pool()": "Iterator", "Frame.iter_tuple()": "Iterator", "Frame.iter_tuple().apply()": "Iterator", "Frame.iter_tuple().apply_iter()": "Iterator", "Frame.iter_tuple().apply_iter_items()": "Iterator", "Frame.iter_tuple().apply_pool()": "Iterator", "Frame.iter_tuple().map_all()": "Iterator", "Frame.iter_tuple().map_all_iter()": "Iterator", "Frame.iter_tuple().map_all_iter_items()": "Iterator", "Frame.iter_tuple().map_any()": "Iterator", "Frame.iter_tuple().map_any_iter()": "Iterator", "Frame.iter_tuple().map_any_iter_items()": "Iterator", "Frame.iter_tuple().map_fill()": "Iterator", "Frame.iter_tuple().map_fill_iter()": "Iterator", "Frame.iter_tuple().map_fill_iter_items()": "Iterator", "Frame.iter_tuple_items()": "Iterator", "Frame.iter_tuple_items().apply()": "Iterator", "Frame.iter_tuple_items().apply_iter()": "Iterator", "Frame.iter_tuple_items().apply_iter_items()": "Iterator", "Frame.iter_tuple_items().apply_pool()": "Iterator", "Frame.iter_tuple_items().map_all()": "Iterator", "Frame.iter_tuple_items().map_all_iter()": "Iterator", "Frame.iter_tuple_items().map_all_iter_items()": "Iterator", "Frame.iter_tuple_items().map_any()": "Iterator", "Frame.iter_tuple_items().map_any_iter()": "Iterator", "Frame.iter_tuple_items().map_any_iter_items()": "Iterator", "Frame.iter_tuple_items().map_fill()": "Iterator", "Frame.iter_tuple_items().map_fill_iter()": "Iterator", "Frame.iter_tuple_items().map_fill_iter_items()": "Iterator", "Frame.iter_window()": "Iterator", "Frame.iter_window().apply()": "Iterator", "Frame.iter_window().apply_iter()": "Iterator", "Frame.iter_window().apply_iter_items()": "Iterator", "Frame.iter_window().apply_pool()": "Iterator", "Frame.iter_window().reduce.from_func().keys()": "Iterator", "Frame.iter_window().reduce.from_func().__iter__()": "Iterator", "Frame.iter_window().reduce.from_func().items()": "Iterator", "Frame.iter_window().reduce.from_func().values()": "Iterator", "Frame.iter_window().reduce.from_func().to_frame()": "Iterator", "Frame.iter_window().reduce.from_map_func().keys()": "Iterator", "Frame.iter_window().reduce.from_map_func().__iter__()": "Iterator", "Frame.iter_window().reduce.from_map_func().items()": "Iterator", "Frame.iter_window().reduce.from_map_func().values()": "Iterator", "Frame.iter_window().reduce.from_map_func().to_frame()": "Iterator", "Frame.iter_window().reduce.from_label_map().keys()": "Iterator", "Frame.iter_window().reduce.from_label_map().__iter__()": "Iterator", "Frame.iter_window().reduce.from_label_map().items()": "Iterator", "Frame.iter_window().reduce.from_label_map().values()": "Iterator", "Frame.iter_window().reduce.from_label_map().to_frame()": "Iterator", "Frame.iter_window().reduce.from_label_pair_map().keys()": "Iterator", "Frame.iter_window().reduce.from_label_pair_map().__iter__()": "Iterator", "Frame.iter_window().reduce.from_label_pair_map().items()": "Iterator", "Frame.iter_window().reduce.from_label_pair_map().values()": "Iterator", "Frame.iter_window().reduce.from_label_pair_map().to_frame()": "Iterator", "Frame.iter_window_array()": "Iterator", "Frame.iter_window_array().apply()": "Iterator", "Frame.iter_window_array().apply_iter()": "Iterator", "Frame.iter_window_array().apply_iter_items()": "Iterator", "Frame.iter_window_array().apply_pool()": "Iterator", "Frame.iter_window_array().reduce.from_func().keys()": "Iterator", "Frame.iter_window_array().reduce.from_func().__iter__()": "Iterator", "Frame.iter_window_array().reduce.from_func().items()": "Iterator", "Frame.iter_window_array().reduce.from_func().values()": "Iterator", "Frame.iter_window_array().reduce.from_func().to_frame()": "Iterator", "Frame.iter_window_array().reduce.from_map_func().keys()": "Iterator", "Frame.iter_window_array().reduce.from_map_func().__iter__()": "Iterator", "Frame.iter_window_array().reduce.from_map_func().items()": "Iterator", "Frame.iter_window_array().reduce.from_map_func().values()": "Iterator", "Frame.iter_window_array().reduce.from_map_func().to_frame()": "Iterator", "Frame.iter_window_array().reduce.from_label_map().keys()": "Iterator", "Frame.iter_window_array().reduce.from_label_map().__iter__()": "Iterator", "Frame.iter_window_array().reduce.from_label_map().items()": "Iterator", "Frame.iter_window_array().reduce.from_label_map().values()": "Iterator", "Frame.iter_window_array().reduce.from_label_map().to_frame()": "Iterator", "Frame.iter_window_array().reduce.from_label_pair_map().keys()": "Iterator", "Frame.iter_window_array().reduce.from_label_pair_map().__iter__()": "Iterator", "Frame.iter_window_array().reduce.from_label_pair_map().items()": "Iterator", "Frame.iter_window_array().reduce.from_label_pair_map().values()": "Iterator", "Frame.iter_window_array().reduce.from_label_pair_map().to_frame()": "Iterator", "Frame.iter_window_array_items()": "Iterator", "Frame.iter_window_array_items().apply()": "Iterator", "Frame.iter_window_array_items().apply_iter()": "Iterator", "Frame.iter_window_array_items().apply_iter_items()": "Iterator", "Frame.iter_window_array_items().apply_pool()": "Iterator", "Frame.iter_window_array_items().reduce.from_func().keys()": "Iterator", "Frame.iter_window_array_items().reduce.from_func().__iter__()": "Iterator", "Frame.iter_window_array_items().reduce.from_func().items()": "Iterator", "Frame.iter_window_array_items().reduce.from_func().values()": "Iterator", "Frame.iter_window_array_items().reduce.from_func().to_frame()": "Iterator", "Frame.iter_window_array_items().reduce.from_map_func().keys()": "Iterator", "Frame.iter_window_array_items().reduce.from_map_func().__iter__()": "Iterator", "Frame.iter_window_array_items().reduce.from_map_func().items()": "Iterator", "Frame.iter_window_array_items().reduce.from_map_func().values()": "Iterator", "Frame.iter_window_array_items().reduce.from_map_func().to_frame()": "Iterator", "Frame.iter_window_array_items().reduce.from_label_map().keys()": "Iterator", "Frame.iter_window_array_items().reduce.from_label_map().__iter__()": "Iterator", "Frame.iter_window_array_items().reduce.from_label_map().items()": "Iterator", "Frame.iter_window_array_items().reduce.from_label_map().values()": "Iterator", "Frame.iter_window_array_items().reduce.from_label_map().to_frame()": "Iterator", "Frame.iter_window_array_items().reduce.from_label_pair_map().keys()": "Iterator", "Frame.iter_window_array_items().reduce.from_label_pair_map().__iter__()": "Iterator", "Frame.iter_window_array_items().reduce.from_label_pair_map().items()": "Iterator", "Frame.iter_window_array_items().reduce.from_label_pair_map().values()": "Iterator", "Frame.iter_window_array_items().reduce.from_label_pair_map().to_frame()": "Iterator", "Frame.iter_window_items()": "Iterator", "Frame.iter_window_items().apply()": "Iterator", "Frame.iter_window_items().apply_iter()": "Iterator", "Frame.iter_window_items().apply_iter_items()": "Iterator", "Frame.iter_window_items().apply_pool()": "Iterator", "Frame.iter_window_items().reduce.from_func().keys()": "Iterator", "Frame.iter_window_items().reduce.from_func().__iter__()": "Iterator", "Frame.iter_window_items().reduce.from_func().items()": "Iterator", "Frame.iter_window_items().reduce.from_func().values()": "Iterator", "Frame.iter_window_items().reduce.from_func().to_frame()": "Iterator", "Frame.iter_window_items().reduce.from_map_func().keys()": "Iterator", "Frame.iter_window_items().reduce.from_map_func().__iter__()": "Iterator", "Frame.iter_window_items().reduce.from_map_func().items()": "Iterator", "Frame.iter_window_items().reduce.from_map_func().values()": "Iterator", "Frame.iter_window_items().reduce.from_map_func().to_frame()": "Iterator", "Frame.iter_window_items().reduce.from_label_map().keys()": "Iterator", "Frame.iter_window_items().reduce.from_label_map().__iter__()": "Iterator", "Frame.iter_window_items().reduce.from_label_map().items()": "Iterator", "Frame.iter_window_items().reduce.from_label_map().values()": "Iterator", "Frame.iter_window_items().reduce.from_label_map().to_frame()": "Iterator", "Frame.iter_window_items().reduce.from_label_pair_map().keys()": "Iterator", "Frame.iter_window_items().reduce.from_label_pair_map().__iter__()": "Iterator", "Frame.iter_window_items().reduce.from_label_pair_map().items()": "Iterator", "Frame.iter_window_items().reduce.from_label_pair_map().values()": "Iterator", "Frame.iter_window_items().reduce.from_label_pair_map().to_frame()": "Iterator", "Frame.__add__()": "Operator Binary", "Frame.__and__()": "Operator Binary", "Frame.__eq__()": "Operator Binary", "Frame.__floordiv__()": "Operator Binary", "Frame.__ge__()": "Operator Binary", "Frame.__gt__()": "Operator Binary", "Frame.__le__()": "Operator Binary", "Frame.__lt__()": "Operator Binary", "Frame.__matmul__()": "Operator Binary", "Frame.__mod__()": "Operator Binary", "Frame.__mul__()": "Operator Binary", "Frame.__ne__()": "Operator Binary", "Frame.__or__()": "Operator Binary", "Frame.__pow__()": "Operator Binary", "Frame.__radd__()": "Operator Binary", "Frame.__rfloordiv__()": "Operator Binary", "Frame.__rmatmul__()": "Operator Binary", "Frame.__rmul__()": "Operator Binary", "Frame.__rshift__()": "Operator Binary", "Frame.__rsub__()": "Operator Binary", "Frame.__rtruediv__()": "Operator Binary", "Frame.__sub__()": "Operator Binary", "Frame.__truediv__()": "Operator Binary", "Frame.__xor__()": "Operator Binary", "Frame.__abs__()": "Operator Unary", "Frame.__invert__()": "Operator Unary", "Frame.__neg__()": "Operator Unary", "Frame.__pos__()": "Operator Unary", "Frame.abs()": "Operator Unary", "Frame.via_values.apply()": "Accessor Values", "Frame.via_values.__array_ufunc__()": "Accessor Values", "Frame.via_values.__call__()": "Accessor Values", "Frame.via_dt.__call__()": "Accessor Datetime", "Frame.via_dt.year": "Accessor Datetime", "Frame.via_dt.year_month": "Accessor Datetime", "Frame.via_dt.year_quarter": "Accessor Datetime", "Frame.via_dt.month": "Accessor Datetime", "Frame.via_dt.day": "Accessor Datetime", "Frame.via_dt.hour": "Accessor Datetime", "Frame.via_dt.minute": "Accessor Datetime", "Frame.via_dt.second": "Accessor Datetime", "Frame.via_dt.weekday()": "Accessor Datetime", "Frame.via_dt.quarter()": "Accessor Datetime", "Frame.via_dt.is_month_end()": "Accessor Datetime", "Frame.via_dt.is_month_start()": "Accessor Datetime", "Frame.via_dt.is_year_end()": "Accessor Datetime", "Frame.via_dt.is_year_start()": "Accessor Datetime", "Frame.via_dt.is_quarter_end()": "Accessor Datetime", "Frame.via_dt.is_quarter_start()": "Accessor Datetime", "Frame.via_dt.timetuple()": "Accessor Datetime", "Frame.via_dt.isoformat()": "Accessor Datetime", "Frame.via_dt.fromisoformat()": "Accessor Datetime", "Frame.via_dt.strftime()": "Accessor Datetime", "Frame.via_dt.strptime()": "Accessor Datetime", "Frame.via_dt.strpdate()": "Accessor Datetime", "Frame.via_str.__getitem__()": "Accessor String", "Frame.via_str.capitalize()": "Accessor String", "Frame.via_str.center()": "Accessor String", "Frame.via_str.contains()": "Accessor String", "Frame.via_str.count()": "Accessor String", "Frame.via_str.decode()": "Accessor String", "Frame.via_str.encode()": "Accessor String", "Frame.via_str.endswith()": "Accessor String", "Frame.via_str.find()": "Accessor String", "Frame.via_str.format()": "Accessor String", "Frame.via_str.index()": "Accessor String", "Frame.via_str.isalnum()": "Accessor String", "Frame.via_str.isalpha()": "Accessor String", "Frame.via_str.isdecimal()": "Accessor String", "Frame.via_str.isdigit()": "Accessor String", "Frame.via_str.islower()": "Accessor String", "Frame.via_str.isnumeric()": "Accessor String", "Frame.via_str.isspace()": "Accessor String", "Frame.via_str.istitle()": "Accessor String", "Frame.via_str.isupper()": "Accessor String", "Frame.via_str.ljust()": "Accessor String", "Frame.via_str.len()": "Accessor String", "Frame.via_str.lower()": "Accessor String", "Frame.via_str.lstrip()": "Accessor String", "Frame.via_str.partition()": "Accessor String", "Frame.via_str.replace()": "Accessor String", "Frame.via_str.rfind()": "Accessor String", "Frame.via_str.rindex()": "Accessor String", "Frame.via_str.rjust()": "Accessor String", "Frame.via_str.rpartition()": "Accessor String", "Frame.via_str.rsplit()": "Accessor String", "Frame.via_str.rstrip()": "Accessor String", "Frame.via_str.split()": "Accessor String", "Frame.via_str.startswith()": "Accessor String", "Frame.via_str.strip()": "Accessor String", "Frame.via_str.swapcase()": "Accessor String", "Frame.via_str.title()": "Accessor String", "Frame.via_str.upper()": "Accessor String", "Frame.via_str.zfill()": "Accessor String", "Frame.via_T.via_fill_value()": "Accessor Transpose", "Frame.via_T.__add__()": "Accessor Transpose", "Frame.via_T.__sub__()": "Accessor Transpose", "Frame.via_T.__mul__()": "Accessor Transpose", "Frame.via_T.__truediv__()": "Accessor Transpose", "Frame.via_T.__floordiv__()": "Accessor Transpose", "Frame.via_T.__mod__()": "Accessor Transpose", "Frame.via_T.__pow__()": "Accessor Transpose", "Frame.via_T.__lshift__()": "Accessor Transpose", "Frame.via_T.__rshift__()": "Accessor Transpose", "Frame.via_T.__and__()": "Accessor Transpose", "Frame.via_T.__xor__()": "Accessor Transpose", "Frame.via_T.__or__()": "Accessor Transpose", "Frame.via_T.__lt__()": "Accessor Transpose", "Frame.via_T.__le__()": "Accessor Transpose", "Frame.via_T.__eq__()": "Accessor Transpose", "Frame.via_T.__ne__()": "Accessor Transpose", "Frame.via_T.__gt__()": "Accessor Transpose", "Frame.via_T.__ge__()": "Accessor Transpose", "Frame.via_T.__radd__()": "Accessor Transpose", "Frame.via_T.__rsub__()": "Accessor Transpose", "Frame.via_T.__rmul__()": "Accessor Transpose", "Frame.via_T.__rtruediv__()": "Accessor Transpose", "Frame.via_T.__rfloordiv__()": "Accessor Transpose", "Frame.via_fill_value().loc": "Accessor Fill Value", "Frame.via_fill_value().__getitem__()": "Accessor Fill Value", "Frame.via_fill_value().via_T": "Accessor Fill Value", "Frame.via_fill_value().__add__()": "Accessor Fill Value", "Frame.via_fill_value().__sub__()": "Accessor Fill Value", "Frame.via_fill_value().__mul__()": "Accessor Fill Value", "Frame.via_fill_value().__truediv__()": "Accessor Fill Value", "Frame.via_fill_value().__floordiv__()": "Accessor Fill Value", "Frame.via_fill_value().__mod__()": "Accessor Fill Value", "Frame.via_fill_value().__pow__()": "Accessor Fill Value", "Frame.via_fill_value().__lshift__()": "Accessor Fill Value", "Frame.via_fill_value().__rshift__()": "Accessor Fill Value", "Frame.via_fill_value().__and__()": "Accessor Fill Value", "Frame.via_fill_value().__xor__()": "Accessor Fill Value", "Frame.via_fill_value().__or__()": "Accessor Fill Value", "Frame.via_fill_value().__lt__()": "Accessor Fill Value", "Frame.via_fill_value().__le__()": "Accessor Fill Value", "Frame.via_fill_value().__eq__()": "Accessor Fill Value", "Frame.via_fill_value().__ne__()": "Accessor Fill Value", "Frame.via_fill_value().__gt__()": "Accessor Fill Value", "Frame.via_fill_value().__ge__()": "Accessor Fill Value", "Frame.via_fill_value().__radd__()": "Accessor Fill Value", "Frame.via_fill_value().__rsub__()": "Accessor Fill Value", "Frame.via_fill_value().__rmul__()": "Accessor Fill Value", "Frame.via_fill_value().__rtruediv__()": "Accessor Fill Value", "Frame.via_fill_value().__rfloordiv__()": "Accessor Fill Value", "Frame.via_re().search()": "Accessor Regular Expression", "Frame.via_re().match()": "Accessor Regular Expression", "Frame.via_re().fullmatch()": "Accessor Regular Expression", "Frame.via_re().split()": "Accessor Regular Expression", "Frame.via_re().findall()": "Accessor Regular Expression", "Frame.via_re().sub()": "Accessor Regular Expression", "Frame.via_re().subn()": "Accessor Regular Expression", "Frame.via_hashlib().to_bytes()": "Accessor Hashlib", "Frame.via_hashlib().md5()": "Accessor Hashlib", "Frame.via_hashlib().sha256()": "Accessor Hashlib", "Frame.via_hashlib().sha512()": "Accessor Hashlib", "Frame.via_hashlib().sha3_256()": "Accessor Hashlib", "Frame.via_hashlib().sha3_512()": "Accessor Hashlib", "Frame.via_hashlib().shake_128()": "Accessor Hashlib", "Frame.via_hashlib().shake_256()": "Accessor Hashlib", "Frame.via_hashlib().blake2b()": "Accessor Hashlib", "Frame.via_hashlib().blake2s()": "Accessor Hashlib", "Frame.via_type_clinic.to_hint()": "Accessor Type Clinic", "Frame.via_type_clinic.check()": "Accessor Type Clinic", "Frame.via_type_clinic.warn()": "Accessor Type Clinic", "Frame.via_type_clinic.__call__()": "Accessor Type Clinic", "Frame.via_type_clinic.__repr__()": "Accessor Type Clinic", "Frame.reduce.from_func().keys()": "Accessor Reduce", "Frame.reduce.from_func().__iter__()": "Accessor Reduce", "Frame.reduce.from_func().items()": "Accessor Reduce", "Frame.reduce.from_func().values()": "Accessor Reduce", "Frame.reduce.from_func().to_frame()": "Accessor Reduce", "Frame.reduce.from_map_func().keys()": "Accessor Reduce", "Frame.reduce.from_map_func().__iter__()": "Accessor Reduce", "Frame.reduce.from_map_func().items()": "Accessor Reduce", "Frame.reduce.from_map_func().values()": "Accessor Reduce", "Frame.reduce.from_map_func().to_frame()": "Accessor Reduce", "Frame.reduce.from_label_map().keys()": "Accessor Reduce", "Frame.reduce.from_label_map().__iter__()": "Accessor Reduce", "Frame.reduce.from_label_map().items()": "Accessor Reduce", "Frame.reduce.from_label_map().values()": "Accessor Reduce", "Frame.reduce.from_label_map().to_frame()": "Accessor Reduce", "Frame.reduce.from_label_pair_map().keys()": "Accessor Reduce", "Frame.reduce.from_label_pair_map().__iter__()": "Accessor Reduce", "Frame.reduce.from_label_pair_map().items()": "Accessor Reduce", "Frame.reduce.from_label_pair_map().values()": "Accessor Reduce", "Frame.reduce.from_label_pair_map().to_frame()": "Accessor Reduce", "FrameGO.__init__()": "Constructor", "FrameGO.from_arrow()": "Constructor", "FrameGO.from_clipboard()": "Constructor", "FrameGO.from_concat()": "Constructor", "FrameGO.from_concat_items()": "Constructor", "FrameGO.from_csv()": "Constructor", "FrameGO.from_delimited()": "Constructor", "FrameGO.from_dict()": "Constructor", "FrameGO.from_dict_fields()": "Constructor", "FrameGO.from_dict_records()": "Constructor", "FrameGO.from_dict_records_items()": "Constructor", "FrameGO.from_element()": "Constructor", "FrameGO.from_element_items()": "Constructor", "FrameGO.from_elements()": "Constructor", "FrameGO.from_fields()": "Constructor", "FrameGO.from_items()": "Constructor", "FrameGO.from_json_columns()": "Constructor", "FrameGO.from_json_index()": "Constructor", "FrameGO.from_json_records()": "Constructor", "FrameGO.from_json_split()": "Constructor", "FrameGO.from_json_typed()": "Constructor", "FrameGO.from_json_values()": "Constructor", "FrameGO.from_npy()": "Constructor", "FrameGO.from_npy_mmap()": "Constructor", "FrameGO.from_npz()": "Constructor", "FrameGO.from_overlay()": "Constructor", "FrameGO.from_pandas()": "Constructor", "FrameGO.from_parquet()": "Constructor", "FrameGO.from_pickle()": "Constructor", "FrameGO.from_records()": "Constructor", "FrameGO.from_records_items()": "Constructor", "FrameGO.from_series()": "Constructor", "FrameGO.from_sql()": "Constructor", "FrameGO.from_sqlite()": "Constructor", "FrameGO.from_structured_array()": "Constructor", "FrameGO.from_tsv()": "Constructor", "FrameGO.from_xlsx()": "Constructor", "FrameGO.to_arrow()": "Exporter", "FrameGO.to_clipboard()": "Exporter", "FrameGO.to_csv()": "Exporter", "FrameGO.to_delimited()": "Exporter", "FrameGO.to_frame()": "Exporter", "FrameGO.to_frame_go()": "Exporter", "FrameGO.to_frame_he()": "Exporter", "FrameGO.to_html()": "Exporter", "FrameGO.to_html_datatables()": "Exporter", "FrameGO.to_json_columns()": "Exporter", "FrameGO.to_json_index()": "Exporter", "FrameGO.to_json_records()": "Exporter", "FrameGO.to_json_split()": "Exporter", "FrameGO.to_json_typed()": "Exporter", "FrameGO.to_json_values()": "Exporter", "FrameGO.to_latex()": "Exporter", "FrameGO.to_markdown()": "Exporter", "FrameGO.to_npy()": "Exporter", "FrameGO.to_npz()": "Exporter", "FrameGO.to_pairs()": "Exporter", "FrameGO.to_pandas()": "Exporter", "FrameGO.to_parquet()": "Exporter", "FrameGO.to_pickle()": "Exporter", "FrameGO.to_rst()": "Exporter", "FrameGO.to_series()": "Exporter", "FrameGO.to_sql()": "Exporter", "FrameGO.to_sqlite()": "Exporter", "FrameGO.to_tsv()": "Exporter", "FrameGO.to_visidata()": "Exporter", "FrameGO.to_xarray()": "Exporter", "FrameGO.to_xlsx()": "Exporter", "FrameGO.STATIC": "Attribute", "FrameGO.T": "Attribute", "FrameGO.columns": "Attribute", "FrameGO.dtypes": "Attribute", "FrameGO.index": "Attribute", "FrameGO.memory": "Attribute", "FrameGO.mloc": "Attribute", "FrameGO.name": "Attribute", "FrameGO.nbytes": "Attribute", "FrameGO.ndim": "Attribute", "FrameGO.shape": "Attribute", "FrameGO.size": "Attribute", "FrameGO.__array__()": "Method", "FrameGO.__array_ufunc__()": "Method", "FrameGO.__bool__()": "Method", "FrameGO.__copy__()": "Method", "FrameGO.__dataframe__()": "Method", "FrameGO.__deepcopy__()": "Method", "FrameGO.__len__()": "Method", "FrameGO.__round__()": "Method", "FrameGO.all()": "Method", "FrameGO.any()": "Method", "FrameGO.astype[]()": "Method", "FrameGO.astype()": "Method", "FrameGO.clip()": "Method", "FrameGO.consolidate[]": "Method", "FrameGO.consolidate()": "Method", "FrameGO.consolidate.status": "Method", "FrameGO.corr()": "Method", "FrameGO.count()": "Method", "FrameGO.cov()": "Method", "FrameGO.cumprod()": "Method", "FrameGO.cumsum()": "Method", "FrameGO.drop_duplicated()": "Method", "FrameGO.dropfalsy()": "Method", "FrameGO.dropna()": "Method", "FrameGO.duplicated()": "Method", "FrameGO.equals()": "Method", "FrameGO.extend()": "Method", "FrameGO.extend_items()": "Method", "FrameGO.fillfalsy()": "Method", "FrameGO.fillfalsy_backward()": "Method", "FrameGO.fillfalsy_forward()": "Method", "FrameGO.fillfalsy_leading()": "Method", "FrameGO.fillfalsy_trailing()": "Method", "FrameGO.fillna()": "Method", "FrameGO.fillna_backward()": "Method", "FrameGO.fillna_forward()": "Method", "FrameGO.fillna_leading()": "Method", "FrameGO.fillna_trailing()": "Method", "FrameGO.head()": "Method", "FrameGO.iloc_max()": "Method", "FrameGO.iloc_min()": "Method", "FrameGO.iloc_notfalsy_first()": "Method", "FrameGO.iloc_notfalsy_last()": "Method", "FrameGO.iloc_notna_first()": "Method", "FrameGO.iloc_notna_last()": "Method", "FrameGO.insert_after()": "Method", "FrameGO.insert_before()": "Method", "FrameGO.isfalsy()": "Method", "FrameGO.isin()": "Method", "FrameGO.isna()": "Method", "FrameGO.join_inner()": "Method", "FrameGO.join_left()": "Method", "FrameGO.join_outer()": "Method", "FrameGO.join_right()": "Method", "FrameGO.loc_max()": "Method", "FrameGO.loc_min()": "Method", "FrameGO.loc_notfalsy_first()": "Method", "FrameGO.loc_notfalsy_last()": "Method", "FrameGO.loc_notna_first()": "Method", "FrameGO.loc_notna_last()": "Method", "FrameGO.max()": "Method", "FrameGO.mean()": "Method", "FrameGO.median()": "Method", "FrameGO.merge_inner()": "Method", "FrameGO.merge_left()": "Method", "FrameGO.merge_outer()": "Method", "FrameGO.merge_right()": "Method", "FrameGO.min()": "Method", "FrameGO.notfalsy()": "Method", "FrameGO.notna()": "Method", "FrameGO.pivot()": "Method", "FrameGO.pivot_stack()": "Method", "FrameGO.pivot_unstack()": "Method", "FrameGO.prod()": "Method", "FrameGO.rank_dense()": "Method", "FrameGO.rank_max()": "Method", "FrameGO.rank_mean()": "Method", "FrameGO.rank_min()": "Method", "FrameGO.rank_ordinal()": "Method", "FrameGO.rehierarch()": "Method", "FrameGO.reindex()": "Method", "FrameGO.relabel()": "Method", "FrameGO.relabel_flat()": "Method", "FrameGO.relabel_level_add()": "Method", "FrameGO.relabel_level_drop()": "Method", "FrameGO.relabel_shift_in()": "Method", "FrameGO.relabel_shift_out()": "Method", "FrameGO.rename()": "Method", "FrameGO.roll()": "Method", "FrameGO.sample()": "Method", "FrameGO.set_columns()": "Method", "FrameGO.set_columns_hierarchy()": "Method", "FrameGO.set_index()": "Method", "FrameGO.set_index_hierarchy()": "Method", "FrameGO.shift()": "Method", "FrameGO.sort_columns()": "Method", "FrameGO.sort_index()": "Method", "FrameGO.sort_values()": "Method", "FrameGO.std()": "Method", "FrameGO.sum()": "Method", "FrameGO.tail()": "Method", "FrameGO.transpose()": "Method", "FrameGO.unique()": "Method", "FrameGO.unique_enumerated()": "Method", "FrameGO.unset_columns()": "Method", "FrameGO.unset_index()": "Method", "FrameGO.var()": "Method", "FrameGO.__contains__()": "Dictionary-Like", "FrameGO.__iter__()": "Dictionary-Like", "FrameGO.__reversed__()": "Dictionary-Like", "FrameGO.get()": "Dictionary-Like", "FrameGO.items()": "Dictionary-Like", "FrameGO.keys()": "Dictionary-Like", "FrameGO.values": "Dictionary-Like", "FrameGO.interface": "Display", "FrameGO.__repr__()": "Display", "FrameGO.__str__()": "Display", "FrameGO.display()": "Display", "FrameGO.display_tall()": "Display", "FrameGO.display_wide()": "Display", "FrameGO.assign[]()": "Assignment", "FrameGO.assign[].apply()": "Assignment", "FrameGO.assign[].apply_element()": "Assignment", "FrameGO.assign[].apply_element_items()": "Assignment", "FrameGO.assign.iloc[]()": "Assignment", "FrameGO.assign.iloc[].apply()": "Assignment", "FrameGO.assign.iloc[].apply_element()": "Assignment", "FrameGO.assign.iloc[].apply_element_items()": "Assignment", "FrameGO.assign.loc[]()": "Assignment", "FrameGO.assign.loc[].apply()": "Assignment", "FrameGO.assign.loc[].apply_element()": "Assignment", "FrameGO.assign.loc[].apply_element_items()": "Assignment", "FrameGO.assign.bloc[]()": "Assignment", "FrameGO.assign.bloc[].apply()": "Assignment", "FrameGO.assign.bloc[].apply_element()": "Assignment", "FrameGO.assign.bloc[].apply_element_items()": "Assignment", "FrameGO.bloc[]": "Selector", "FrameGO.drop[]": "Selector", "FrameGO.drop.iloc[]": "Selector", "FrameGO.drop.loc[]": "Selector", "FrameGO.mask[]": "Selector", "FrameGO.mask.iloc[]": "Selector", "FrameGO.mask.loc[]": "Selector", "FrameGO.masked_array[]": "Selector", "FrameGO.masked_array.iloc[]": "Selector", "FrameGO.masked_array.loc[]": "Selector", "FrameGO.[]": "Selector", "FrameGO.iloc[]": "Selector", "FrameGO.loc[]": "Selector", "FrameGO.iter_array()": "Iterator", "FrameGO.iter_array().apply()": "Iterator", "FrameGO.iter_array().apply_iter()": "Iterator", "FrameGO.iter_array().apply_iter_items()": "Iterator", "FrameGO.iter_array().apply_pool()": "Iterator", "FrameGO.iter_array_items()": "Iterator", "FrameGO.iter_array_items().apply()": "Iterator", "FrameGO.iter_array_items().apply_iter()": "Iterator", "FrameGO.iter_array_items().apply_iter_items()": "Iterator", "FrameGO.iter_array_items().apply_pool()": "Iterator", "FrameGO.iter_element()": "Iterator", "FrameGO.iter_element().apply()": "Iterator", "FrameGO.iter_element().apply_iter()": "Iterator", "FrameGO.iter_element().apply_iter_items()": "Iterator", "FrameGO.iter_element().apply_pool()": "Iterator", "FrameGO.iter_element().map_all()": "Iterator", "FrameGO.iter_element().map_all_iter()": "Iterator", "FrameGO.iter_element().map_all_iter_items()": "Iterator", "FrameGO.iter_element().map_any()": "Iterator", "FrameGO.iter_element().map_any_iter()": "Iterator", "FrameGO.iter_element().map_any_iter_items()": "Iterator", "FrameGO.iter_element().map_fill()": "Iterator", "FrameGO.iter_element().map_fill_iter()": "Iterator", "FrameGO.iter_element().map_fill_iter_items()": "Iterator", "FrameGO.iter_element_items()": "Iterator", "FrameGO.iter_element_items().apply()": "Iterator", "FrameGO.iter_element_items().apply_iter()": "Iterator", "FrameGO.iter_element_items().apply_iter_items()": "Iterator", "FrameGO.iter_element_items().apply_pool()": "Iterator", "FrameGO.iter_element_items().map_all()": "Iterator", "FrameGO.iter_element_items().map_all_iter()": "Iterator", "FrameGO.iter_element_items().map_all_iter_items()": "Iterator", "FrameGO.iter_element_items().map_any()": "Iterator", "FrameGO.iter_element_items().map_any_iter()": "Iterator", "FrameGO.iter_element_items().map_any_iter_items()": "Iterator", "FrameGO.iter_element_items().map_fill()": "Iterator", "FrameGO.iter_element_items().map_fill_iter()": "Iterator", "FrameGO.iter_element_items().map_fill_iter_items()": "Iterator", "FrameGO.iter_group()": "Iterator", "FrameGO.iter_group().apply()": "Iterator", "FrameGO.iter_group().apply_iter()": "Iterator", "FrameGO.iter_group().apply_iter_items()": "Iterator", "FrameGO.iter_group().apply_pool()": "Iterator", "FrameGO.iter_group().reduce.from_func().keys()": "Iterator", "FrameGO.iter_group().reduce.from_func().__iter__()": "Iterator", "FrameGO.iter_group().reduce.from_func().items()": "Iterator", "FrameGO.iter_group().reduce.from_func().values()": "Iterator", "FrameGO.iter_group().reduce.from_func().to_frame()": "Iterator", "FrameGO.iter_group().reduce.from_map_func().keys()": "Iterator", "FrameGO.iter_group().reduce.from_map_func().__iter__()": "Iterator", "FrameGO.iter_group().reduce.from_map_func().items()": "Iterator", "FrameGO.iter_group().reduce.from_map_func().values()": "Iterator", "FrameGO.iter_group().reduce.from_map_func().to_frame()": "Iterator", "FrameGO.iter_group().reduce.from_label_map().keys()": "Iterator", "FrameGO.iter_group().reduce.from_label_map().__iter__()": "Iterator", "FrameGO.iter_group().reduce.from_label_map().items()": "Iterator", "FrameGO.iter_group().reduce.from_label_map().values()": "Iterator", "FrameGO.iter_group().reduce.from_label_map().to_frame()": "Iterator", "FrameGO.iter_group().reduce.from_label_pair_map().keys()": "Iterator", "FrameGO.iter_group().reduce.from_label_pair_map().__iter__()": "Iterator", "FrameGO.iter_group().reduce.from_label_pair_map().items()": "Iterator", "FrameGO.iter_group().reduce.from_label_pair_map().values()": "Iterator", "FrameGO.iter_group().reduce.from_label_pair_map().to_frame()": "Iterator", "FrameGO.iter_group_array()": "Iterator", "FrameGO.iter_group_array().apply()": "Iterator", "FrameGO.iter_group_array().apply_iter()": "Iterator", "FrameGO.iter_group_array().apply_iter_items()": "Iterator", "FrameGO.iter_group_array().apply_pool()": "Iterator", "FrameGO.iter_group_array().reduce.from_func().keys()": "Iterator", "FrameGO.iter_group_array().reduce.from_func().__iter__()": "Iterator", "FrameGO.iter_group_array().reduce.from_func().items()": "Iterator", "FrameGO.iter_group_array().reduce.from_func().values()": "Iterator", "FrameGO.iter_group_array().reduce.from_func().to_frame()": "Iterator", "FrameGO.iter_group_array().reduce.from_map_func().keys()": "Iterator", "FrameGO.iter_group_array().reduce.from_map_func().__iter__()": "Iterator", "FrameGO.iter_group_array().reduce.from_map_func().items()": "Iterator", "FrameGO.iter_group_array().reduce.from_map_func().values()": "Iterator", "FrameGO.iter_group_array().reduce.from_map_func().to_frame()": "Iterator", "FrameGO.iter_group_array().reduce.from_label_map().keys()": "Iterator", "FrameGO.iter_group_array().reduce.from_label_map().__iter__()": "Iterator", "FrameGO.iter_group_array().reduce.from_label_map().items()": "Iterator", "FrameGO.iter_group_array().reduce.from_label_map().values()": "Iterator", "FrameGO.iter_group_array().reduce.from_label_map().to_frame()": "Iterator", "FrameGO.iter_group_array().reduce.from_label_pair_map().keys()": "Iterator", "FrameGO.iter_group_array().reduce.from_label_pair_map().__iter__()": "Iterator", "FrameGO.iter_group_array().reduce.from_label_pair_map().items()": "Iterator", "FrameGO.iter_group_array().reduce.from_label_pair_map().values()": "Iterator", "FrameGO.iter_group_array().reduce.from_label_pair_map().to_frame()": "Iterator", "FrameGO.iter_group_array_items()": "Iterator", "FrameGO.iter_group_array_items().apply()": "Iterator", "FrameGO.iter_group_array_items().apply_iter()": "Iterator", "FrameGO.iter_group_array_items().apply_iter_items()": "Iterator", "FrameGO.iter_group_array_items().apply_pool()": "Iterator", "FrameGO.iter_group_array_items().reduce.from_func().keys()": "Iterator", "FrameGO.iter_group_array_items().reduce.from_func().__iter__()": "Iterator", "FrameGO.iter_group_array_items().reduce.from_func().items()": "Iterator", "FrameGO.iter_group_array_items().reduce.from_func().values()": "Iterator", "FrameGO.iter_group_array_items().reduce.from_func().to_frame()": "Iterator", "FrameGO.iter_group_array_items().reduce.from_map_func().keys()": "Iterator", "FrameGO.iter_group_array_items().reduce.from_map_func().__iter__()": "Iterator", "FrameGO.iter_group_array_items().reduce.from_map_func().items()": "Iterator", "FrameGO.iter_group_array_items().reduce.from_map_func().values()": "Iterator", "FrameGO.iter_group_array_items().reduce.from_map_func().to_frame()": "Iterator", "FrameGO.iter_group_array_items().reduce.from_label_map().keys()": "Iterator", "FrameGO.iter_group_array_items().reduce.from_label_map().__iter__()": "Iterator", "FrameGO.iter_group_array_items().reduce.from_label_map().items()": "Iterator", "FrameGO.iter_group_array_items().reduce.from_label_map().values()": "Iterator", "FrameGO.iter_group_array_items().reduce.from_label_map().to_frame()": "Iterator", "FrameGO.iter_group_array_items().reduce.from_label_pair_map().keys()": "Iterator", "FrameGO.iter_group_array_items().reduce.from_label_pair_map().__iter__()": "Iterator", "FrameGO.iter_group_array_items().reduce.from_label_pair_map().items()": "Iterator", "FrameGO.iter_group_array_items().reduce.from_label_pair_map().values()": "Iterator", "FrameGO.iter_group_array_items().reduce.from_label_pair_map().to_frame()": "Iterator", "FrameGO.iter_group_items()": "Iterator", "FrameGO.iter_group_items().apply()": "Iterator", "FrameGO.iter_group_items().apply_iter()": "Iterator", "FrameGO.iter_group_items().apply_iter_items()": "Iterator", "FrameGO.iter_group_items().apply_pool()": "Iterator", "FrameGO.iter_group_items().reduce.from_func().keys()": "Iterator", "FrameGO.iter_group_items().reduce.from_func().__iter__()": "Iterator", "FrameGO.iter_group_items().reduce.from_func().items()": "Iterator", "FrameGO.iter_group_items().reduce.from_func().values()": "Iterator", "FrameGO.iter_group_items().reduce.from_func().to_frame()": "Iterator", "FrameGO.iter_group_items().reduce.from_map_func().keys()": "Iterator", "FrameGO.iter_group_items().reduce.from_map_func().__iter__()": "Iterator", "FrameGO.iter_group_items().reduce.from_map_func().items()": "Iterator", "FrameGO.iter_group_items().reduce.from_map_func().values()": "Iterator", "FrameGO.iter_group_items().reduce.from_map_func().to_frame()": "Iterator", "FrameGO.iter_group_items().reduce.from_label_map().keys()": "Iterator", "FrameGO.iter_group_items().reduce.from_label_map().__iter__()": "Iterator", "FrameGO.iter_group_items().reduce.from_label_map().items()": "Iterator", "FrameGO.iter_group_items().reduce.from_label_map().values()": "Iterator", "FrameGO.iter_group_items().reduce.from_label_map().to_frame()": "Iterator", "FrameGO.iter_group_items().reduce.from_label_pair_map().keys()": "Iterator", "FrameGO.iter_group_items().reduce.from_label_pair_map().__iter__()": "Iterator", "FrameGO.iter_group_items().reduce.from_label_pair_map().items()": "Iterator", "FrameGO.iter_group_items().reduce.from_label_pair_map().values()": "Iterator", "FrameGO.iter_group_items().reduce.from_label_pair_map().to_frame()": "Iterator", "FrameGO.iter_group_labels()": "Iterator", "FrameGO.iter_group_labels().apply()": "Iterator", "FrameGO.iter_group_labels().apply_iter()": "Iterator", "FrameGO.iter_group_labels().apply_iter_items()": "Iterator", "FrameGO.iter_group_labels().apply_pool()": "Iterator", "FrameGO.iter_group_labels_array()": "Iterator", "FrameGO.iter_group_labels_array().apply()": "Iterator", "FrameGO.iter_group_labels_array().apply_iter()": "Iterator", "FrameGO.iter_group_labels_array().apply_iter_items()": "Iterator", "FrameGO.iter_group_labels_array().apply_pool()": "Iterator", "FrameGO.iter_group_labels_array_items()": "Iterator", "FrameGO.iter_group_labels_array_items().apply()": "Iterator", "FrameGO.iter_group_labels_array_items().apply_iter()": "Iterator", "FrameGO.iter_group_labels_array_items().apply_iter_items()": "Iterator", "FrameGO.iter_group_labels_array_items().apply_pool()": "Iterator", "FrameGO.iter_group_labels_items()": "Iterator", "FrameGO.iter_group_labels_items().apply()": "Iterator", "FrameGO.iter_group_labels_items().apply_iter()": "Iterator", "FrameGO.iter_group_labels_items().apply_iter_items()": "Iterator", "FrameGO.iter_group_labels_items().apply_pool()": "Iterator", "FrameGO.iter_group_other()": "Iterator", "FrameGO.iter_group_other().apply()": "Iterator", "FrameGO.iter_group_other().apply_iter()": "Iterator", "FrameGO.iter_group_other().apply_iter_items()": "Iterator", "FrameGO.iter_group_other().apply_pool()": "Iterator", "FrameGO.iter_group_other().reduce.from_func().keys()": "Iterator", "FrameGO.iter_group_other().reduce.from_func().__iter__()": "Iterator", "FrameGO.iter_group_other().reduce.from_func().items()": "Iterator", "FrameGO.iter_group_other().reduce.from_func().values()": "Iterator", "FrameGO.iter_group_other().reduce.from_func().to_frame()": "Iterator", "FrameGO.iter_group_other().reduce.from_map_func().keys()": "Iterator", "FrameGO.iter_group_other().reduce.from_map_func().__iter__()": "Iterator", "FrameGO.iter_group_other().reduce.from_map_func().items()": "Iterator", "FrameGO.iter_group_other().reduce.from_map_func().values()": "Iterator", "FrameGO.iter_group_other().reduce.from_map_func().to_frame()": "Iterator", "FrameGO.iter_group_other().reduce.from_label_map().keys()": "Iterator", "FrameGO.iter_group_other().reduce.from_label_map().__iter__()": "Iterator", "FrameGO.iter_group_other().reduce.from_label_map().items()": "Iterator", "FrameGO.iter_group_other().reduce.from_label_map().values()": "Iterator", "FrameGO.iter_group_other().reduce.from_label_map().to_frame()": "Iterator", "FrameGO.iter_group_other().reduce.from_label_pair_map().keys()": "Iterator", "FrameGO.iter_group_other().reduce.from_label_pair_map().__iter__()": "Iterator", "FrameGO.iter_group_other().reduce.from_label_pair_map().items()": "Iterator", "FrameGO.iter_group_other().reduce.from_label_pair_map().values()": "Iterator", "FrameGO.iter_group_other().reduce.from_label_pair_map().to_frame()": "Iterator", "FrameGO.iter_group_other_array()": "Iterator", "FrameGO.iter_group_other_array().apply()": "Iterator", "FrameGO.iter_group_other_array().apply_iter()": "Iterator", "FrameGO.iter_group_other_array().apply_iter_items()": "Iterator", "FrameGO.iter_group_other_array().apply_pool()": "Iterator", "FrameGO.iter_group_other_array().reduce.from_func().keys()": "Iterator", "FrameGO.iter_group_other_array().reduce.from_func().__iter__()": "Iterator", "FrameGO.iter_group_other_array().reduce.from_func().items()": "Iterator", "FrameGO.iter_group_other_array().reduce.from_func().values()": "Iterator", "FrameGO.iter_group_other_array().reduce.from_func().to_frame()": "Iterator", "FrameGO.iter_group_other_array().reduce.from_map_func().keys()": "Iterator", "FrameGO.iter_group_other_array().reduce.from_map_func().__iter__()": "Iterator", "FrameGO.iter_group_other_array().reduce.from_map_func().items()": "Iterator", "FrameGO.iter_group_other_array().reduce.from_map_func().values()": "Iterator", "FrameGO.iter_group_other_array().reduce.from_map_func().to_frame()": "Iterator", "FrameGO.iter_group_other_array().reduce.from_label_map().keys()": "Iterator", "FrameGO.iter_group_other_array().reduce.from_label_map().__iter__()": "Iterator", "FrameGO.iter_group_other_array().reduce.from_label_map().items()": "Iterator", "FrameGO.iter_group_other_array().reduce.from_label_map().values()": "Iterator", "FrameGO.iter_group_other_array().reduce.from_label_map().to_frame()": "Iterator", "FrameGO.iter_group_other_array().reduce.from_label_pair_map().keys()": "Iterator", "FrameGO.iter_group_other_array().reduce.from_label_pair_map().__iter__()": "Iterator", "FrameGO.iter_group_other_array().reduce.from_label_pair_map().items()": "Iterator", "FrameGO.iter_group_other_array().reduce.from_label_pair_map().values()": "Iterator", "FrameGO.iter_group_other_array().reduce.from_label_pair_map().to_frame()": "Iterator", "FrameGO.iter_group_other_array_items()": "Iterator", "FrameGO.iter_group_other_array_items().apply()": "Iterator", "FrameGO.iter_group_other_array_items().apply_iter()": "Iterator", "FrameGO.iter_group_other_array_items().apply_iter_items()": "Iterator", "FrameGO.iter_group_other_array_items().apply_pool()": "Iterator", "FrameGO.iter_group_other_array_items().reduce.from_func().keys()": "Iterator", "FrameGO.iter_group_other_array_items().reduce.from_func().__iter__()": "Iterator", "FrameGO.iter_group_other_array_items().reduce.from_func().items()": "Iterator", "FrameGO.iter_group_other_array_items().reduce.from_func().values()": "Iterator", "FrameGO.iter_group_other_array_items().reduce.from_func().to_frame()": "Iterator", "FrameGO.iter_group_other_array_items().reduce.from_map_func().keys()": "Iterator", "FrameGO.iter_group_other_array_items().reduce.from_map_func().__iter__()": "Iterator", "FrameGO.iter_group_other_array_items().reduce.from_map_func().items()": "Iterator", "FrameGO.iter_group_other_array_items().reduce.from_map_func().values()": "Iterator", "FrameGO.iter_group_other_array_items().reduce.from_map_func().to_frame()": "Iterator", "FrameGO.iter_group_other_array_items().reduce.from_label_map().keys()": "Iterator", "FrameGO.iter_group_other_array_items().reduce.from_label_map().__iter__()": "Iterator", "FrameGO.iter_group_other_array_items().reduce.from_label_map().items()": "Iterator", "FrameGO.iter_group_other_array_items().reduce.from_label_map().values()": "Iterator", "FrameGO.iter_group_other_array_items().reduce.from_label_map().to_frame()": "Iterator", "FrameGO.iter_group_other_array_items().reduce.from_label_pair_map().keys()": "Iterator", "FrameGO.iter_group_other_array_items().reduce.from_label_pair_map().__iter__()": "Iterator", "FrameGO.iter_group_other_array_items().reduce.from_label_pair_map().items()": "Iterator", "FrameGO.iter_group_other_array_items().reduce.from_label_pair_map().values()": "Iterator", "FrameGO.iter_group_other_array_items().reduce.from_label_pair_map().to_frame()": "Iterator", "FrameGO.iter_group_other_items()": "Iterator", "FrameGO.iter_group_other_items().apply()": "Iterator", "FrameGO.iter_group_other_items().apply_iter()": "Iterator", "FrameGO.iter_group_other_items().apply_iter_items()": "Iterator", "FrameGO.iter_group_other_items().apply_pool()": "Iterator", "FrameGO.iter_group_other_items().reduce.from_func().keys()": "Iterator", "FrameGO.iter_group_other_items().reduce.from_func().__iter__()": "Iterator", "FrameGO.iter_group_other_items().reduce.from_func().items()": "Iterator", "FrameGO.iter_group_other_items().reduce.from_func().values()": "Iterator", "FrameGO.iter_group_other_items().reduce.from_func().to_frame()": "Iterator", "FrameGO.iter_group_other_items().reduce.from_map_func().keys()": "Iterator", "FrameGO.iter_group_other_items().reduce.from_map_func().__iter__()": "Iterator", "FrameGO.iter_group_other_items().reduce.from_map_func().items()": "Iterator", "FrameGO.iter_group_other_items().reduce.from_map_func().values()": "Iterator", "FrameGO.iter_group_other_items().reduce.from_map_func().to_frame()": "Iterator", "FrameGO.iter_group_other_items().reduce.from_label_map().keys()": "Iterator", "FrameGO.iter_group_other_items().reduce.from_label_map().__iter__()": "Iterator", "FrameGO.iter_group_other_items().reduce.from_label_map().items()": "Iterator", "FrameGO.iter_group_other_items().reduce.from_label_map().values()": "Iterator", "FrameGO.iter_group_other_items().reduce.from_label_map().to_frame()": "Iterator", "FrameGO.iter_group_other_items().reduce.from_label_pair_map().keys()": "Iterator", "FrameGO.iter_group_other_items().reduce.from_label_pair_map().__iter__()": "Iterator", "FrameGO.iter_group_other_items().reduce.from_label_pair_map().items()": "Iterator", "FrameGO.iter_group_other_items().reduce.from_label_pair_map().values()": "Iterator", "FrameGO.iter_group_other_items().reduce.from_label_pair_map().to_frame()": "Iterator", "FrameGO.iter_series()": "Iterator", "FrameGO.iter_series().apply()": "Iterator", "FrameGO.iter_series().apply_iter()": "Iterator", "FrameGO.iter_series().apply_iter_items()": "Iterator", "FrameGO.iter_series().apply_pool()": "Iterator", "FrameGO.iter_series_items()": "Iterator", "FrameGO.iter_series_items().apply()": "Iterator", "FrameGO.iter_series_items().apply_iter()": "Iterator", "FrameGO.iter_series_items().apply_iter_items()": "Iterator", "FrameGO.iter_series_items().apply_pool()": "Iterator", "FrameGO.iter_tuple()": "Iterator", "FrameGO.iter_tuple().apply()": "Iterator", "FrameGO.iter_tuple().apply_iter()": "Iterator", "FrameGO.iter_tuple().apply_iter_items()": "Iterator", "FrameGO.iter_tuple().apply_pool()": "Iterator", "FrameGO.iter_tuple().map_all()": "Iterator", "FrameGO.iter_tuple().map_all_iter()": "Iterator", "FrameGO.iter_tuple().map_all_iter_items()": "Iterator", "FrameGO.iter_tuple().map_any()": "Iterator", "FrameGO.iter_tuple().map_any_iter()": "Iterator", "FrameGO.iter_tuple().map_any_iter_items()": "Iterator", "FrameGO.iter_tuple().map_fill()": "Iterator", "FrameGO.iter_tuple().map_fill_iter()": "Iterator", "FrameGO.iter_tuple().map_fill_iter_items()": "Iterator", "FrameGO.iter_tuple_items()": "Iterator", "FrameGO.iter_tuple_items().apply()": "Iterator", "FrameGO.iter_tuple_items().apply_iter()": "Iterator", "FrameGO.iter_tuple_items().apply_iter_items()": "Iterator", "FrameGO.iter_tuple_items().apply_pool()": "Iterator", "FrameGO.iter_tuple_items().map_all()": "Iterator", "FrameGO.iter_tuple_items().map_all_iter()": "Iterator", "FrameGO.iter_tuple_items().map_all_iter_items()": "Iterator", "FrameGO.iter_tuple_items().map_any()": "Iterator", "FrameGO.iter_tuple_items().map_any_iter()": "Iterator", "FrameGO.iter_tuple_items().map_any_iter_items()": "Iterator", "FrameGO.iter_tuple_items().map_fill()": "Iterator", "FrameGO.iter_tuple_items().map_fill_iter()": "Iterator", "FrameGO.iter_tuple_items().map_fill_iter_items()": "Iterator", "FrameGO.iter_window()": "Iterator", "FrameGO.iter_window().apply()": "Iterator", "FrameGO.iter_window().apply_iter()": "Iterator", "FrameGO.iter_window().apply_iter_items()": "Iterator", "FrameGO.iter_window().apply_pool()": "Iterator", "FrameGO.iter_window().reduce.from_func().keys()": "Iterator", "FrameGO.iter_window().reduce.from_func().__iter__()": "Iterator", "FrameGO.iter_window().reduce.from_func().items()": "Iterator", "FrameGO.iter_window().reduce.from_func().values()": "Iterator", "FrameGO.iter_window().reduce.from_func().to_frame()": "Iterator", "FrameGO.iter_window().reduce.from_map_func().keys()": "Iterator", "FrameGO.iter_window().reduce.from_map_func().__iter__()": "Iterator", "FrameGO.iter_window().reduce.from_map_func().items()": "Iterator", "FrameGO.iter_window().reduce.from_map_func().values()": "Iterator", "FrameGO.iter_window().reduce.from_map_func().to_frame()": "Iterator", "FrameGO.iter_window().reduce.from_label_map().keys()": "Iterator", "FrameGO.iter_window().reduce.from_label_map().__iter__()": "Iterator", "FrameGO.iter_window().reduce.from_label_map().items()": "Iterator", "FrameGO.iter_window().reduce.from_label_map().values()": "Iterator", "FrameGO.iter_window().reduce.from_label_map().to_frame()": "Iterator", "FrameGO.iter_window().reduce.from_label_pair_map().keys()": "Iterator", "FrameGO.iter_window().reduce.from_label_pair_map().__iter__()": "Iterator", "FrameGO.iter_window().reduce.from_label_pair_map().items()": "Iterator", "FrameGO.iter_window().reduce.from_label_pair_map().values()": "Iterator", "FrameGO.iter_window().reduce.from_label_pair_map().to_frame()": "Iterator", "FrameGO.iter_window_array()": "Iterator", "FrameGO.iter_window_array().apply()": "Iterator", "FrameGO.iter_window_array().apply_iter()": "Iterator", "FrameGO.iter_window_array().apply_iter_items()": "Iterator", "FrameGO.iter_window_array().apply_pool()": "Iterator", "FrameGO.iter_window_array().reduce.from_func().keys()": "Iterator", "FrameGO.iter_window_array().reduce.from_func().__iter__()": "Iterator", "FrameGO.iter_window_array().reduce.from_func().items()": "Iterator", "FrameGO.iter_window_array().reduce.from_func().values()": "Iterator", "FrameGO.iter_window_array().reduce.from_func().to_frame()": "Iterator", "FrameGO.iter_window_array().reduce.from_map_func().keys()": "Iterator", "FrameGO.iter_window_array().reduce.from_map_func().__iter__()": "Iterator", "FrameGO.iter_window_array().reduce.from_map_func().items()": "Iterator", "FrameGO.iter_window_array().reduce.from_map_func().values()": "Iterator", "FrameGO.iter_window_array().reduce.from_map_func().to_frame()": "Iterator", "FrameGO.iter_window_array().reduce.from_label_map().keys()": "Iterator", "FrameGO.iter_window_array().reduce.from_label_map().__iter__()": "Iterator", "FrameGO.iter_window_array().reduce.from_label_map().items()": "Iterator", "FrameGO.iter_window_array().reduce.from_label_map().values()": "Iterator", "FrameGO.iter_window_array().reduce.from_label_map().to_frame()": "Iterator", "FrameGO.iter_window_array().reduce.from_label_pair_map().keys()": "Iterator", "FrameGO.iter_window_array().reduce.from_label_pair_map().__iter__()": "Iterator", "FrameGO.iter_window_array().reduce.from_label_pair_map().items()": "Iterator", "FrameGO.iter_window_array().reduce.from_label_pair_map().values()": "Iterator", "FrameGO.iter_window_array().reduce.from_label_pair_map().to_frame()": "Iterator", "FrameGO.iter_window_array_items()": "Iterator", "FrameGO.iter_window_array_items().apply()": "Iterator", "FrameGO.iter_window_array_items().apply_iter()": "Iterator", "FrameGO.iter_window_array_items().apply_iter_items()": "Iterator", "FrameGO.iter_window_array_items().apply_pool()": "Iterator", "FrameGO.iter_window_array_items().reduce.from_func().keys()": "Iterator", "FrameGO.iter_window_array_items().reduce.from_func().__iter__()": "Iterator", "FrameGO.iter_window_array_items().reduce.from_func().items()": "Iterator", "FrameGO.iter_window_array_items().reduce.from_func().values()": "Iterator", "FrameGO.iter_window_array_items().reduce.from_func().to_frame()": "Iterator", "FrameGO.iter_window_array_items().reduce.from_map_func().keys()": "Iterator", "FrameGO.iter_window_array_items().reduce.from_map_func().__iter__()": "Iterator", "FrameGO.iter_window_array_items().reduce.from_map_func().items()": "Iterator", "FrameGO.iter_window_array_items().reduce.from_map_func().values()": "Iterator", "FrameGO.iter_window_array_items().reduce.from_map_func().to_frame()": "Iterator", "FrameGO.iter_window_array_items().reduce.from_label_map().keys()": "Iterator", "FrameGO.iter_window_array_items().reduce.from_label_map().__iter__()": "Iterator", "FrameGO.iter_window_array_items().reduce.from_label_map().items()": "Iterator", "FrameGO.iter_window_array_items().reduce.from_label_map().values()": "Iterator", "FrameGO.iter_window_array_items().reduce.from_label_map().to_frame()": "Iterator", "FrameGO.iter_window_array_items().reduce.from_label_pair_map().keys()": "Iterator", "FrameGO.iter_window_array_items().reduce.from_label_pair_map().__iter__()": "Iterator", "FrameGO.iter_window_array_items().reduce.from_label_pair_map().items()": "Iterator", "FrameGO.iter_window_array_items().reduce.from_label_pair_map().values()": "Iterator", "FrameGO.iter_window_array_items().reduce.from_label_pair_map().to_frame()": "Iterator", "FrameGO.iter_window_items()": "Iterator", "FrameGO.iter_window_items().apply()": "Iterator", "FrameGO.iter_window_items().apply_iter()": "Iterator", "FrameGO.iter_window_items().apply_iter_items()": "Iterator", "FrameGO.iter_window_items().apply_pool()": "Iterator", "FrameGO.iter_window_items().reduce.from_func().keys()": "Iterator", "FrameGO.iter_window_items().reduce.from_func().__iter__()": "Iterator", "FrameGO.iter_window_items().reduce.from_func().items()": "Iterator", "FrameGO.iter_window_items().reduce.from_func().values()": "Iterator", "FrameGO.iter_window_items().reduce.from_func().to_frame()": "Iterator", "FrameGO.iter_window_items().reduce.from_map_func().keys()": "Iterator", "FrameGO.iter_window_items().reduce.from_map_func().__iter__()": "Iterator", "FrameGO.iter_window_items().reduce.from_map_func().items()": "Iterator", "FrameGO.iter_window_items().reduce.from_map_func().values()": "Iterator", "FrameGO.iter_window_items().reduce.from_map_func().to_frame()": "Iterator", "FrameGO.iter_window_items().reduce.from_label_map().keys()": "Iterator", "FrameGO.iter_window_items().reduce.from_label_map().__iter__()": "Iterator", "FrameGO.iter_window_items().reduce.from_label_map().items()": "Iterator", "FrameGO.iter_window_items().reduce.from_label_map().values()": "Iterator", "FrameGO.iter_window_items().reduce.from_label_map().to_frame()": "Iterator", "FrameGO.iter_window_items().reduce.from_label_pair_map().keys()": "Iterator", "FrameGO.iter_window_items().reduce.from_label_pair_map().__iter__()": "Iterator", "FrameGO.iter_window_items().reduce.from_label_pair_map().items()": "Iterator", "FrameGO.iter_window_items().reduce.from_label_pair_map().values()": "Iterator", "FrameGO.iter_window_items().reduce.from_label_pair_map().to_frame()": "Iterator", "FrameGO.__add__()": "Operator Binary", "FrameGO.__and__()": "Operator Binary", "FrameGO.__eq__()": "Operator Binary", "FrameGO.__floordiv__()": "Operator Binary", "FrameGO.__ge__()": "Operator Binary", "FrameGO.__gt__()": "Operator Binary", "FrameGO.__le__()": "Operator Binary", "FrameGO.__lt__()": "Operator Binary", "FrameGO.__matmul__()": "Operator Binary", "FrameGO.__mod__()": "Operator Binary", "FrameGO.__mul__()": "Operator Binary", "FrameGO.__ne__()": "Operator Binary", "FrameGO.__or__()": "Operator Binary", "FrameGO.__pow__()": "Operator Binary", "FrameGO.__radd__()": "Operator Binary", "FrameGO.__rfloordiv__()": "Operator Binary", "FrameGO.__rmatmul__()": "Operator Binary", "FrameGO.__rmul__()": "Operator Binary", "FrameGO.__rshift__()": "Operator Binary", "FrameGO.__rsub__()": "Operator Binary", "FrameGO.__rtruediv__()": "Operator Binary", "FrameGO.__sub__()": "Operator Binary", "FrameGO.__truediv__()": "Operator Binary", "FrameGO.__xor__()": "Operator Binary", "FrameGO.__abs__()": "Operator Unary", "FrameGO.__invert__()": "Operator Unary", "FrameGO.__neg__()": "Operator Unary", "FrameGO.__pos__()": "Operator Unary", "FrameGO.abs()": "Operator Unary", "FrameGO.via_values.apply()": "Accessor Values", "FrameGO.via_values.__array_ufunc__()": "Accessor Values", "FrameGO.via_values.__call__()": "Accessor Values", "FrameGO.via_dt.__call__()": "Accessor Datetime", "FrameGO.via_dt.year": "Accessor Datetime", "FrameGO.via_dt.year_month": "Accessor Datetime", "FrameGO.via_dt.year_quarter": "Accessor Datetime", "FrameGO.via_dt.month": "Accessor Datetime", "FrameGO.via_dt.day": "Accessor Datetime", "FrameGO.via_dt.hour": "Accessor Datetime", "FrameGO.via_dt.minute": "Accessor Datetime", "FrameGO.via_dt.second": "Accessor Datetime", "FrameGO.via_dt.weekday()": "Accessor Datetime", "FrameGO.via_dt.quarter()": "Accessor Datetime", "FrameGO.via_dt.is_month_end()": "Accessor Datetime", "FrameGO.via_dt.is_month_start()": "Accessor Datetime", "FrameGO.via_dt.is_year_end()": "Accessor Datetime", "FrameGO.via_dt.is_year_start()": "Accessor Datetime", "FrameGO.via_dt.is_quarter_end()": "Accessor Datetime", "FrameGO.via_dt.is_quarter_start()": "Accessor Datetime", "FrameGO.via_dt.timetuple()": "Accessor Datetime", "FrameGO.via_dt.isoformat()": "Accessor Datetime", "FrameGO.via_dt.fromisoformat()": "Accessor Datetime", "FrameGO.via_dt.strftime()": "Accessor Datetime", "FrameGO.via_dt.strptime()": "Accessor Datetime", "FrameGO.via_dt.strpdate()": "Accessor Datetime", "FrameGO.via_str.__getitem__()": "Accessor String", "FrameGO.via_str.capitalize()": "Accessor String", "FrameGO.via_str.center()": "Accessor String", "FrameGO.via_str.contains()": "Accessor String", "FrameGO.via_str.count()": "Accessor String", "FrameGO.via_str.decode()": "Accessor String", "FrameGO.via_str.encode()": "Accessor String", "FrameGO.via_str.endswith()": "Accessor String", "FrameGO.via_str.find()": "Accessor String", "FrameGO.via_str.format()": "Accessor String", "FrameGO.via_str.index()": "Accessor String", "FrameGO.via_str.isalnum()": "Accessor String", "FrameGO.via_str.isalpha()": "Accessor String", "FrameGO.via_str.isdecimal()": "Accessor String", "FrameGO.via_str.isdigit()": "Accessor String", "FrameGO.via_str.islower()": "Accessor String", "FrameGO.via_str.isnumeric()": "Accessor String", "FrameGO.via_str.isspace()": "Accessor String", "FrameGO.via_str.istitle()": "Accessor String", "FrameGO.via_str.isupper()": "Accessor String", "FrameGO.via_str.ljust()": "Accessor String", "FrameGO.via_str.len()": "Accessor String", "FrameGO.via_str.lower()": "Accessor String", "FrameGO.via_str.lstrip()": "Accessor String", "FrameGO.via_str.partition()": "Accessor String", "FrameGO.via_str.replace()": "Accessor String", "FrameGO.via_str.rfind()": "Accessor String", "FrameGO.via_str.rindex()": "Accessor String", "FrameGO.via_str.rjust()": "Accessor String", "FrameGO.via_str.rpartition()": "Accessor String", "FrameGO.via_str.rsplit()": "Accessor String", "FrameGO.via_str.rstrip()": "Accessor String", "FrameGO.via_str.split()": "Accessor String", "FrameGO.via_str.startswith()": "Accessor String", "FrameGO.via_str.strip()": "Accessor String", "FrameGO.via_str.swapcase()": "Accessor String", "FrameGO.via_str.title()": "Accessor String", "FrameGO.via_str.upper()": "Accessor String", "FrameGO.via_str.zfill()": "Accessor String", "FrameGO.via_T.via_fill_value()": "Accessor Transpose", "FrameGO.via_T.__add__()": "Accessor Transpose", "FrameGO.via_T.__sub__()": "Accessor Transpose", "FrameGO.via_T.__mul__()": "Accessor Transpose", "FrameGO.via_T.__truediv__()": "Accessor Transpose", "FrameGO.via_T.__floordiv__()": "Accessor Transpose", "FrameGO.via_T.__mod__()": "Accessor Transpose", "FrameGO.via_T.__pow__()": "Accessor Transpose", "FrameGO.via_T.__lshift__()": "Accessor Transpose", "FrameGO.via_T.__rshift__()": "Accessor Transpose", "FrameGO.via_T.__and__()": "Accessor Transpose", "FrameGO.via_T.__xor__()": "Accessor Transpose", "FrameGO.via_T.__or__()": "Accessor Transpose", "FrameGO.via_T.__lt__()": "Accessor Transpose", "FrameGO.via_T.__le__()": "Accessor Transpose", "FrameGO.via_T.__eq__()": "Accessor Transpose", "FrameGO.via_T.__ne__()": "Accessor Transpose", "FrameGO.via_T.__gt__()": "Accessor Transpose", "FrameGO.via_T.__ge__()": "Accessor Transpose", "FrameGO.via_T.__radd__()": "Accessor Transpose", "FrameGO.via_T.__rsub__()": "Accessor Transpose", "FrameGO.via_T.__rmul__()": "Accessor Transpose", "FrameGO.via_T.__rtruediv__()": "Accessor Transpose", "FrameGO.via_T.__rfloordiv__()": "Accessor Transpose", "FrameGO.via_fill_value().loc": "Accessor Fill Value", "FrameGO.via_fill_value().__getitem__()": "Accessor Fill Value", "FrameGO.via_fill_value().via_T": "Accessor Fill Value", "FrameGO.via_fill_value().__add__()": "Accessor Fill Value", "FrameGO.via_fill_value().__sub__()": "Accessor Fill Value", "FrameGO.via_fill_value().__mul__()": "Accessor Fill Value", "FrameGO.via_fill_value().__truediv__()": "Accessor Fill Value", "FrameGO.via_fill_value().__floordiv__()": "Accessor Fill Value", "FrameGO.via_fill_value().__mod__()": "Accessor Fill Value", "FrameGO.via_fill_value().__pow__()": "Accessor Fill Value", "FrameGO.via_fill_value().__lshift__()": "Accessor Fill Value", "FrameGO.via_fill_value().__rshift__()": "Accessor Fill Value", "FrameGO.via_fill_value().__and__()": "Accessor Fill Value", "FrameGO.via_fill_value().__xor__()": "Accessor Fill Value", "FrameGO.via_fill_value().__or__()": "Accessor Fill Value", "FrameGO.via_fill_value().__lt__()": "Accessor Fill Value", "FrameGO.via_fill_value().__le__()": "Accessor Fill Value", "FrameGO.via_fill_value().__eq__()": "Accessor Fill Value", "FrameGO.via_fill_value().__ne__()": "Accessor Fill Value", "FrameGO.via_fill_value().__gt__()": "Accessor Fill Value", "FrameGO.via_fill_value().__ge__()": "Accessor Fill Value", "FrameGO.via_fill_value().__radd__()": "Accessor Fill Value", "FrameGO.via_fill_value().__rsub__()": "Accessor Fill Value", "FrameGO.via_fill_value().__rmul__()": "Accessor Fill Value", "FrameGO.via_fill_value().__rtruediv__()": "Accessor Fill Value", "FrameGO.via_fill_value().__rfloordiv__()": "Accessor Fill Value", "FrameGO.via_re().search()": "Accessor Regular Expression", "FrameGO.via_re().match()": "Accessor Regular Expression", "FrameGO.via_re().fullmatch()": "Accessor Regular Expression", "FrameGO.via_re().split()": "Accessor Regular Expression", "FrameGO.via_re().findall()": "Accessor Regular Expression", "FrameGO.via_re().sub()": "Accessor Regular Expression", "FrameGO.via_re().subn()": "Accessor Regular Expression", "FrameGO.via_hashlib().to_bytes()": "Accessor Hashlib", "FrameGO.via_hashlib().md5()": "Accessor Hashlib", "FrameGO.via_hashlib().sha256()": "Accessor Hashlib", "FrameGO.via_hashlib().sha512()": "Accessor Hashlib", "FrameGO.via_hashlib().sha3_256()": "Accessor Hashlib", "FrameGO.via_hashlib().sha3_512()": "Accessor Hashlib", "FrameGO.via_hashlib().shake_128()": "Accessor Hashlib", "FrameGO.via_hashlib().shake_256()": "Accessor Hashlib", "FrameGO.via_hashlib().blake2b()": "Accessor Hashlib", "FrameGO.via_hashlib().blake2s()": "Accessor Hashlib", "FrameGO.via_type_clinic.to_hint()": "Accessor Type Clinic", "FrameGO.via_type_clinic.check()": "Accessor Type Clinic", "FrameGO.via_type_clinic.warn()": "Accessor Type Clinic", "FrameGO.via_type_clinic.__call__()": "Accessor Type Clinic", "FrameGO.via_type_clinic.__repr__()": "Accessor Type Clinic", "FrameGO.reduce.from_func().keys()": "Accessor Reduce", "FrameGO.reduce.from_func().__iter__()": "Accessor Reduce", "FrameGO.reduce.from_func().items()": "Accessor Reduce", "FrameGO.reduce.from_func().values()": "Accessor Reduce", "FrameGO.reduce.from_func().to_frame()": "Accessor Reduce", "FrameGO.reduce.from_map_func().keys()": "Accessor Reduce", "FrameGO.reduce.from_map_func().__iter__()": "Accessor Reduce", "FrameGO.reduce.from_map_func().items()": "Accessor Reduce", "FrameGO.reduce.from_map_func().values()": "Accessor Reduce", "FrameGO.reduce.from_map_func().to_frame()": "Accessor Reduce", "FrameGO.reduce.from_label_map().keys()": "Accessor Reduce", "FrameGO.reduce.from_label_map().__iter__()": "Accessor Reduce", "FrameGO.reduce.from_label_map().items()": "Accessor Reduce", "FrameGO.reduce.from_label_map().values()": "Accessor Reduce", "FrameGO.reduce.from_label_map().to_frame()": "Accessor Reduce", "FrameGO.reduce.from_label_pair_map().keys()": "Accessor Reduce", "FrameGO.reduce.from_label_pair_map().__iter__()": "Accessor Reduce", "FrameGO.reduce.from_label_pair_map().items()": "Accessor Reduce", "FrameGO.reduce.from_label_pair_map().values()": "Accessor Reduce", "FrameGO.reduce.from_label_pair_map().to_frame()": "Accessor Reduce", "FrameHE.__init__()": "Constructor", "FrameHE.from_arrow()": "Constructor", "FrameHE.from_clipboard()": "Constructor", "FrameHE.from_concat()": "Constructor", "FrameHE.from_concat_items()": "Constructor", "FrameHE.from_csv()": "Constructor", "FrameHE.from_delimited()": "Constructor", "FrameHE.from_dict()": "Constructor", "FrameHE.from_dict_fields()": "Constructor", "FrameHE.from_dict_records()": "Constructor", "FrameHE.from_dict_records_items()": "Constructor", "FrameHE.from_element()": "Constructor", "FrameHE.from_element_items()": "Constructor", "FrameHE.from_elements()": "Constructor", "FrameHE.from_fields()": "Constructor", "FrameHE.from_items()": "Constructor", "FrameHE.from_json_columns()": "Constructor", "FrameHE.from_json_index()": "Constructor", "FrameHE.from_json_records()": "Constructor", "FrameHE.from_json_split()": "Constructor", "FrameHE.from_json_typed()": "Constructor", "FrameHE.from_json_values()": "Constructor", "FrameHE.from_npy()": "Constructor", "FrameHE.from_npy_mmap()": "Constructor", "FrameHE.from_npz()": "Constructor", "FrameHE.from_overlay()": "Constructor", "FrameHE.from_pandas()": "Constructor", "FrameHE.from_parquet()": "Constructor", "FrameHE.from_pickle()": "Constructor", "FrameHE.from_records()": "Constructor", "FrameHE.from_records_items()": "Constructor", "FrameHE.from_series()": "Constructor", "FrameHE.from_sql()": "Constructor", "FrameHE.from_sqlite()": "Constructor", "FrameHE.from_structured_array()": "Constructor", "FrameHE.from_tsv()": "Constructor", "FrameHE.from_xlsx()": "Constructor", "FrameHE.to_arrow()": "Exporter", "FrameHE.to_clipboard()": "Exporter", "FrameHE.to_csv()": "Exporter", "FrameHE.to_delimited()": "Exporter", "FrameHE.to_frame()": "Exporter", "FrameHE.to_frame_go()": "Exporter", "FrameHE.to_frame_he()": "Exporter", "FrameHE.to_html()": "Exporter", "FrameHE.to_html_datatables()": "Exporter", "FrameHE.to_json_columns()": "Exporter", "FrameHE.to_json_index()": "Exporter", "FrameHE.to_json_records()": "Exporter", "FrameHE.to_json_split()": "Exporter", "FrameHE.to_json_typed()": "Exporter", "FrameHE.to_json_values()": "Exporter", "FrameHE.to_latex()": "Exporter", "FrameHE.to_markdown()": "Exporter", "FrameHE.to_npy()": "Exporter", "FrameHE.to_npz()": "Exporter", "FrameHE.to_pairs()": "Exporter", "FrameHE.to_pandas()": "Exporter", "FrameHE.to_parquet()": "Exporter", "FrameHE.to_pickle()": "Exporter", "FrameHE.to_rst()": "Exporter", "FrameHE.to_series()": "Exporter", "FrameHE.to_sql()": "Exporter", "FrameHE.to_sqlite()": "Exporter", "FrameHE.to_tsv()": "Exporter", "FrameHE.to_visidata()": "Exporter", "FrameHE.to_xarray()": "Exporter", "FrameHE.to_xlsx()": "Exporter", "FrameHE.STATIC": "Attribute", "FrameHE.T": "Attribute", "FrameHE.columns": "Attribute", "FrameHE.dtypes": "Attribute", "FrameHE.index": "Attribute", "FrameHE.memory": "Attribute", "FrameHE.mloc": "Attribute", "FrameHE.name": "Attribute", "FrameHE.nbytes": "Attribute", "FrameHE.ndim": "Attribute", "FrameHE.shape": "Attribute", "FrameHE.size": "Attribute", "FrameHE.__array__()": "Method", "FrameHE.__array_ufunc__()": "Method", "FrameHE.__bool__()": "Method", "FrameHE.__copy__()": "Method", "FrameHE.__dataframe__()": "Method", "FrameHE.__deepcopy__()": "Method", "FrameHE.__len__()": "Method", "FrameHE.__round__()": "Method", "FrameHE.all()": "Method", "FrameHE.any()": "Method", "FrameHE.astype[]()": "Method", "FrameHE.astype()": "Method", "FrameHE.clip()": "Method", "FrameHE.consolidate[]": "Method", "FrameHE.consolidate()": "Method", "FrameHE.consolidate.status": "Method", "FrameHE.corr()": "Method", "FrameHE.count()": "Method", "FrameHE.cov()": "Method", "FrameHE.cumprod()": "Method", "FrameHE.cumsum()": "Method", "FrameHE.drop_duplicated()": "Method", "FrameHE.dropfalsy()": "Method", "FrameHE.dropna()": "Method", "FrameHE.duplicated()": "Method", "FrameHE.equals()": "Method", "FrameHE.fillfalsy()": "Method", "FrameHE.fillfalsy_backward()": "Method", "FrameHE.fillfalsy_forward()": "Method", "FrameHE.fillfalsy_leading()": "Method", "FrameHE.fillfalsy_trailing()": "Method", "FrameHE.fillna()": "Method", "FrameHE.fillna_backward()": "Method", "FrameHE.fillna_forward()": "Method", "FrameHE.fillna_leading()": "Method", "FrameHE.fillna_trailing()": "Method", "FrameHE.head()": "Method", "FrameHE.iloc_max()": "Method", "FrameHE.iloc_min()": "Method", "FrameHE.iloc_notfalsy_first()": "Method", "FrameHE.iloc_notfalsy_last()": "Method", "FrameHE.iloc_notna_first()": "Method", "FrameHE.iloc_notna_last()": "Method", "FrameHE.insert_after()": "Method", "FrameHE.insert_before()": "Method", "FrameHE.isfalsy()": "Method", "FrameHE.isin()": "Method", "FrameHE.isna()": "Method", "FrameHE.join_inner()": "Method", "FrameHE.join_left()": "Method", "FrameHE.join_outer()": "Method", "FrameHE.join_right()": "Method", "FrameHE.loc_max()": "Method", "FrameHE.loc_min()": "Method", "FrameHE.loc_notfalsy_first()": "Method", "FrameHE.loc_notfalsy_last()": "Method", "FrameHE.loc_notna_first()": "Method", "FrameHE.loc_notna_last()": "Method", "FrameHE.max()": "Method", "FrameHE.mean()": "Method", "FrameHE.median()": "Method", "FrameHE.merge_inner()": "Method", "FrameHE.merge_left()": "Method", "FrameHE.merge_outer()": "Method", "FrameHE.merge_right()": "Method", "FrameHE.min()": "Method", "FrameHE.notfalsy()": "Method", "FrameHE.notna()": "Method", "FrameHE.pivot()": "Method", "FrameHE.pivot_stack()": "Method", "FrameHE.pivot_unstack()": "Method", "FrameHE.prod()": "Method", "FrameHE.rank_dense()": "Method", "FrameHE.rank_max()": "Method", "FrameHE.rank_mean()": "Method", "FrameHE.rank_min()": "Method", "FrameHE.rank_ordinal()": "Method", "FrameHE.rehierarch()": "Method", "FrameHE.reindex()": "Method", "FrameHE.relabel()": "Method", "FrameHE.relabel_flat()": "Method", "FrameHE.relabel_level_add()": "Method", "FrameHE.relabel_level_drop()": "Method", "FrameHE.relabel_shift_in()": "Method", "FrameHE.relabel_shift_out()": "Method", "FrameHE.rename()": "Method", "FrameHE.roll()": "Method", "FrameHE.sample()": "Method", "FrameHE.set_columns()": "Method", "FrameHE.set_columns_hierarchy()": "Method", "FrameHE.set_index()": "Method", "FrameHE.set_index_hierarchy()": "Method", "FrameHE.shift()": "Method", "FrameHE.sort_columns()": "Method", "FrameHE.sort_index()": "Method", "FrameHE.sort_values()": "Method", "FrameHE.std()": "Method", "FrameHE.sum()": "Method", "FrameHE.tail()": "Method", "FrameHE.transpose()": "Method", "FrameHE.unique()": "Method", "FrameHE.unique_enumerated()": "Method", "FrameHE.unset_columns()": "Method", "FrameHE.unset_index()": "Method", "FrameHE.var()": "Method", "FrameHE.__contains__()": "Dictionary-Like", "FrameHE.__iter__()": "Dictionary-Like", "FrameHE.__reversed__()": "Dictionary-Like", "FrameHE.get()": "Dictionary-Like", "FrameHE.items()": "Dictionary-Like", "FrameHE.keys()": "Dictionary-Like", "FrameHE.values": "Dictionary-Like", "FrameHE.interface": "Display", "FrameHE.__repr__()": "Display", "FrameHE.__str__()": "Display", "FrameHE.display()": "Display", "FrameHE.display_tall()": "Display", "FrameHE.display_wide()": "Display", "FrameHE.assign[]()": "Assignment", "FrameHE.assign[].apply()": "Assignment", "FrameHE.assign[].apply_element()": "Assignment", "FrameHE.assign[].apply_element_items()": "Assignment", "FrameHE.assign.iloc[]()": "Assignment", "FrameHE.assign.iloc[].apply()": "Assignment", "FrameHE.assign.iloc[].apply_element()": "Assignment", "FrameHE.assign.iloc[].apply_element_items()": "Assignment", "FrameHE.assign.loc[]()": "Assignment", "FrameHE.assign.loc[].apply()": "Assignment", "FrameHE.assign.loc[].apply_element()": "Assignment", "FrameHE.assign.loc[].apply_element_items()": "Assignment", "FrameHE.assign.bloc[]()": "Assignment", "FrameHE.assign.bloc[].apply()": "Assignment", "FrameHE.assign.bloc[].apply_element()": "Assignment", "FrameHE.assign.bloc[].apply_element_items()": "Assignment", "FrameHE.bloc[]": "Selector", "FrameHE.drop[]": "Selector", "FrameHE.drop.iloc[]": "Selector", "FrameHE.drop.loc[]": "Selector", "FrameHE.mask[]": "Selector", "FrameHE.mask.iloc[]": "Selector", "FrameHE.mask.loc[]": "Selector", "FrameHE.masked_array[]": "Selector", "FrameHE.masked_array.iloc[]": "Selector", "FrameHE.masked_array.loc[]": "Selector", "FrameHE.[]": "Selector", "FrameHE.iloc[]": "Selector", "FrameHE.loc[]": "Selector", "FrameHE.iter_array()": "Iterator", "FrameHE.iter_array().apply()": "Iterator", "FrameHE.iter_array().apply_iter()": "Iterator", "FrameHE.iter_array().apply_iter_items()": "Iterator", "FrameHE.iter_array().apply_pool()": "Iterator", "FrameHE.iter_array_items()": "Iterator", "FrameHE.iter_array_items().apply()": "Iterator", "FrameHE.iter_array_items().apply_iter()": "Iterator", "FrameHE.iter_array_items().apply_iter_items()": "Iterator", "FrameHE.iter_array_items().apply_pool()": "Iterator", "FrameHE.iter_element()": "Iterator", "FrameHE.iter_element().apply()": "Iterator", "FrameHE.iter_element().apply_iter()": "Iterator", "FrameHE.iter_element().apply_iter_items()": "Iterator", "FrameHE.iter_element().apply_pool()": "Iterator", "FrameHE.iter_element().map_all()": "Iterator", "FrameHE.iter_element().map_all_iter()": "Iterator", "FrameHE.iter_element().map_all_iter_items()": "Iterator", "FrameHE.iter_element().map_any()": "Iterator", "FrameHE.iter_element().map_any_iter()": "Iterator", "FrameHE.iter_element().map_any_iter_items()": "Iterator", "FrameHE.iter_element().map_fill()": "Iterator", "FrameHE.iter_element().map_fill_iter()": "Iterator", "FrameHE.iter_element().map_fill_iter_items()": "Iterator", "FrameHE.iter_element_items()": "Iterator", "FrameHE.iter_element_items().apply()": "Iterator", "FrameHE.iter_element_items().apply_iter()": "Iterator", "FrameHE.iter_element_items().apply_iter_items()": "Iterator", "FrameHE.iter_element_items().apply_pool()": "Iterator", "FrameHE.iter_element_items().map_all()": "Iterator", "FrameHE.iter_element_items().map_all_iter()": "Iterator", "FrameHE.iter_element_items().map_all_iter_items()": "Iterator", "FrameHE.iter_element_items().map_any()": "Iterator", "FrameHE.iter_element_items().map_any_iter()": "Iterator", "FrameHE.iter_element_items().map_any_iter_items()": "Iterator", "FrameHE.iter_element_items().map_fill()": "Iterator", "FrameHE.iter_element_items().map_fill_iter()": "Iterator", "FrameHE.iter_element_items().map_fill_iter_items()": "Iterator", "FrameHE.iter_group()": "Iterator", "FrameHE.iter_group().apply()": "Iterator", "FrameHE.iter_group().apply_iter()": "Iterator", "FrameHE.iter_group().apply_iter_items()": "Iterator", "FrameHE.iter_group().apply_pool()": "Iterator", "FrameHE.iter_group().reduce.from_func().keys()": "Iterator", "FrameHE.iter_group().reduce.from_func().__iter__()": "Iterator", "FrameHE.iter_group().reduce.from_func().items()": "Iterator", "FrameHE.iter_group().reduce.from_func().values()": "Iterator", "FrameHE.iter_group().reduce.from_func().to_frame()": "Iterator", "FrameHE.iter_group().reduce.from_map_func().keys()": "Iterator", "FrameHE.iter_group().reduce.from_map_func().__iter__()": "Iterator", "FrameHE.iter_group().reduce.from_map_func().items()": "Iterator", "FrameHE.iter_group().reduce.from_map_func().values()": "Iterator", "FrameHE.iter_group().reduce.from_map_func().to_frame()": "Iterator", "FrameHE.iter_group().reduce.from_label_map().keys()": "Iterator", "FrameHE.iter_group().reduce.from_label_map().__iter__()": "Iterator", "FrameHE.iter_group().reduce.from_label_map().items()": "Iterator", "FrameHE.iter_group().reduce.from_label_map().values()": "Iterator", "FrameHE.iter_group().reduce.from_label_map().to_frame()": "Iterator", "FrameHE.iter_group().reduce.from_label_pair_map().keys()": "Iterator", "FrameHE.iter_group().reduce.from_label_pair_map().__iter__()": "Iterator", "FrameHE.iter_group().reduce.from_label_pair_map().items()": "Iterator", "FrameHE.iter_group().reduce.from_label_pair_map().values()": "Iterator", "FrameHE.iter_group().reduce.from_label_pair_map().to_frame()": "Iterator", "FrameHE.iter_group_array()": "Iterator", "FrameHE.iter_group_array().apply()": "Iterator", "FrameHE.iter_group_array().apply_iter()": "Iterator", "FrameHE.iter_group_array().apply_iter_items()": "Iterator", "FrameHE.iter_group_array().apply_pool()": "Iterator", "FrameHE.iter_group_array().reduce.from_func().keys()": "Iterator", "FrameHE.iter_group_array().reduce.from_func().__iter__()": "Iterator", "FrameHE.iter_group_array().reduce.from_func().items()": "Iterator", "FrameHE.iter_group_array().reduce.from_func().values()": "Iterator", "FrameHE.iter_group_array().reduce.from_func().to_frame()": "Iterator", "FrameHE.iter_group_array().reduce.from_map_func().keys()": "Iterator", "FrameHE.iter_group_array().reduce.from_map_func().__iter__()": "Iterator", "FrameHE.iter_group_array().reduce.from_map_func().items()": "Iterator", "FrameHE.iter_group_array().reduce.from_map_func().values()": "Iterator", "FrameHE.iter_group_array().reduce.from_map_func().to_frame()": "Iterator", "FrameHE.iter_group_array().reduce.from_label_map().keys()": "Iterator", "FrameHE.iter_group_array().reduce.from_label_map().__iter__()": "Iterator", "FrameHE.iter_group_array().reduce.from_label_map().items()": "Iterator", "FrameHE.iter_group_array().reduce.from_label_map().values()": "Iterator", "FrameHE.iter_group_array().reduce.from_label_map().to_frame()": "Iterator", "FrameHE.iter_group_array().reduce.from_label_pair_map().keys()": "Iterator", "FrameHE.iter_group_array().reduce.from_label_pair_map().__iter__()": "Iterator", "FrameHE.iter_group_array().reduce.from_label_pair_map().items()": "Iterator", "FrameHE.iter_group_array().reduce.from_label_pair_map().values()": "Iterator", "FrameHE.iter_group_array().reduce.from_label_pair_map().to_frame()": "Iterator", "FrameHE.iter_group_array_items()": "Iterator", "FrameHE.iter_group_array_items().apply()": "Iterator", "FrameHE.iter_group_array_items().apply_iter()": "Iterator", "FrameHE.iter_group_array_items().apply_iter_items()": "Iterator", "FrameHE.iter_group_array_items().apply_pool()": "Iterator", "FrameHE.iter_group_array_items().reduce.from_func().keys()": "Iterator", "FrameHE.iter_group_array_items().reduce.from_func().__iter__()": "Iterator", "FrameHE.iter_group_array_items().reduce.from_func().items()": "Iterator", "FrameHE.iter_group_array_items().reduce.from_func().values()": "Iterator", "FrameHE.iter_group_array_items().reduce.from_func().to_frame()": "Iterator", "FrameHE.iter_group_array_items().reduce.from_map_func().keys()": "Iterator", "FrameHE.iter_group_array_items().reduce.from_map_func().__iter__()": "Iterator", "FrameHE.iter_group_array_items().reduce.from_map_func().items()": "Iterator", "FrameHE.iter_group_array_items().reduce.from_map_func().values()": "Iterator", "FrameHE.iter_group_array_items().reduce.from_map_func().to_frame()": "Iterator", "FrameHE.iter_group_array_items().reduce.from_label_map().keys()": "Iterator", "FrameHE.iter_group_array_items().reduce.from_label_map().__iter__()": "Iterator", "FrameHE.iter_group_array_items().reduce.from_label_map().items()": "Iterator", "FrameHE.iter_group_array_items().reduce.from_label_map().values()": "Iterator", "FrameHE.iter_group_array_items().reduce.from_label_map().to_frame()": "Iterator", "FrameHE.iter_group_array_items().reduce.from_label_pair_map().keys()": "Iterator", "FrameHE.iter_group_array_items().reduce.from_label_pair_map().__iter__()": "Iterator", "FrameHE.iter_group_array_items().reduce.from_label_pair_map().items()": "Iterator", "FrameHE.iter_group_array_items().reduce.from_label_pair_map().values()": "Iterator", "FrameHE.iter_group_array_items().reduce.from_label_pair_map().to_frame()": "Iterator", "FrameHE.iter_group_items()": "Iterator", "FrameHE.iter_group_items().apply()": "Iterator", "FrameHE.iter_group_items().apply_iter()": "Iterator", "FrameHE.iter_group_items().apply_iter_items()": "Iterator", "FrameHE.iter_group_items().apply_pool()": "Iterator", "FrameHE.iter_group_items().reduce.from_func().keys()": "Iterator", "FrameHE.iter_group_items().reduce.from_func().__iter__()": "Iterator", "FrameHE.iter_group_items().reduce.from_func().items()": "Iterator", "FrameHE.iter_group_items().reduce.from_func().values()": "Iterator", "FrameHE.iter_group_items().reduce.from_func().to_frame()": "Iterator", "FrameHE.iter_group_items().reduce.from_map_func().keys()": "Iterator", "FrameHE.iter_group_items().reduce.from_map_func().__iter__()": "Iterator", "FrameHE.iter_group_items().reduce.from_map_func().items()": "Iterator", "FrameHE.iter_group_items().reduce.from_map_func().values()": "Iterator", "FrameHE.iter_group_items().reduce.from_map_func().to_frame()": "Iterator", "FrameHE.iter_group_items().reduce.from_label_map().keys()": "Iterator", "FrameHE.iter_group_items().reduce.from_label_map().__iter__()": "Iterator", "FrameHE.iter_group_items().reduce.from_label_map().items()": "Iterator", "FrameHE.iter_group_items().reduce.from_label_map().values()": "Iterator", "FrameHE.iter_group_items().reduce.from_label_map().to_frame()": "Iterator", "FrameHE.iter_group_items().reduce.from_label_pair_map().keys()": "Iterator", "FrameHE.iter_group_items().reduce.from_label_pair_map().__iter__()": "Iterator", "FrameHE.iter_group_items().reduce.from_label_pair_map().items()": "Iterator", "FrameHE.iter_group_items().reduce.from_label_pair_map().values()": "Iterator", "FrameHE.iter_group_items().reduce.from_label_pair_map().to_frame()": "Iterator", "FrameHE.iter_group_labels()": "Iterator", "FrameHE.iter_group_labels().apply()": "Iterator", "FrameHE.iter_group_labels().apply_iter()": "Iterator", "FrameHE.iter_group_labels().apply_iter_items()": "Iterator", "FrameHE.iter_group_labels().apply_pool()": "Iterator", "FrameHE.iter_group_labels_array()": "Iterator", "FrameHE.iter_group_labels_array().apply()": "Iterator", "FrameHE.iter_group_labels_array().apply_iter()": "Iterator", "FrameHE.iter_group_labels_array().apply_iter_items()": "Iterator", "FrameHE.iter_group_labels_array().apply_pool()": "Iterator", "FrameHE.iter_group_labels_array_items()": "Iterator", "FrameHE.iter_group_labels_array_items().apply()": "Iterator", "FrameHE.iter_group_labels_array_items().apply_iter()": "Iterator", "FrameHE.iter_group_labels_array_items().apply_iter_items()": "Iterator", "FrameHE.iter_group_labels_array_items().apply_pool()": "Iterator", "FrameHE.iter_group_labels_items()": "Iterator", "FrameHE.iter_group_labels_items().apply()": "Iterator", "FrameHE.iter_group_labels_items().apply_iter()": "Iterator", "FrameHE.iter_group_labels_items().apply_iter_items()": "Iterator", "FrameHE.iter_group_labels_items().apply_pool()": "Iterator", "FrameHE.iter_group_other()": "Iterator", "FrameHE.iter_group_other().apply()": "Iterator", "FrameHE.iter_group_other().apply_iter()": "Iterator", "FrameHE.iter_group_other().apply_iter_items()": "Iterator", "FrameHE.iter_group_other().apply_pool()": "Iterator", "FrameHE.iter_group_other().reduce.from_func().keys()": "Iterator", "FrameHE.iter_group_other().reduce.from_func().__iter__()": "Iterator", "FrameHE.iter_group_other().reduce.from_func().items()": "Iterator", "FrameHE.iter_group_other().reduce.from_func().values()": "Iterator", "FrameHE.iter_group_other().reduce.from_func().to_frame()": "Iterator", "FrameHE.iter_group_other().reduce.from_map_func().keys()": "Iterator", "FrameHE.iter_group_other().reduce.from_map_func().__iter__()": "Iterator", "FrameHE.iter_group_other().reduce.from_map_func().items()": "Iterator", "FrameHE.iter_group_other().reduce.from_map_func().values()": "Iterator", "FrameHE.iter_group_other().reduce.from_map_func().to_frame()": "Iterator", "FrameHE.iter_group_other().reduce.from_label_map().keys()": "Iterator", "FrameHE.iter_group_other().reduce.from_label_map().__iter__()": "Iterator", "FrameHE.iter_group_other().reduce.from_label_map().items()": "Iterator", "FrameHE.iter_group_other().reduce.from_label_map().values()": "Iterator", "FrameHE.iter_group_other().reduce.from_label_map().to_frame()": "Iterator", "FrameHE.iter_group_other().reduce.from_label_pair_map().keys()": "Iterator", "FrameHE.iter_group_other().reduce.from_label_pair_map().__iter__()": "Iterator", "FrameHE.iter_group_other().reduce.from_label_pair_map().items()": "Iterator", "FrameHE.iter_group_other().reduce.from_label_pair_map().values()": "Iterator", "FrameHE.iter_group_other().reduce.from_label_pair_map().to_frame()": "Iterator", "FrameHE.iter_group_other_array()": "Iterator", "FrameHE.iter_group_other_array().apply()": "Iterator", "FrameHE.iter_group_other_array().apply_iter()": "Iterator", "FrameHE.iter_group_other_array().apply_iter_items()": "Iterator", "FrameHE.iter_group_other_array().apply_pool()": "Iterator", "FrameHE.iter_group_other_array().reduce.from_func().keys()": "Iterator", "FrameHE.iter_group_other_array().reduce.from_func().__iter__()": "Iterator", "FrameHE.iter_group_other_array().reduce.from_func().items()": "Iterator", "FrameHE.iter_group_other_array().reduce.from_func().values()": "Iterator", "FrameHE.iter_group_other_array().reduce.from_func().to_frame()": "Iterator", "FrameHE.iter_group_other_array().reduce.from_map_func().keys()": "Iterator", "FrameHE.iter_group_other_array().reduce.from_map_func().__iter__()": "Iterator", "FrameHE.iter_group_other_array().reduce.from_map_func().items()": "Iterator", "FrameHE.iter_group_other_array().reduce.from_map_func().values()": "Iterator", "FrameHE.iter_group_other_array().reduce.from_map_func().to_frame()": "Iterator", "FrameHE.iter_group_other_array().reduce.from_label_map().keys()": "Iterator", "FrameHE.iter_group_other_array().reduce.from_label_map().__iter__()": "Iterator", "FrameHE.iter_group_other_array().reduce.from_label_map().items()": "Iterator", "FrameHE.iter_group_other_array().reduce.from_label_map().values()": "Iterator", "FrameHE.iter_group_other_array().reduce.from_label_map().to_frame()": "Iterator", "FrameHE.iter_group_other_array().reduce.from_label_pair_map().keys()": "Iterator", "FrameHE.iter_group_other_array().reduce.from_label_pair_map().__iter__()": "Iterator", "FrameHE.iter_group_other_array().reduce.from_label_pair_map().items()": "Iterator", "FrameHE.iter_group_other_array().reduce.from_label_pair_map().values()": "Iterator", "FrameHE.iter_group_other_array().reduce.from_label_pair_map().to_frame()": "Iterator", "FrameHE.iter_group_other_array_items()": "Iterator", "FrameHE.iter_group_other_array_items().apply()": "Iterator", "FrameHE.iter_group_other_array_items().apply_iter()": "Iterator", "FrameHE.iter_group_other_array_items().apply_iter_items()": "Iterator", "FrameHE.iter_group_other_array_items().apply_pool()": "Iterator", "FrameHE.iter_group_other_array_items().reduce.from_func().keys()": "Iterator", "FrameHE.iter_group_other_array_items().reduce.from_func().__iter__()": "Iterator", "FrameHE.iter_group_other_array_items().reduce.from_func().items()": "Iterator", "FrameHE.iter_group_other_array_items().reduce.from_func().values()": "Iterator", "FrameHE.iter_group_other_array_items().reduce.from_func().to_frame()": "Iterator", "FrameHE.iter_group_other_array_items().reduce.from_map_func().keys()": "Iterator", "FrameHE.iter_group_other_array_items().reduce.from_map_func().__iter__()": "Iterator", "FrameHE.iter_group_other_array_items().reduce.from_map_func().items()": "Iterator", "FrameHE.iter_group_other_array_items().reduce.from_map_func().values()": "Iterator", "FrameHE.iter_group_other_array_items().reduce.from_map_func().to_frame()": "Iterator", "FrameHE.iter_group_other_array_items().reduce.from_label_map().keys()": "Iterator", "FrameHE.iter_group_other_array_items().reduce.from_label_map().__iter__()": "Iterator", "FrameHE.iter_group_other_array_items().reduce.from_label_map().items()": "Iterator", "FrameHE.iter_group_other_array_items().reduce.from_label_map().values()": "Iterator", "FrameHE.iter_group_other_array_items().reduce.from_label_map().to_frame()": "Iterator", "FrameHE.iter_group_other_array_items().reduce.from_label_pair_map().keys()": "Iterator", "FrameHE.iter_group_other_array_items().reduce.from_label_pair_map().__iter__()": "Iterator", "FrameHE.iter_group_other_array_items().reduce.from_label_pair_map().items()": "Iterator", "FrameHE.iter_group_other_array_items().reduce.from_label_pair_map().values()": "Iterator", "FrameHE.iter_group_other_array_items().reduce.from_label_pair_map().to_frame()": "Iterator", "FrameHE.iter_group_other_items()": "Iterator", "FrameHE.iter_group_other_items().apply()": "Iterator", "FrameHE.iter_group_other_items().apply_iter()": "Iterator", "FrameHE.iter_group_other_items().apply_iter_items()": "Iterator", "FrameHE.iter_group_other_items().apply_pool()": "Iterator", "FrameHE.iter_group_other_items().reduce.from_func().keys()": "Iterator", "FrameHE.iter_group_other_items().reduce.from_func().__iter__()": "Iterator", "FrameHE.iter_group_other_items().reduce.from_func().items()": "Iterator", "FrameHE.iter_group_other_items().reduce.from_func().values()": "Iterator", "FrameHE.iter_group_other_items().reduce.from_func().to_frame()": "Iterator", "FrameHE.iter_group_other_items().reduce.from_map_func().keys()": "Iterator", "FrameHE.iter_group_other_items().reduce.from_map_func().__iter__()": "Iterator", "FrameHE.iter_group_other_items().reduce.from_map_func().items()": "Iterator", "FrameHE.iter_group_other_items().reduce.from_map_func().values()": "Iterator", "FrameHE.iter_group_other_items().reduce.from_map_func().to_frame()": "Iterator", "FrameHE.iter_group_other_items().reduce.from_label_map().keys()": "Iterator", "FrameHE.iter_group_other_items().reduce.from_label_map().__iter__()": "Iterator", "FrameHE.iter_group_other_items().reduce.from_label_map().items()": "Iterator", "FrameHE.iter_group_other_items().reduce.from_label_map().values()": "Iterator", "FrameHE.iter_group_other_items().reduce.from_label_map().to_frame()": "Iterator", "FrameHE.iter_group_other_items().reduce.from_label_pair_map().keys()": "Iterator", "FrameHE.iter_group_other_items().reduce.from_label_pair_map().__iter__()": "Iterator", "FrameHE.iter_group_other_items().reduce.from_label_pair_map().items()": "Iterator", "FrameHE.iter_group_other_items().reduce.from_label_pair_map().values()": "Iterator", "FrameHE.iter_group_other_items().reduce.from_label_pair_map().to_frame()": "Iterator", "FrameHE.iter_series()": "Iterator", "FrameHE.iter_series().apply()": "Iterator", "FrameHE.iter_series().apply_iter()": "Iterator", "FrameHE.iter_series().apply_iter_items()": "Iterator", "FrameHE.iter_series().apply_pool()": "Iterator", "FrameHE.iter_series_items()": "Iterator", "FrameHE.iter_series_items().apply()": "Iterator", "FrameHE.iter_series_items().apply_iter()": "Iterator", "FrameHE.iter_series_items().apply_iter_items()": "Iterator", "FrameHE.iter_series_items().apply_pool()": "Iterator", "FrameHE.iter_tuple()": "Iterator", "FrameHE.iter_tuple().apply()": "Iterator", "FrameHE.iter_tuple().apply_iter()": "Iterator", "FrameHE.iter_tuple().apply_iter_items()": "Iterator", "FrameHE.iter_tuple().apply_pool()": "Iterator", "FrameHE.iter_tuple().map_all()": "Iterator", "FrameHE.iter_tuple().map_all_iter()": "Iterator", "FrameHE.iter_tuple().map_all_iter_items()": "Iterator", "FrameHE.iter_tuple().map_any()": "Iterator", "FrameHE.iter_tuple().map_any_iter()": "Iterator", "FrameHE.iter_tuple().map_any_iter_items()": "Iterator", "FrameHE.iter_tuple().map_fill()": "Iterator", "FrameHE.iter_tuple().map_fill_iter()": "Iterator", "FrameHE.iter_tuple().map_fill_iter_items()": "Iterator", "FrameHE.iter_tuple_items()": "Iterator", "FrameHE.iter_tuple_items().apply()": "Iterator", "FrameHE.iter_tuple_items().apply_iter()": "Iterator", "FrameHE.iter_tuple_items().apply_iter_items()": "Iterator", "FrameHE.iter_tuple_items().apply_pool()": "Iterator", "FrameHE.iter_tuple_items().map_all()": "Iterator", "FrameHE.iter_tuple_items().map_all_iter()": "Iterator", "FrameHE.iter_tuple_items().map_all_iter_items()": "Iterator", "FrameHE.iter_tuple_items().map_any()": "Iterator", "FrameHE.iter_tuple_items().map_any_iter()": "Iterator", "FrameHE.iter_tuple_items().map_any_iter_items()": "Iterator", "FrameHE.iter_tuple_items().map_fill()": "Iterator", "FrameHE.iter_tuple_items().map_fill_iter()": "Iterator", "FrameHE.iter_tuple_items().map_fill_iter_items()": "Iterator", "FrameHE.iter_window()": "Iterator", "FrameHE.iter_window().apply()": "Iterator", "FrameHE.iter_window().apply_iter()": "Iterator", "FrameHE.iter_window().apply_iter_items()": "Iterator", "FrameHE.iter_window().apply_pool()": "Iterator", "FrameHE.iter_window().reduce.from_func().keys()": "Iterator", "FrameHE.iter_window().reduce.from_func().__iter__()": "Iterator", "FrameHE.iter_window().reduce.from_func().items()": "Iterator", "FrameHE.iter_window().reduce.from_func().values()": "Iterator", "FrameHE.iter_window().reduce.from_func().to_frame()": "Iterator", "FrameHE.iter_window().reduce.from_map_func().keys()": "Iterator", "FrameHE.iter_window().reduce.from_map_func().__iter__()": "Iterator", "FrameHE.iter_window().reduce.from_map_func().items()": "Iterator", "FrameHE.iter_window().reduce.from_map_func().values()": "Iterator", "FrameHE.iter_window().reduce.from_map_func().to_frame()": "Iterator", "FrameHE.iter_window().reduce.from_label_map().keys()": "Iterator", "FrameHE.iter_window().reduce.from_label_map().__iter__()": "Iterator", "FrameHE.iter_window().reduce.from_label_map().items()": "Iterator", "FrameHE.iter_window().reduce.from_label_map().values()": "Iterator", "FrameHE.iter_window().reduce.from_label_map().to_frame()": "Iterator", "FrameHE.iter_window().reduce.from_label_pair_map().keys()": "Iterator", "FrameHE.iter_window().reduce.from_label_pair_map().__iter__()": "Iterator", "FrameHE.iter_window().reduce.from_label_pair_map().items()": "Iterator", "FrameHE.iter_window().reduce.from_label_pair_map().values()": "Iterator", "FrameHE.iter_window().reduce.from_label_pair_map().to_frame()": "Iterator", "FrameHE.iter_window_array()": "Iterator", "FrameHE.iter_window_array().apply()": "Iterator", "FrameHE.iter_window_array().apply_iter()": "Iterator", "FrameHE.iter_window_array().apply_iter_items()": "Iterator", "FrameHE.iter_window_array().apply_pool()": "Iterator", "FrameHE.iter_window_array().reduce.from_func().keys()": "Iterator", "FrameHE.iter_window_array().reduce.from_func().__iter__()": "Iterator", "FrameHE.iter_window_array().reduce.from_func().items()": "Iterator", "FrameHE.iter_window_array().reduce.from_func().values()": "Iterator", "FrameHE.iter_window_array().reduce.from_func().to_frame()": "Iterator", "FrameHE.iter_window_array().reduce.from_map_func().keys()": "Iterator", "FrameHE.iter_window_array().reduce.from_map_func().__iter__()": "Iterator", "FrameHE.iter_window_array().reduce.from_map_func().items()": "Iterator", "FrameHE.iter_window_array().reduce.from_map_func().values()": "Iterator", "FrameHE.iter_window_array().reduce.from_map_func().to_frame()": "Iterator", "FrameHE.iter_window_array().reduce.from_label_map().keys()": "Iterator", "FrameHE.iter_window_array().reduce.from_label_map().__iter__()": "Iterator", "FrameHE.iter_window_array().reduce.from_label_map().items()": "Iterator", "FrameHE.iter_window_array().reduce.from_label_map().values()": "Iterator", "FrameHE.iter_window_array().reduce.from_label_map().to_frame()": "Iterator", "FrameHE.iter_window_array().reduce.from_label_pair_map().keys()": "Iterator", "FrameHE.iter_window_array().reduce.from_label_pair_map().__iter__()": "Iterator", "FrameHE.iter_window_array().reduce.from_label_pair_map().items()": "Iterator", "FrameHE.iter_window_array().reduce.from_label_pair_map().values()": "Iterator", "FrameHE.iter_window_array().reduce.from_label_pair_map().to_frame()": "Iterator", "FrameHE.iter_window_array_items()": "Iterator", "FrameHE.iter_window_array_items().apply()": "Iterator", "FrameHE.iter_window_array_items().apply_iter()": "Iterator", "FrameHE.iter_window_array_items().apply_iter_items()": "Iterator", "FrameHE.iter_window_array_items().apply_pool()": "Iterator", "FrameHE.iter_window_array_items().reduce.from_func().keys()": "Iterator", "FrameHE.iter_window_array_items().reduce.from_func().__iter__()": "Iterator", "FrameHE.iter_window_array_items().reduce.from_func().items()": "Iterator", "FrameHE.iter_window_array_items().reduce.from_func().values()": "Iterator", "FrameHE.iter_window_array_items().reduce.from_func().to_frame()": "Iterator", "FrameHE.iter_window_array_items().reduce.from_map_func().keys()": "Iterator", "FrameHE.iter_window_array_items().reduce.from_map_func().__iter__()": "Iterator", "FrameHE.iter_window_array_items().reduce.from_map_func().items()": "Iterator", "FrameHE.iter_window_array_items().reduce.from_map_func().values()": "Iterator", "FrameHE.iter_window_array_items().reduce.from_map_func().to_frame()": "Iterator", "FrameHE.iter_window_array_items().reduce.from_label_map().keys()": "Iterator", "FrameHE.iter_window_array_items().reduce.from_label_map().__iter__()": "Iterator", "FrameHE.iter_window_array_items().reduce.from_label_map().items()": "Iterator", "FrameHE.iter_window_array_items().reduce.from_label_map().values()": "Iterator", "FrameHE.iter_window_array_items().reduce.from_label_map().to_frame()": "Iterator", "FrameHE.iter_window_array_items().reduce.from_label_pair_map().keys()": "Iterator", "FrameHE.iter_window_array_items().reduce.from_label_pair_map().__iter__()": "Iterator", "FrameHE.iter_window_array_items().reduce.from_label_pair_map().items()": "Iterator", "FrameHE.iter_window_array_items().reduce.from_label_pair_map().values()": "Iterator", "FrameHE.iter_window_array_items().reduce.from_label_pair_map().to_frame()": "Iterator", "FrameHE.iter_window_items()": "Iterator", "FrameHE.iter_window_items().apply()": "Iterator", "FrameHE.iter_window_items().apply_iter()": "Iterator", "FrameHE.iter_window_items().apply_iter_items()": "Iterator", "FrameHE.iter_window_items().apply_pool()": "Iterator", "FrameHE.iter_window_items().reduce.from_func().keys()": "Iterator", "FrameHE.iter_window_items().reduce.from_func().__iter__()": "Iterator", "FrameHE.iter_window_items().reduce.from_func().items()": "Iterator", "FrameHE.iter_window_items().reduce.from_func().values()": "Iterator", "FrameHE.iter_window_items().reduce.from_func().to_frame()": "Iterator", "FrameHE.iter_window_items().reduce.from_map_func().keys()": "Iterator", "FrameHE.iter_window_items().reduce.from_map_func().__iter__()": "Iterator", "FrameHE.iter_window_items().reduce.from_map_func().items()": "Iterator", "FrameHE.iter_window_items().reduce.from_map_func().values()": "Iterator", "FrameHE.iter_window_items().reduce.from_map_func().to_frame()": "Iterator", "FrameHE.iter_window_items().reduce.from_label_map().keys()": "Iterator", "FrameHE.iter_window_items().reduce.from_label_map().__iter__()": "Iterator", "FrameHE.iter_window_items().reduce.from_label_map().items()": "Iterator", "FrameHE.iter_window_items().reduce.from_label_map().values()": "Iterator", "FrameHE.iter_window_items().reduce.from_label_map().to_frame()": "Iterator", "FrameHE.iter_window_items().reduce.from_label_pair_map().keys()": "Iterator", "FrameHE.iter_window_items().reduce.from_label_pair_map().__iter__()": "Iterator", "FrameHE.iter_window_items().reduce.from_label_pair_map().items()": "Iterator", "FrameHE.iter_window_items().reduce.from_label_pair_map().values()": "Iterator", "FrameHE.iter_window_items().reduce.from_label_pair_map().to_frame()": "Iterator", "FrameHE.__add__()": "Operator Binary", "FrameHE.__and__()": "Operator Binary", "FrameHE.__eq__()": "Operator Binary", "FrameHE.__floordiv__()": "Operator Binary", "FrameHE.__ge__()": "Operator Binary", "FrameHE.__gt__()": "Operator Binary", "FrameHE.__le__()": "Operator Binary", "FrameHE.__lt__()": "Operator Binary", "FrameHE.__matmul__()": "Operator Binary", "FrameHE.__mod__()": "Operator Binary", "FrameHE.__mul__()": "Operator Binary", "FrameHE.__ne__()": "Operator Binary", "FrameHE.__or__()": "Operator Binary", "FrameHE.__pow__()": "Operator Binary", "FrameHE.__radd__()": "Operator Binary", "FrameHE.__rfloordiv__()": "Operator Binary", "FrameHE.__rmatmul__()": "Operator Binary", "FrameHE.__rmul__()": "Operator Binary", "FrameHE.__rshift__()": "Operator Binary", "FrameHE.__rsub__()": "Operator Binary", "FrameHE.__rtruediv__()": "Operator Binary", "FrameHE.__sub__()": "Operator Binary", "FrameHE.__truediv__()": "Operator Binary", "FrameHE.__xor__()": "Operator Binary", "FrameHE.__abs__()": "Operator Unary", "FrameHE.__invert__()": "Operator Unary", "FrameHE.__neg__()": "Operator Unary", "FrameHE.__pos__()": "Operator Unary", "FrameHE.abs()": "Operator Unary", "FrameHE.via_values.apply()": "Accessor Values", "FrameHE.via_values.__array_ufunc__()": "Accessor Values", "FrameHE.via_values.__call__()": "Accessor Values", "FrameHE.via_dt.__call__()": "Accessor Datetime", "FrameHE.via_dt.year": "Accessor Datetime", "FrameHE.via_dt.year_month": "Accessor Datetime", "FrameHE.via_dt.year_quarter": "Accessor Datetime", "FrameHE.via_dt.month": "Accessor Datetime", "FrameHE.via_dt.day": "Accessor Datetime", "FrameHE.via_dt.hour": "Accessor Datetime", "FrameHE.via_dt.minute": "Accessor Datetime", "FrameHE.via_dt.second": "Accessor Datetime", "FrameHE.via_dt.weekday()": "Accessor Datetime", "FrameHE.via_dt.quarter()": "Accessor Datetime", "FrameHE.via_dt.is_month_end()": "Accessor Datetime", "FrameHE.via_dt.is_month_start()": "Accessor Datetime", "FrameHE.via_dt.is_year_end()": "Accessor Datetime", "FrameHE.via_dt.is_year_start()": "Accessor Datetime", "FrameHE.via_dt.is_quarter_end()": "Accessor Datetime", "FrameHE.via_dt.is_quarter_start()": "Accessor Datetime", "FrameHE.via_dt.timetuple()": "Accessor Datetime", "FrameHE.via_dt.isoformat()": "Accessor Datetime", "FrameHE.via_dt.fromisoformat()": "Accessor Datetime", "FrameHE.via_dt.strftime()": "Accessor Datetime", "FrameHE.via_dt.strptime()": "Accessor Datetime", "FrameHE.via_dt.strpdate()": "Accessor Datetime", "FrameHE.via_str.__getitem__()": "Accessor String", "FrameHE.via_str.capitalize()": "Accessor String", "FrameHE.via_str.center()": "Accessor String", "FrameHE.via_str.contains()": "Accessor String", "FrameHE.via_str.count()": "Accessor String", "FrameHE.via_str.decode()": "Accessor String", "FrameHE.via_str.encode()": "Accessor String", "FrameHE.via_str.endswith()": "Accessor String", "FrameHE.via_str.find()": "Accessor String", "FrameHE.via_str.format()": "Accessor String", "FrameHE.via_str.index()": "Accessor String", "FrameHE.via_str.isalnum()": "Accessor String", "FrameHE.via_str.isalpha()": "Accessor String", "FrameHE.via_str.isdecimal()": "Accessor String", "FrameHE.via_str.isdigit()": "Accessor String", "FrameHE.via_str.islower()": "Accessor String", "FrameHE.via_str.isnumeric()": "Accessor String", "FrameHE.via_str.isspace()": "Accessor String", "FrameHE.via_str.istitle()": "Accessor String", "FrameHE.via_str.isupper()": "Accessor String", "FrameHE.via_str.ljust()": "Accessor String", "FrameHE.via_str.len()": "Accessor String", "FrameHE.via_str.lower()": "Accessor String", "FrameHE.via_str.lstrip()": "Accessor String", "FrameHE.via_str.partition()": "Accessor String", "FrameHE.via_str.replace()": "Accessor String", "FrameHE.via_str.rfind()": "Accessor String", "FrameHE.via_str.rindex()": "Accessor String", "FrameHE.via_str.rjust()": "Accessor String", "FrameHE.via_str.rpartition()": "Accessor String", "FrameHE.via_str.rsplit()": "Accessor String", "FrameHE.via_str.rstrip()": "Accessor String", "FrameHE.via_str.split()": "Accessor String", "FrameHE.via_str.startswith()": "Accessor String", "FrameHE.via_str.strip()": "Accessor String", "FrameHE.via_str.swapcase()": "Accessor String", "FrameHE.via_str.title()": "Accessor String", "FrameHE.via_str.upper()": "Accessor String", "FrameHE.via_str.zfill()": "Accessor String", "FrameHE.via_T.via_fill_value()": "Accessor Transpose", "FrameHE.via_T.__add__()": "Accessor Transpose", "FrameHE.via_T.__sub__()": "Accessor Transpose", "FrameHE.via_T.__mul__()": "Accessor Transpose", "FrameHE.via_T.__truediv__()": "Accessor Transpose", "FrameHE.via_T.__floordiv__()": "Accessor Transpose", "FrameHE.via_T.__mod__()": "Accessor Transpose", "FrameHE.via_T.__pow__()": "Accessor Transpose", "FrameHE.via_T.__lshift__()": "Accessor Transpose", "FrameHE.via_T.__rshift__()": "Accessor Transpose", "FrameHE.via_T.__and__()": "Accessor Transpose", "FrameHE.via_T.__xor__()": "Accessor Transpose", "FrameHE.via_T.__or__()": "Accessor Transpose", "FrameHE.via_T.__lt__()": "Accessor Transpose", "FrameHE.via_T.__le__()": "Accessor Transpose", "FrameHE.via_T.__eq__()": "Accessor Transpose", "FrameHE.via_T.__ne__()": "Accessor Transpose", "FrameHE.via_T.__gt__()": "Accessor Transpose", "FrameHE.via_T.__ge__()": "Accessor Transpose", "FrameHE.via_T.__radd__()": "Accessor Transpose", "FrameHE.via_T.__rsub__()": "Accessor Transpose", "FrameHE.via_T.__rmul__()": "Accessor Transpose", "FrameHE.via_T.__rtruediv__()": "Accessor Transpose", "FrameHE.via_T.__rfloordiv__()": "Accessor Transpose", "FrameHE.via_fill_value().loc": "Accessor Fill Value", "FrameHE.via_fill_value().__getitem__()": "Accessor Fill Value", "FrameHE.via_fill_value().via_T": "Accessor Fill Value", "FrameHE.via_fill_value().__add__()": "Accessor Fill Value", "FrameHE.via_fill_value().__sub__()": "Accessor Fill Value", "FrameHE.via_fill_value().__mul__()": "Accessor Fill Value", "FrameHE.via_fill_value().__truediv__()": "Accessor Fill Value", "FrameHE.via_fill_value().__floordiv__()": "Accessor Fill Value", "FrameHE.via_fill_value().__mod__()": "Accessor Fill Value", "FrameHE.via_fill_value().__pow__()": "Accessor Fill Value", "FrameHE.via_fill_value().__lshift__()": "Accessor Fill Value", "FrameHE.via_fill_value().__rshift__()": "Accessor Fill Value", "FrameHE.via_fill_value().__and__()": "Accessor Fill Value", "FrameHE.via_fill_value().__xor__()": "Accessor Fill Value", "FrameHE.via_fill_value().__or__()": "Accessor Fill Value", "FrameHE.via_fill_value().__lt__()": "Accessor Fill Value", "FrameHE.via_fill_value().__le__()": "Accessor Fill Value", "FrameHE.via_fill_value().__eq__()": "Accessor Fill Value", "FrameHE.via_fill_value().__ne__()": "Accessor Fill Value", "FrameHE.via_fill_value().__gt__()": "Accessor Fill Value", "FrameHE.via_fill_value().__ge__()": "Accessor Fill Value", "FrameHE.via_fill_value().__radd__()": "Accessor Fill Value", "FrameHE.via_fill_value().__rsub__()": "Accessor Fill Value", "FrameHE.via_fill_value().__rmul__()": "Accessor Fill Value", "FrameHE.via_fill_value().__rtruediv__()": "Accessor Fill Value", "FrameHE.via_fill_value().__rfloordiv__()": "Accessor Fill Value", "FrameHE.via_re().search()": "Accessor Regular Expression", "FrameHE.via_re().match()": "Accessor Regular Expression", "FrameHE.via_re().fullmatch()": "Accessor Regular Expression", "FrameHE.via_re().split()": "Accessor Regular Expression", "FrameHE.via_re().findall()": "Accessor Regular Expression", "FrameHE.via_re().sub()": "Accessor Regular Expression", "FrameHE.via_re().subn()": "Accessor Regular Expression", "FrameHE.via_hashlib().to_bytes()": "Accessor Hashlib", "FrameHE.via_hashlib().md5()": "Accessor Hashlib", "FrameHE.via_hashlib().sha256()": "Accessor Hashlib", "FrameHE.via_hashlib().sha512()": "Accessor Hashlib", "FrameHE.via_hashlib().sha3_256()": "Accessor Hashlib", "FrameHE.via_hashlib().sha3_512()": "Accessor Hashlib", "FrameHE.via_hashlib().shake_128()": "Accessor Hashlib", "FrameHE.via_hashlib().shake_256()": "Accessor Hashlib", "FrameHE.via_hashlib().blake2b()": "Accessor Hashlib", "FrameHE.via_hashlib().blake2s()": "Accessor Hashlib", "FrameHE.via_type_clinic.to_hint()": "Accessor Type Clinic", "FrameHE.via_type_clinic.check()": "Accessor Type Clinic", "FrameHE.via_type_clinic.warn()": "Accessor Type Clinic", "FrameHE.via_type_clinic.__call__()": "Accessor Type Clinic", "FrameHE.via_type_clinic.__repr__()": "Accessor Type Clinic", "FrameHE.reduce.from_func().keys()": "Accessor Reduce", "FrameHE.reduce.from_func().__iter__()": "Accessor Reduce", "FrameHE.reduce.from_func().items()": "Accessor Reduce", "FrameHE.reduce.from_func().values()": "Accessor Reduce", "FrameHE.reduce.from_func().to_frame()": "Accessor Reduce", "FrameHE.reduce.from_map_func().keys()": "Accessor Reduce", "FrameHE.reduce.from_map_func().__iter__()": "Accessor Reduce", "FrameHE.reduce.from_map_func().items()": "Accessor Reduce", "FrameHE.reduce.from_map_func().values()": "Accessor Reduce", "FrameHE.reduce.from_map_func().to_frame()": "Accessor Reduce", "FrameHE.reduce.from_label_map().keys()": "Accessor Reduce", "FrameHE.reduce.from_label_map().__iter__()": "Accessor Reduce", "FrameHE.reduce.from_label_map().items()": "Accessor Reduce", "FrameHE.reduce.from_label_map().values()": "Accessor Reduce", "FrameHE.reduce.from_label_map().to_frame()": "Accessor Reduce", "FrameHE.reduce.from_label_pair_map().keys()": "Accessor Reduce", "FrameHE.reduce.from_label_pair_map().__iter__()": "Accessor Reduce", "FrameHE.reduce.from_label_pair_map().items()": "Accessor Reduce", "FrameHE.reduce.from_label_pair_map().values()": "Accessor Reduce", "FrameHE.reduce.from_label_pair_map().to_frame()": "Accessor Reduce", "Bus.__init__()": "Constructor", "Bus.from_concat()": "Constructor", "Bus.from_dict()": "Constructor", "Bus.from_frames()": "Constructor", "Bus.from_items()": "Constructor", "Bus.from_series()": "Constructor", "Bus.from_sqlite()": "Constructor", "Bus.from_xlsx()": "Constructor", "Bus.from_zip_csv()": "Constructor", "Bus.from_zip_npy()": "Constructor", "Bus.from_zip_npz()": "Constructor", "Bus.from_zip_parquet()": "Constructor", "Bus.from_zip_pickle()": "Constructor", "Bus.from_zip_tsv()": "Constructor", "Bus.to_series()": "Exporter", "Bus.to_sqlite()": "Exporter", "Bus.to_visidata()": "Exporter", "Bus.to_xlsx()": "Exporter", "Bus.to_zip_csv()": "Exporter", "Bus.to_zip_npy()": "Exporter", "Bus.to_zip_npz()": "Exporter", "Bus.to_zip_parquet()": "Exporter", "Bus.to_zip_pickle()": "Exporter", "Bus.to_zip_tsv()": "Exporter", "Bus.STATIC": "Attribute", "Bus.dtype": "Attribute", "Bus.dtypes": "Attribute", "Bus.index": "Attribute", "Bus.inventory": "Attribute", "Bus.memory": "Attribute", "Bus.mloc": "Attribute", "Bus.name": "Attribute", "Bus.nbytes": "Attribute", "Bus.ndim": "Attribute", "Bus.shape": "Attribute", "Bus.shapes": "Attribute", "Bus.size": "Attribute", "Bus.status": "Attribute", "Bus.__bool__()": "Method", "Bus.__copy__()": "Method", "Bus.__len__()": "Method", "Bus.copy()": "Method", "Bus.equals()": "Method", "Bus.head()": "Method", "Bus.persist[]": "Method", "Bus.persist.iloc[]": "Method", "Bus.persist.loc[]": "Method", "Bus.persist()": "Method", "Bus.rehierarch()": "Method", "Bus.reindex()": "Method", "Bus.relabel()": "Method", "Bus.relabel_flat()": "Method", "Bus.relabel_level_add()": "Method", "Bus.relabel_level_drop()": "Method", "Bus.rename()": "Method", "Bus.roll()": "Method", "Bus.shift()": "Method", "Bus.sort_index()": "Method", "Bus.sort_values()": "Method", "Bus.tail()": "Method", "Bus.unpersist()": "Method", "Bus.__contains__()": "Dictionary-Like", "Bus.__iter__()": "Dictionary-Like", "Bus.__reversed__()": "Dictionary-Like", "Bus.get()": "Dictionary-Like", "Bus.items()": "Dictionary-Like", "Bus.keys()": "Dictionary-Like", "Bus.values": "Dictionary-Like", "Bus.interface": "Display", "Bus.__repr__()": "Display", "Bus.__str__()": "Display", "Bus.display()": "Display", "Bus.display_tall()": "Display", "Bus.display_wide()": "Display", "Bus.drop[]": "Selector", "Bus.drop.iloc[]": "Selector", "Bus.drop.loc[]": "Selector", "Bus.[]": "Selector", "Bus.iloc[]": "Selector", "Bus.loc[]": "Selector", "Bus.iter_element()": "Iterator", "Bus.iter_element().apply()": "Iterator", "Bus.iter_element().apply_iter()": "Iterator", "Bus.iter_element().apply_iter_items()": "Iterator", "Bus.iter_element().apply_pool()": "Iterator", "Bus.iter_element().reduce.from_func().keys()": "Iterator", "Bus.iter_element().reduce.from_func().__iter__()": "Iterator", "Bus.iter_element().reduce.from_func().items()": "Iterator", "Bus.iter_element().reduce.from_func().values()": "Iterator", "Bus.iter_element().reduce.from_func().to_frame()": "Iterator", "Bus.iter_element().reduce.from_map_func().keys()": "Iterator", "Bus.iter_element().reduce.from_map_func().__iter__()": "Iterator", "Bus.iter_element().reduce.from_map_func().items()": "Iterator", "Bus.iter_element().reduce.from_map_func().values()": "Iterator", "Bus.iter_element().reduce.from_map_func().to_frame()": "Iterator", "Bus.iter_element().reduce.from_label_map().keys()": "Iterator", "Bus.iter_element().reduce.from_label_map().__iter__()": "Iterator", "Bus.iter_element().reduce.from_label_map().items()": "Iterator", "Bus.iter_element().reduce.from_label_map().values()": "Iterator", "Bus.iter_element().reduce.from_label_map().to_frame()": "Iterator", "Bus.iter_element().reduce.from_label_pair_map().keys()": "Iterator", "Bus.iter_element().reduce.from_label_pair_map().__iter__()": "Iterator", "Bus.iter_element().reduce.from_label_pair_map().items()": "Iterator", "Bus.iter_element().reduce.from_label_pair_map().values()": "Iterator", "Bus.iter_element().reduce.from_label_pair_map().to_frame()": "Iterator", "Bus.iter_element_items()": "Iterator", "Bus.iter_element_items().apply()": "Iterator", "Bus.iter_element_items().apply_iter()": "Iterator", "Bus.iter_element_items().apply_iter_items()": "Iterator", "Bus.iter_element_items().apply_pool()": "Iterator", "Bus.iter_element_items().reduce.from_func().keys()": "Iterator", "Bus.iter_element_items().reduce.from_func().__iter__()": "Iterator", "Bus.iter_element_items().reduce.from_func().items()": "Iterator", "Bus.iter_element_items().reduce.from_func().values()": "Iterator", "Bus.iter_element_items().reduce.from_func().to_frame()": "Iterator", "Bus.iter_element_items().reduce.from_map_func().keys()": "Iterator", "Bus.iter_element_items().reduce.from_map_func().__iter__()": "Iterator", "Bus.iter_element_items().reduce.from_map_func().items()": "Iterator", "Bus.iter_element_items().reduce.from_map_func().values()": "Iterator", "Bus.iter_element_items().reduce.from_map_func().to_frame()": "Iterator", "Bus.iter_element_items().reduce.from_label_map().keys()": "Iterator", "Bus.iter_element_items().reduce.from_label_map().__iter__()": "Iterator", "Bus.iter_element_items().reduce.from_label_map().items()": "Iterator", "Bus.iter_element_items().reduce.from_label_map().values()": "Iterator", "Bus.iter_element_items().reduce.from_label_map().to_frame()": "Iterator", "Bus.iter_element_items().reduce.from_label_pair_map().keys()": "Iterator", "Bus.iter_element_items().reduce.from_label_pair_map().__iter__()": "Iterator", "Bus.iter_element_items().reduce.from_label_pair_map().items()": "Iterator", "Bus.iter_element_items().reduce.from_label_pair_map().values()": "Iterator", "Bus.iter_element_items().reduce.from_label_pair_map().to_frame()": "Iterator", "Bus.via_hashlib().to_bytes()": "Accessor Hashlib", "Bus.via_hashlib().md5()": "Accessor Hashlib", "Bus.via_hashlib().sha256()": "Accessor Hashlib", "Bus.via_hashlib().sha512()": "Accessor Hashlib", "Bus.via_hashlib().sha3_256()": "Accessor Hashlib", "Bus.via_hashlib().sha3_512()": "Accessor Hashlib", "Bus.via_hashlib().shake_128()": "Accessor Hashlib", "Bus.via_hashlib().shake_256()": "Accessor Hashlib", "Bus.via_hashlib().blake2b()": "Accessor Hashlib", "Bus.via_hashlib().blake2s()": "Accessor Hashlib", "Bus.via_type_clinic.to_hint()": "Accessor Type Clinic", "Bus.via_type_clinic.check()": "Accessor Type Clinic", "Bus.via_type_clinic.warn()": "Accessor Type Clinic", "Bus.via_type_clinic.__call__()": "Accessor Type Clinic", "Bus.via_type_clinic.__repr__()": "Accessor Type Clinic", "Batch.__init__()": "Constructor", "Batch.from_frames()": "Constructor", "Batch.from_sqlite()": "Constructor", "Batch.from_xlsx()": "Constructor", "Batch.from_zip_csv()": "Constructor", "Batch.from_zip_npy()": "Constructor", "Batch.from_zip_npz()": "Constructor", "Batch.from_zip_parquet()": "Constructor", "Batch.from_zip_pickle()": "Constructor", "Batch.from_zip_tsv()": "Constructor", "Batch.to_bus()": "Exporter", "Batch.to_frame()": "Exporter", "Batch.to_series()": "Exporter", "Batch.to_sqlite()": "Exporter", "Batch.to_visidata()": "Exporter", "Batch.to_xlsx()": "Exporter", "Batch.to_zip_csv()": "Exporter", "Batch.to_zip_npy()": "Exporter", "Batch.to_zip_npz()": "Exporter", "Batch.to_zip_parquet()": "Exporter", "Batch.to_zip_pickle()": "Exporter", "Batch.to_zip_tsv()": "Exporter", "Batch.STATIC": "Attribute", "Batch.T": "Attribute", "Batch.memory": "Attribute", "Batch.name": "Attribute", "Batch.shapes": "Attribute", "Batch.via_container": "Attribute", "Batch.__array__()": "Method", "Batch.__array_ufunc__()": "Method", "Batch.__bool__()": "Method", "Batch.__round__()": "Method", "Batch.all()": "Method", "Batch.any()": "Method", "Batch.apply()": "Method", "Batch.apply_except()": "Method", "Batch.apply_items()": "Method", "Batch.apply_items_except()": "Method", "Batch.astype[]()": "Method", "Batch.astype()": "Method", "Batch.clip()": "Method", "Batch.corr()": "Method", "Batch.count()": "Method", "Batch.cov()": "Method", "Batch.cumprod()": "Method", "Batch.cumsum()": "Method", "Batch.drop_duplicated()": "Method", "Batch.dropfalsy()": "Method", "Batch.dropna()": "Method", "Batch.duplicated()": "Method", "Batch.equals()": "Method", "Batch.fillfalsy()": "Method", "Batch.fillfalsy_backward()": "Method", "Batch.fillfalsy_forward()": "Method", "Batch.fillfalsy_leading()": "Method", "Batch.fillfalsy_trailing()": "Method", "Batch.fillna()": "Method", "Batch.fillna_backward()": "Method", "Batch.fillna_forward()": "Method", "Batch.fillna_leading()": "Method", "Batch.fillna_trailing()": "Method", "Batch.head()": "Method", "Batch.iloc_max()": "Method", "Batch.iloc_min()": "Method", "Batch.isfalsy()": "Method", "Batch.isin()": "Method", "Batch.isna()": "Method", "Batch.loc_max()": "Method", "Batch.loc_min()": "Method", "Batch.max()": "Method", "Batch.mean()": "Method", "Batch.median()": "Method", "Batch.min()": "Method", "Batch.notfalsy()": "Method", "Batch.notna()": "Method", "Batch.prod()": "Method", "Batch.rank_dense()": "Method", "Batch.rank_max()": "Method", "Batch.rank_mean()": "Method", "Batch.rank_min()": "Method", "Batch.rank_ordinal()": "Method", "Batch.reindex()": "Method", "Batch.relabel()": "Method", "Batch.relabel_flat()": "Method", "Batch.relabel_level_add()": "Method", "Batch.relabel_level_drop()": "Method", "Batch.relabel_shift_in()": "Method", "Batch.rename()": "Method", "Batch.roll()": "Method", "Batch.sample()": "Method", "Batch.shift()": "Method", "Batch.sort_columns()": "Method", "Batch.sort_index()": "Method", "Batch.sort_values()": "Method", "Batch.std()": "Method", "Batch.sum()": "Method", "Batch.tail()": "Method", "Batch.transpose()": "Method", "Batch.unique()": "Method", "Batch.unset_index()": "Method", "Batch.var()": "Method", "Batch.__iter__()": "Dictionary-Like", "Batch.items()": "Dictionary-Like", "Batch.keys()": "Dictionary-Like", "Batch.values": "Dictionary-Like", "Batch.interface": "Display", "Batch.__repr__()": "Display", "Batch.__str__()": "Display", "Batch.display()": "Display", "Batch.display_tall()": "Display", "Batch.display_wide()": "Display", "Batch.bloc[]": "Selector", "Batch.drop[]": "Selector", "Batch.drop.iloc[]": "Selector", "Batch.drop.loc[]": "Selector", "Batch.[]": "Selector", "Batch.iloc[]": "Selector", "Batch.loc[]": "Selector", "Batch.__add__()": "Operator Binary", "Batch.__and__()": "Operator Binary", "Batch.__eq__()": "Operator Binary", "Batch.__floordiv__()": "Operator Binary", "Batch.__ge__()": "Operator Binary", "Batch.__gt__()": "Operator Binary", "Batch.__le__()": "Operator Binary", "Batch.__lt__()": "Operator Binary", "Batch.__matmul__()": "Operator Binary", "Batch.__mod__()": "Operator Binary", "Batch.__mul__()": "Operator Binary", "Batch.__ne__()": "Operator Binary", "Batch.__or__()": "Operator Binary", "Batch.__pow__()": "Operator Binary", "Batch.__radd__()": "Operator Binary", "Batch.__rfloordiv__()": "Operator Binary", "Batch.__rmatmul__()": "Operator Binary", "Batch.__rmul__()": "Operator Binary", "Batch.__rshift__()": "Operator Binary", "Batch.__rsub__()": "Operator Binary", "Batch.__rtruediv__()": "Operator Binary", "Batch.__sub__()": "Operator Binary", "Batch.__truediv__()": "Operator Binary", "Batch.__xor__()": "Operator Binary", "Batch.__abs__()": "Operator Unary", "Batch.__invert__()": "Operator Unary", "Batch.__neg__()": "Operator Unary", "Batch.__pos__()": "Operator Unary", "Batch.abs()": "Operator Unary", "Batch.via_values.apply()": "Accessor Values", "Batch.via_values.__array_ufunc__()": "Accessor Values", "Batch.via_values.__call__()": "Accessor Values", "Batch.via_dt.__call__()": "Accessor Datetime", "Batch.via_dt.year": "Accessor Datetime", "Batch.via_dt.year_month": "Accessor Datetime", "Batch.via_dt.year_quarter": "Accessor Datetime", "Batch.via_dt.month": "Accessor Datetime", "Batch.via_dt.day": "Accessor Datetime", "Batch.via_dt.hour": "Accessor Datetime", "Batch.via_dt.minute": "Accessor Datetime", "Batch.via_dt.second": "Accessor Datetime", "Batch.via_dt.weekday()": "Accessor Datetime", "Batch.via_dt.quarter()": "Accessor Datetime", "Batch.via_dt.is_month_end()": "Accessor Datetime", "Batch.via_dt.is_month_start()": "Accessor Datetime", "Batch.via_dt.is_year_end()": "Accessor Datetime", "Batch.via_dt.is_year_start()": "Accessor Datetime", "Batch.via_dt.is_quarter_end()": "Accessor Datetime", "Batch.via_dt.is_quarter_start()": "Accessor Datetime", "Batch.via_dt.timetuple()": "Accessor Datetime", "Batch.via_dt.isoformat()": "Accessor Datetime", "Batch.via_dt.fromisoformat()": "Accessor Datetime", "Batch.via_dt.strftime()": "Accessor Datetime", "Batch.via_dt.strptime()": "Accessor Datetime", "Batch.via_dt.strpdate()": "Accessor Datetime", "Batch.via_str.__getitem__()": "Accessor String", "Batch.via_str.capitalize()": "Accessor String", "Batch.via_str.center()": "Accessor String", "Batch.via_str.contains()": "Accessor String", "Batch.via_str.count()": "Accessor String", "Batch.via_str.decode()": "Accessor String", "Batch.via_str.encode()": "Accessor String", "Batch.via_str.endswith()": "Accessor String", "Batch.via_str.find()": "Accessor String", "Batch.via_str.format()": "Accessor String", "Batch.via_str.index()": "Accessor String", "Batch.via_str.isalnum()": "Accessor String", "Batch.via_str.isalpha()": "Accessor String", "Batch.via_str.isdecimal()": "Accessor String", "Batch.via_str.isdigit()": "Accessor String", "Batch.via_str.islower()": "Accessor String", "Batch.via_str.isnumeric()": "Accessor String", "Batch.via_str.isspace()": "Accessor String", "Batch.via_str.istitle()": "Accessor String", "Batch.via_str.isupper()": "Accessor String", "Batch.via_str.ljust()": "Accessor String", "Batch.via_str.len()": "Accessor String", "Batch.via_str.lower()": "Accessor String", "Batch.via_str.lstrip()": "Accessor String", "Batch.via_str.partition()": "Accessor String", "Batch.via_str.replace()": "Accessor String", "Batch.via_str.rfind()": "Accessor String", "Batch.via_str.rindex()": "Accessor String", "Batch.via_str.rjust()": "Accessor String", "Batch.via_str.rpartition()": "Accessor String", "Batch.via_str.rsplit()": "Accessor String", "Batch.via_str.rstrip()": "Accessor String", "Batch.via_str.split()": "Accessor String", "Batch.via_str.startswith()": "Accessor String", "Batch.via_str.strip()": "Accessor String", "Batch.via_str.swapcase()": "Accessor String", "Batch.via_str.title()": "Accessor String", "Batch.via_str.upper()": "Accessor String", "Batch.via_str.zfill()": "Accessor String", "Batch.via_T.via_fill_value()": "Accessor Transpose", "Batch.via_T.__add__()": "Accessor Transpose", "Batch.via_T.__sub__()": "Accessor Transpose", "Batch.via_T.__mul__()": "Accessor Transpose", "Batch.via_T.__truediv__()": "Accessor Transpose", "Batch.via_T.__floordiv__()": "Accessor Transpose", "Batch.via_T.__mod__()": "Accessor Transpose", "Batch.via_T.__pow__()": "Accessor Transpose", "Batch.via_T.__lshift__()": "Accessor Transpose", "Batch.via_T.__rshift__()": "Accessor Transpose", "Batch.via_T.__and__()": "Accessor Transpose", "Batch.via_T.__xor__()": "Accessor Transpose", "Batch.via_T.__or__()": "Accessor Transpose", "Batch.via_T.__lt__()": "Accessor Transpose", "Batch.via_T.__le__()": "Accessor Transpose", "Batch.via_T.__eq__()": "Accessor Transpose", "Batch.via_T.__ne__()": "Accessor Transpose", "Batch.via_T.__gt__()": "Accessor Transpose", "Batch.via_T.__ge__()": "Accessor Transpose", "Batch.via_T.__radd__()": "Accessor Transpose", "Batch.via_T.__rsub__()": "Accessor Transpose", "Batch.via_T.__rmul__()": "Accessor Transpose", "Batch.via_T.__rtruediv__()": "Accessor Transpose", "Batch.via_T.__rfloordiv__()": "Accessor Transpose", "Batch.via_fill_value().loc": "Accessor Fill Value", "Batch.via_fill_value().__getitem__()": "Accessor Fill Value", "Batch.via_fill_value().via_T": "Accessor Fill Value", "Batch.via_fill_value().__add__()": "Accessor Fill Value", "Batch.via_fill_value().__sub__()": "Accessor Fill Value", "Batch.via_fill_value().__mul__()": "Accessor Fill Value", "Batch.via_fill_value().__truediv__()": "Accessor Fill Value", "Batch.via_fill_value().__floordiv__()": "Accessor Fill Value", "Batch.via_fill_value().__mod__()": "Accessor Fill Value", "Batch.via_fill_value().__pow__()": "Accessor Fill Value", "Batch.via_fill_value().__lshift__()": "Accessor Fill Value", "Batch.via_fill_value().__rshift__()": "Accessor Fill Value", "Batch.via_fill_value().__and__()": "Accessor Fill Value", "Batch.via_fill_value().__xor__()": "Accessor Fill Value", "Batch.via_fill_value().__or__()": "Accessor Fill Value", "Batch.via_fill_value().__lt__()": "Accessor Fill Value", "Batch.via_fill_value().__le__()": "Accessor Fill Value", "Batch.via_fill_value().__eq__()": "Accessor Fill Value", "Batch.via_fill_value().__ne__()": "Accessor Fill Value", "Batch.via_fill_value().__gt__()": "Accessor Fill Value", "Batch.via_fill_value().__ge__()": "Accessor Fill Value", "Batch.via_fill_value().__radd__()": "Accessor Fill Value", "Batch.via_fill_value().__rsub__()": "Accessor Fill Value", "Batch.via_fill_value().__rmul__()": "Accessor Fill Value", "Batch.via_fill_value().__rtruediv__()": "Accessor Fill Value", "Batch.via_fill_value().__rfloordiv__()": "Accessor Fill Value", "Batch.via_re().search()": "Accessor Regular Expression", "Batch.via_re().match()": "Accessor Regular Expression", "Batch.via_re().fullmatch()": "Accessor Regular Expression", "Batch.via_re().split()": "Accessor Regular Expression", "Batch.via_re().findall()": "Accessor Regular Expression", "Batch.via_re().sub()": "Accessor Regular Expression", "Batch.via_re().subn()": "Accessor Regular Expression", "Batch.via_hashlib().to_bytes()": "Accessor Hashlib", "Batch.via_hashlib().md5()": "Accessor Hashlib", "Batch.via_hashlib().sha256()": "Accessor Hashlib", "Batch.via_hashlib().sha512()": "Accessor Hashlib", "Batch.via_hashlib().sha3_256()": "Accessor Hashlib", "Batch.via_hashlib().sha3_512()": "Accessor Hashlib", "Batch.via_hashlib().shake_128()": "Accessor Hashlib", "Batch.via_hashlib().shake_256()": "Accessor Hashlib", "Batch.via_hashlib().blake2b()": "Accessor Hashlib", "Batch.via_hashlib().blake2s()": "Accessor Hashlib", "Batch.via_type_clinic.to_hint()": "Accessor Type Clinic", "Batch.via_type_clinic.check()": "Accessor Type Clinic", "Batch.via_type_clinic.warn()": "Accessor Type Clinic", "Batch.via_type_clinic.__call__()": "Accessor Type Clinic", "Batch.via_type_clinic.__repr__()": "Accessor Type Clinic", "Batch.reduce.from_func()": "Accessor Reduce", "Batch.reduce.from_map_func()": "Accessor Reduce", "Batch.reduce.from_label_map()": "Accessor Reduce", "Batch.reduce.from_label_pair_map()": "Accessor Reduce", "Yarn.__init__()": "Constructor", "Yarn.from_buses()": "Constructor", "Yarn.from_concat()": "Constructor", "Yarn.to_series()": "Exporter", "Yarn.to_sqlite()": "Exporter", "Yarn.to_visidata()": "Exporter", "Yarn.to_xlsx()": "Exporter", "Yarn.to_zip_csv()": "Exporter", "Yarn.to_zip_npy()": "Exporter", "Yarn.to_zip_npz()": "Exporter", "Yarn.to_zip_parquet()": "Exporter", "Yarn.to_zip_pickle()": "Exporter", "Yarn.to_zip_tsv()": "Exporter", "Yarn.STATIC": "Attribute", "Yarn.dtype": "Attribute", "Yarn.dtypes": "Attribute", "Yarn.index": "Attribute", "Yarn.inventory": "Attribute", "Yarn.memory": "Attribute", "Yarn.mloc": "Attribute", "Yarn.name": "Attribute", "Yarn.nbytes": "Attribute", "Yarn.ndim": "Attribute", "Yarn.shape": "Attribute", "Yarn.shapes": "Attribute", "Yarn.size": "Attribute", "Yarn.status": "Attribute", "Yarn.__bool__()": "Method", "Yarn.__copy__()": "Method", "Yarn.__len__()": "Method", "Yarn.copy()": "Method", "Yarn.equals()": "Method", "Yarn.head()": "Method", "Yarn.persist[]": "Method", "Yarn.persist.iloc[]": "Method", "Yarn.persist.loc[]": "Method", "Yarn.persist()": "Method", "Yarn.rehierarch()": "Method", "Yarn.reindex()": "Method", "Yarn.relabel()": "Method", "Yarn.relabel_flat()": "Method", "Yarn.relabel_level_add()": "Method", "Yarn.relabel_level_drop()": "Method", "Yarn.rename()": "Method", "Yarn.roll()": "Method", "Yarn.shift()": "Method", "Yarn.sort_index()": "Method", "Yarn.sort_values()": "Method", "Yarn.tail()": "Method", "Yarn.unpersist()": "Method", "Yarn.__contains__()": "Dictionary-Like", "Yarn.__iter__()": "Dictionary-Like", "Yarn.__reversed__()": "Dictionary-Like", "Yarn.get()": "Dictionary-Like", "Yarn.items()": "Dictionary-Like", "Yarn.keys()": "Dictionary-Like", "Yarn.values": "Dictionary-Like", "Yarn.interface": "Display", "Yarn.__repr__()": "Display", "Yarn.__str__()": "Display", "Yarn.display()": "Display", "Yarn.display_tall()": "Display", "Yarn.display_wide()": "Display", "Yarn.drop[]": "Selector", "Yarn.drop.iloc[]": "Selector", "Yarn.drop.loc[]": "Selector", "Yarn.[]": "Selector", "Yarn.iloc[]": "Selector", "Yarn.loc[]": "Selector", "Yarn.iter_element()": "Iterator", "Yarn.iter_element().apply()": "Iterator", "Yarn.iter_element().apply_iter()": "Iterator", "Yarn.iter_element().apply_iter_items()": "Iterator", "Yarn.iter_element().apply_pool()": "Iterator", "Yarn.iter_element_items()": "Iterator", "Yarn.iter_element_items().apply()": "Iterator", "Yarn.iter_element_items().apply_iter()": "Iterator", "Yarn.iter_element_items().apply_iter_items()": "Iterator", "Yarn.iter_element_items().apply_pool()": "Iterator", "Yarn.via_hashlib().to_bytes()": "Accessor Hashlib", "Yarn.via_hashlib().md5()": "Accessor Hashlib", "Yarn.via_hashlib().sha256()": "Accessor Hashlib", "Yarn.via_hashlib().sha512()": "Accessor Hashlib", "Yarn.via_hashlib().sha3_256()": "Accessor Hashlib", "Yarn.via_hashlib().sha3_512()": "Accessor Hashlib", "Yarn.via_hashlib().shake_128()": "Accessor Hashlib", "Yarn.via_hashlib().shake_256()": "Accessor Hashlib", "Yarn.via_hashlib().blake2b()": "Accessor Hashlib", "Yarn.via_hashlib().blake2s()": "Accessor Hashlib", "Yarn.via_type_clinic.to_hint()": "Accessor Type Clinic", "Yarn.via_type_clinic.check()": "Accessor Type Clinic", "Yarn.via_type_clinic.warn()": "Accessor Type Clinic", "Yarn.via_type_clinic.__call__()": "Accessor Type Clinic", "Yarn.via_type_clinic.__repr__()": "Accessor Type Clinic", "Quilt.__init__()": "Constructor", "Quilt.from_frame()": "Constructor", "Quilt.from_frames()": "Constructor", "Quilt.from_items()": "Constructor", "Quilt.from_sqlite()": "Constructor", "Quilt.from_xlsx()": "Constructor", "Quilt.from_zip_csv()": "Constructor", "Quilt.from_zip_npy()": "Constructor", "Quilt.from_zip_npz()": "Constructor", "Quilt.from_zip_parquet()": "Constructor", "Quilt.from_zip_pickle()": "Constructor", "Quilt.from_zip_tsv()": "Constructor", "Quilt.to_frame()": "Exporter", "Quilt.to_sqlite()": "Exporter", "Quilt.to_visidata()": "Exporter", "Quilt.to_xlsx()": "Exporter", "Quilt.to_zip_csv()": "Exporter", "Quilt.to_zip_npy()": "Exporter", "Quilt.to_zip_npz()": "Exporter", "Quilt.to_zip_parquet()": "Exporter", "Quilt.to_zip_pickle()": "Exporter", "Quilt.to_zip_tsv()": "Exporter", "Quilt.STATIC": "Attribute", "Quilt.bus": "Attribute", "Quilt.columns": "Attribute", "Quilt.index": "Attribute", "Quilt.inventory": "Attribute", "Quilt.memory": "Attribute", "Quilt.name": "Attribute", "Quilt.nbytes": "Attribute", "Quilt.ndim": "Attribute", "Quilt.shape": "Attribute", "Quilt.size": "Attribute", "Quilt.status": "Attribute", "Quilt.__bool__()": "Method", "Quilt.equals()": "Method", "Quilt.head()": "Method", "Quilt.rename()": "Method", "Quilt.sample()": "Method", "Quilt.tail()": "Method", "Quilt.unpersist()": "Method", "Quilt.__contains__()": "Dictionary-Like", "Quilt.__iter__()": "Dictionary-Like", "Quilt.get()": "Dictionary-Like", "Quilt.items()": "Dictionary-Like", "Quilt.keys()": "Dictionary-Like", "Quilt.values": "Dictionary-Like", "Quilt.interface": "Display", "Quilt.__repr__()": "Display", "Quilt.__str__()": "Display", "Quilt.display()": "Display", "Quilt.display_tall()": "Display", "Quilt.display_wide()": "Display", "Quilt.[]": "Selector", "Quilt.iloc[]": "Selector", "Quilt.loc[]": "Selector", "Quilt.iter_array()": "Iterator", "Quilt.iter_array().apply()": "Iterator", "Quilt.iter_array().apply_iter()": "Iterator", "Quilt.iter_array().apply_iter_items()": "Iterator", "Quilt.iter_array().apply_pool()": "Iterator", "Quilt.iter_array_items()": "Iterator", "Quilt.iter_array_items().apply()": "Iterator", "Quilt.iter_array_items().apply_iter()": "Iterator", "Quilt.iter_array_items().apply_iter_items()": "Iterator", "Quilt.iter_array_items().apply_pool()": "Iterator", "Quilt.iter_series()": "Iterator", "Quilt.iter_series().apply()": "Iterator", "Quilt.iter_series().apply_iter()": "Iterator", "Quilt.iter_series().apply_iter_items()": "Iterator", "Quilt.iter_series().apply_pool()": "Iterator", "Quilt.iter_series_items()": "Iterator", "Quilt.iter_series_items().apply()": "Iterator", "Quilt.iter_series_items().apply_iter()": "Iterator", "Quilt.iter_series_items().apply_iter_items()": "Iterator", "Quilt.iter_series_items().apply_pool()": "Iterator", "Quilt.iter_tuple()": "Iterator", "Quilt.iter_tuple().apply()": "Iterator", "Quilt.iter_tuple().apply_iter()": "Iterator", "Quilt.iter_tuple().apply_iter_items()": "Iterator", "Quilt.iter_tuple().apply_pool()": "Iterator", "Quilt.iter_tuple().map_all()": "Iterator", "Quilt.iter_tuple().map_all_iter()": "Iterator", "Quilt.iter_tuple().map_all_iter_items()": "Iterator", "Quilt.iter_tuple().map_any()": "Iterator", "Quilt.iter_tuple().map_any_iter()": "Iterator", "Quilt.iter_tuple().map_any_iter_items()": "Iterator", "Quilt.iter_tuple().map_fill()": "Iterator", "Quilt.iter_tuple().map_fill_iter()": "Iterator", "Quilt.iter_tuple().map_fill_iter_items()": "Iterator", "Quilt.iter_tuple_items()": "Iterator", "Quilt.iter_tuple_items().apply()": "Iterator", "Quilt.iter_tuple_items().apply_iter()": "Iterator", "Quilt.iter_tuple_items().apply_iter_items()": "Iterator", "Quilt.iter_tuple_items().apply_pool()": "Iterator", "Quilt.iter_tuple_items().map_all()": "Iterator", "Quilt.iter_tuple_items().map_all_iter()": "Iterator", "Quilt.iter_tuple_items().map_all_iter_items()": "Iterator", "Quilt.iter_tuple_items().map_any()": "Iterator", "Quilt.iter_tuple_items().map_any_iter()": "Iterator", "Quilt.iter_tuple_items().map_any_iter_items()": "Iterator", "Quilt.iter_tuple_items().map_fill()": "Iterator", "Quilt.iter_tuple_items().map_fill_iter()": "Iterator", "Quilt.iter_tuple_items().map_fill_iter_items()": "Iterator", "Quilt.iter_window()": "Iterator", "Quilt.iter_window().apply()": "Iterator", "Quilt.iter_window().apply_iter()": "Iterator", "Quilt.iter_window().apply_iter_items()": "Iterator", "Quilt.iter_window().apply_pool()": "Iterator", "Quilt.iter_window_array()": "Iterator", "Quilt.iter_window_array().apply()": "Iterator", "Quilt.iter_window_array().apply_iter()": "Iterator", "Quilt.iter_window_array().apply_iter_items()": "Iterator", "Quilt.iter_window_array().apply_pool()": "Iterator", "Quilt.iter_window_array_items()": "Iterator", "Quilt.iter_window_array_items().apply()": "Iterator", "Quilt.iter_window_array_items().apply_iter()": "Iterator", "Quilt.iter_window_array_items().apply_iter_items()": "Iterator", "Quilt.iter_window_array_items().apply_pool()": "Iterator", "Quilt.iter_window_items()": "Iterator", "Quilt.iter_window_items().apply()": "Iterator", "Quilt.iter_window_items().apply_iter()": "Iterator", "Quilt.iter_window_items().apply_iter_items()": "Iterator", "Quilt.iter_window_items().apply_pool()": "Iterator", "Quilt.via_hashlib().to_bytes()": "Accessor Hashlib", "Quilt.via_hashlib().md5()": "Accessor Hashlib", "Quilt.via_hashlib().sha256()": "Accessor Hashlib", "Quilt.via_hashlib().sha512()": "Accessor Hashlib", "Quilt.via_hashlib().sha3_256()": "Accessor Hashlib", "Quilt.via_hashlib().sha3_512()": "Accessor Hashlib", "Quilt.via_hashlib().shake_128()": "Accessor Hashlib", "Quilt.via_hashlib().shake_256()": "Accessor Hashlib", "Quilt.via_hashlib().blake2b()": "Accessor Hashlib", "Quilt.via_hashlib().blake2s()": "Accessor Hashlib", "Quilt.via_type_clinic.to_hint()": "Accessor Type Clinic", "Quilt.via_type_clinic.check()": "Accessor Type Clinic", "Quilt.via_type_clinic.warn()": "Accessor Type Clinic", "Quilt.via_type_clinic.__call__()": "Accessor Type Clinic", "Quilt.via_type_clinic.__repr__()": "Accessor Type Clinic", "Index.__init__()": "Constructor", "Index.from_difference()": "Constructor", "Index.from_intersection()": "Constructor", "Index.from_labels()": "Constructor", "Index.from_pandas()": "Constructor", "Index.from_union()": "Constructor", "Index.to_html()": "Exporter", "Index.to_html_datatables()": "Exporter", "Index.to_pandas()": "Exporter", "Index.to_series()": "Exporter", "Index.to_visidata()": "Exporter", "Index.STATIC": "Attribute", "Index.depth": "Attribute", "Index.dtype": "Attribute", "Index.index_types": "Attribute", "Index.memory": "Attribute", "Index.mloc": "Attribute", "Index.name": "Attribute", "Index.names": "Attribute", "Index.nbytes": "Attribute", "Index.ndim": "Attribute", "Index.positions": "Attribute", "Index.shape": "Attribute", "Index.size": "Attribute", "Index.__array__()": "Method", "Index.__array_ufunc__()": "Method", "Index.__bool__()": "Method", "Index.__copy__()": "Method", "Index.__deepcopy__()": "Method", "Index.__len__()": "Method", "Index.all()": "Method", "Index.any()": "Method", "Index.astype()": "Method", "Index.copy()": "Method", "Index.cumprod()": "Method", "Index.cumsum()": "Method", "Index.difference()": "Method", "Index.dropfalsy()": "Method", "Index.dropna()": "Method", "Index.equals()": "Method", "Index.fillfalsy()": "Method", "Index.fillna()": "Method", "Index.head()": "Method", "Index.iloc_searchsorted()": "Method", "Index.intersection()": "Method", "Index.is_sorted()": "Method", "Index.isfalsy()": "Method", "Index.isin()": "Method", "Index.isna()": "Method", "Index.label_widths_at_depth()": "Method", "Index.level_add()": "Method", "Index.loc_searchsorted()": "Method", "Index.loc_to_iloc()": "Method", "Index.max()": "Method", "Index.mean()": "Method", "Index.median()": "Method", "Index.min()": "Method", "Index.notfalsy()": "Method", "Index.notna()": "Method", "Index.prod()": "Method", "Index.relabel()": "Method", "Index.rename()": "Method", "Index.roll()": "Method", "Index.sample()": "Method", "Index.sort()": "Method", "Index.std()": "Method", "Index.sum()": "Method", "Index.tail()": "Method", "Index.union()": "Method", "Index.unique()": "Method", "Index.values_at_depth()": "Method", "Index.var()": "Method", "Index.__contains__()": "Dictionary-Like", "Index.__iter__()": "Dictionary-Like", "Index.__reversed__()": "Dictionary-Like", "Index.values": "Dictionary-Like", "Index.interface": "Display", "Index.__repr__()": "Display", "Index.__str__()": "Display", "Index.display()": "Display", "Index.display_tall()": "Display", "Index.display_wide()": "Display", "Index.drop.iloc[]": "Selector", "Index.drop.loc[]": "Selector", "Index.[]": "Selector", "Index.iloc[]": "Selector", "Index.loc[]": "Selector", "Index.iter_label()": "Iterator", "Index.iter_label().apply()": "Iterator", "Index.iter_label().apply_iter()": "Iterator", "Index.iter_label().apply_iter_items()": "Iterator", "Index.iter_label().apply_pool()": "Iterator", "Index.__add__()": "Operator Binary", "Index.__and__()": "Operator Binary", "Index.__eq__()": "Operator Binary", "Index.__floordiv__()": "Operator Binary", "Index.__ge__()": "Operator Binary", "Index.__gt__()": "Operator Binary", "Index.__le__()": "Operator Binary", "Index.__lt__()": "Operator Binary", "Index.__matmul__()": "Operator Binary", "Index.__mod__()": "Operator Binary", "Index.__mul__()": "Operator Binary", "Index.__ne__()": "Operator Binary", "Index.__or__()": "Operator Binary", "Index.__pow__()": "Operator Binary", "Index.__radd__()": "Operator Binary", "Index.__rfloordiv__()": "Operator Binary", "Index.__rmatmul__()": "Operator Binary", "Index.__rmul__()": "Operator Binary", "Index.__rshift__()": "Operator Binary", "Index.__rsub__()": "Operator Binary", "Index.__rtruediv__()": "Operator Binary", "Index.__sub__()": "Operator Binary", "Index.__truediv__()": "Operator Binary", "Index.__xor__()": "Operator Binary", "Index.__abs__()": "Operator Unary", "Index.__invert__()": "Operator Unary", "Index.__neg__()": "Operator Unary", "Index.__pos__()": "Operator Unary", "Index.via_values.apply()": "Accessor Values", "Index.via_values.__array_ufunc__()": "Accessor Values", "Index.via_values.__call__()": "Accessor Values", "Index.via_dt.__call__()": "Accessor Datetime", "Index.via_dt.year": "Accessor Datetime", "Index.via_dt.year_month": "Accessor Datetime", "Index.via_dt.year_quarter": "Accessor Datetime", "Index.via_dt.month": "Accessor Datetime", "Index.via_dt.day": "Accessor Datetime", "Index.via_dt.hour": "Accessor Datetime", "Index.via_dt.minute": "Accessor Datetime", "Index.via_dt.second": "Accessor Datetime", "Index.via_dt.weekday()": "Accessor Datetime", "Index.via_dt.quarter()": "Accessor Datetime", "Index.via_dt.is_month_end()": "Accessor Datetime", "Index.via_dt.is_month_start()": "Accessor Datetime", "Index.via_dt.is_year_end()": "Accessor Datetime", "Index.via_dt.is_year_start()": "Accessor Datetime", "Index.via_dt.is_quarter_end()": "Accessor Datetime", "Index.via_dt.is_quarter_start()": "Accessor Datetime", "Index.via_dt.timetuple()": "Accessor Datetime", "Index.via_dt.isoformat()": "Accessor Datetime", "Index.via_dt.fromisoformat()": "Accessor Datetime", "Index.via_dt.strftime()": "Accessor Datetime", "Index.via_dt.strptime()": "Accessor Datetime", "Index.via_dt.strpdate()": "Accessor Datetime", "Index.via_str.__getitem__()": "Accessor String", "Index.via_str.capitalize()": "Accessor String", "Index.via_str.center()": "Accessor String", "Index.via_str.contains()": "Accessor String", "Index.via_str.count()": "Accessor String", "Index.via_str.decode()": "Accessor String", "Index.via_str.encode()": "Accessor String", "Index.via_str.endswith()": "Accessor String", "Index.via_str.find()": "Accessor String", "Index.via_str.format()": "Accessor String", "Index.via_str.index()": "Accessor String", "Index.via_str.isalnum()": "Accessor String", "Index.via_str.isalpha()": "Accessor String", "Index.via_str.isdecimal()": "Accessor String", "Index.via_str.isdigit()": "Accessor String", "Index.via_str.islower()": "Accessor String", "Index.via_str.isnumeric()": "Accessor String", "Index.via_str.isspace()": "Accessor String", "Index.via_str.istitle()": "Accessor String", "Index.via_str.isupper()": "Accessor String", "Index.via_str.ljust()": "Accessor String", "Index.via_str.len()": "Accessor String", "Index.via_str.lower()": "Accessor String", "Index.via_str.lstrip()": "Accessor String", "Index.via_str.partition()": "Accessor String", "Index.via_str.replace()": "Accessor String", "Index.via_str.rfind()": "Accessor String", "Index.via_str.rindex()": "Accessor String", "Index.via_str.rjust()": "Accessor String", "Index.via_str.rpartition()": "Accessor String", "Index.via_str.rsplit()": "Accessor String", "Index.via_str.rstrip()": "Accessor String", "Index.via_str.split()": "Accessor String", "Index.via_str.startswith()": "Accessor String", "Index.via_str.strip()": "Accessor String", "Index.via_str.swapcase()": "Accessor String", "Index.via_str.title()": "Accessor String", "Index.via_str.upper()": "Accessor String", "Index.via_str.zfill()": "Accessor String", "Index.via_re().search()": "Accessor Regular Expression", "Index.via_re().match()": "Accessor Regular Expression", "Index.via_re().fullmatch()": "Accessor Regular Expression", "Index.via_re().split()": "Accessor Regular Expression", "Index.via_re().findall()": "Accessor Regular Expression", "Index.via_re().sub()": "Accessor Regular Expression", "Index.via_re().subn()": "Accessor Regular Expression", "Index.via_hashlib().to_bytes()": "Accessor Hashlib", "Index.via_hashlib().md5()": "Accessor Hashlib", "Index.via_hashlib().sha256()": "Accessor Hashlib", "Index.via_hashlib().sha512()": "Accessor Hashlib", "Index.via_hashlib().sha3_256()": "Accessor Hashlib", "Index.via_hashlib().sha3_512()": "Accessor Hashlib", "Index.via_hashlib().shake_128()": "Accessor Hashlib", "Index.via_hashlib().shake_256()": "Accessor Hashlib", "Index.via_hashlib().blake2b()": "Accessor Hashlib", "Index.via_hashlib().blake2s()": "Accessor Hashlib", "Index.via_type_clinic.to_hint()": "Accessor Type Clinic", "Index.via_type_clinic.check()": "Accessor Type Clinic", "Index.via_type_clinic.warn()": "Accessor Type Clinic", "Index.via_type_clinic.__call__()": "Accessor Type Clinic", "Index.via_type_clinic.__repr__()": "Accessor Type Clinic", "IndexGO.__init__()": "Constructor", "IndexGO.from_difference()": "Constructor", "IndexGO.from_intersection()": "Constructor", "IndexGO.from_labels()": "Constructor", "IndexGO.from_pandas()": "Constructor", "IndexGO.from_union()": "Constructor", "IndexGO.to_html()": "Exporter", "IndexGO.to_html_datatables()": "Exporter", "IndexGO.to_pandas()": "Exporter", "IndexGO.to_series()": "Exporter", "IndexGO.to_visidata()": "Exporter", "IndexGO.STATIC": "Attribute", "IndexGO.depth": "Attribute", "IndexGO.dtype": "Attribute", "IndexGO.index_types": "Attribute", "IndexGO.memory": "Attribute", "IndexGO.mloc": "Attribute", "IndexGO.name": "Attribute", "IndexGO.names": "Attribute", "IndexGO.nbytes": "Attribute", "IndexGO.ndim": "Attribute", "IndexGO.positions": "Attribute", "IndexGO.shape": "Attribute", "IndexGO.size": "Attribute", "IndexGO.__array__()": "Method", "IndexGO.__array_ufunc__()": "Method", "IndexGO.__bool__()": "Method", "IndexGO.__copy__()": "Method", "IndexGO.__deepcopy__()": "Method", "IndexGO.__len__()": "Method", "IndexGO.all()": "Method", "IndexGO.any()": "Method", "IndexGO.append()": "Method", "IndexGO.astype()": "Method", "IndexGO.copy()": "Method", "IndexGO.cumprod()": "Method", "IndexGO.cumsum()": "Method", "IndexGO.difference()": "Method", "IndexGO.dropfalsy()": "Method", "IndexGO.dropna()": "Method", "IndexGO.equals()": "Method", "IndexGO.extend()": "Method", "IndexGO.fillfalsy()": "Method", "IndexGO.fillna()": "Method", "IndexGO.head()": "Method", "IndexGO.iloc_searchsorted()": "Method", "IndexGO.intersection()": "Method", "IndexGO.is_sorted()": "Method", "IndexGO.isfalsy()": "Method", "IndexGO.isin()": "Method", "IndexGO.isna()": "Method", "IndexGO.label_widths_at_depth()": "Method", "IndexGO.level_add()": "Method", "IndexGO.loc_searchsorted()": "Method", "IndexGO.loc_to_iloc()": "Method", "IndexGO.max()": "Method", "IndexGO.mean()": "Method", "IndexGO.median()": "Method", "IndexGO.min()": "Method", "IndexGO.notfalsy()": "Method", "IndexGO.notna()": "Method", "IndexGO.prod()": "Method", "IndexGO.relabel()": "Method", "IndexGO.rename()": "Method", "IndexGO.roll()": "Method", "IndexGO.sample()": "Method", "IndexGO.sort()": "Method", "IndexGO.std()": "Method", "IndexGO.sum()": "Method", "IndexGO.tail()": "Method", "IndexGO.union()": "Method", "IndexGO.unique()": "Method", "IndexGO.values_at_depth()": "Method", "IndexGO.var()": "Method", "IndexGO.__contains__()": "Dictionary-Like", "IndexGO.__iter__()": "Dictionary-Like", "IndexGO.__reversed__()": "Dictionary-Like", "IndexGO.values": "Dictionary-Like", "IndexGO.interface": "Display", "IndexGO.__repr__()": "Display", "IndexGO.__str__()": "Display", "IndexGO.display()": "Display", "IndexGO.display_tall()": "Display", "IndexGO.display_wide()": "Display", "IndexGO.drop.iloc[]": "Selector", "IndexGO.drop.loc[]": "Selector", "IndexGO.[]": "Selector", "IndexGO.iloc[]": "Selector", "IndexGO.loc[]": "Selector", "IndexGO.iter_label()": "Iterator", "IndexGO.iter_label().apply()": "Iterator", "IndexGO.iter_label().apply_iter()": "Iterator", "IndexGO.iter_label().apply_iter_items()": "Iterator", "IndexGO.iter_label().apply_pool()": "Iterator", "IndexGO.__add__()": "Operator Binary", "IndexGO.__and__()": "Operator Binary", "IndexGO.__eq__()": "Operator Binary", "IndexGO.__floordiv__()": "Operator Binary", "IndexGO.__ge__()": "Operator Binary", "IndexGO.__gt__()": "Operator Binary", "IndexGO.__le__()": "Operator Binary", "IndexGO.__lt__()": "Operator Binary", "IndexGO.__matmul__()": "Operator Binary", "IndexGO.__mod__()": "Operator Binary", "IndexGO.__mul__()": "Operator Binary", "IndexGO.__ne__()": "Operator Binary", "IndexGO.__or__()": "Operator Binary", "IndexGO.__pow__()": "Operator Binary", "IndexGO.__radd__()": "Operator Binary", "IndexGO.__rfloordiv__()": "Operator Binary", "IndexGO.__rmatmul__()": "Operator Binary", "IndexGO.__rmul__()": "Operator Binary", "IndexGO.__rshift__()": "Operator Binary", "IndexGO.__rsub__()": "Operator Binary", "IndexGO.__rtruediv__()": "Operator Binary", "IndexGO.__sub__()": "Operator Binary", "IndexGO.__truediv__()": "Operator Binary", "IndexGO.__xor__()": "Operator Binary", "IndexGO.__abs__()": "Operator Unary", "IndexGO.__invert__()": "Operator Unary", "IndexGO.__neg__()": "Operator Unary", "IndexGO.__pos__()": "Operator Unary", "IndexGO.via_values.apply()": "Accessor Values", "IndexGO.via_values.__array_ufunc__()": "Accessor Values", "IndexGO.via_values.__call__()": "Accessor Values", "IndexGO.via_dt.__call__()": "Accessor Datetime", "IndexGO.via_dt.year": "Accessor Datetime", "IndexGO.via_dt.year_month": "Accessor Datetime", "IndexGO.via_dt.year_quarter": "Accessor Datetime", "IndexGO.via_dt.month": "Accessor Datetime", "IndexGO.via_dt.day": "Accessor Datetime", "IndexGO.via_dt.hour": "Accessor Datetime", "IndexGO.via_dt.minute": "Accessor Datetime", "IndexGO.via_dt.second": "Accessor Datetime", "IndexGO.via_dt.weekday()": "Accessor Datetime", "IndexGO.via_dt.quarter()": "Accessor Datetime", "IndexGO.via_dt.is_month_end()": "Accessor Datetime", "IndexGO.via_dt.is_month_start()": "Accessor Datetime", "IndexGO.via_dt.is_year_end()": "Accessor Datetime", "IndexGO.via_dt.is_year_start()": "Accessor Datetime", "IndexGO.via_dt.is_quarter_end()": "Accessor Datetime", "IndexGO.via_dt.is_quarter_start()": "Accessor Datetime", "IndexGO.via_dt.timetuple()": "Accessor Datetime", "IndexGO.via_dt.isoformat()": "Accessor Datetime", "IndexGO.via_dt.fromisoformat()": "Accessor Datetime", "IndexGO.via_dt.strftime()": "Accessor Datetime", "IndexGO.via_dt.strptime()": "Accessor Datetime", "IndexGO.via_dt.strpdate()": "Accessor Datetime", "IndexGO.via_str.__getitem__()": "Accessor String", "IndexGO.via_str.capitalize()": "Accessor String", "IndexGO.via_str.center()": "Accessor String", "IndexGO.via_str.contains()": "Accessor String", "IndexGO.via_str.count()": "Accessor String", "IndexGO.via_str.decode()": "Accessor String", "IndexGO.via_str.encode()": "Accessor String", "IndexGO.via_str.endswith()": "Accessor String", "IndexGO.via_str.find()": "Accessor String", "IndexGO.via_str.format()": "Accessor String", "IndexGO.via_str.index()": "Accessor String", "IndexGO.via_str.isalnum()": "Accessor String", "IndexGO.via_str.isalpha()": "Accessor String", "IndexGO.via_str.isdecimal()": "Accessor String", "IndexGO.via_str.isdigit()": "Accessor String", "IndexGO.via_str.islower()": "Accessor String", "IndexGO.via_str.isnumeric()": "Accessor String", "IndexGO.via_str.isspace()": "Accessor String", "IndexGO.via_str.istitle()": "Accessor String", "IndexGO.via_str.isupper()": "Accessor String", "IndexGO.via_str.ljust()": "Accessor String", "IndexGO.via_str.len()": "Accessor String", "IndexGO.via_str.lower()": "Accessor String", "IndexGO.via_str.lstrip()": "Accessor String", "IndexGO.via_str.partition()": "Accessor String", "IndexGO.via_str.replace()": "Accessor String", "IndexGO.via_str.rfind()": "Accessor String", "IndexGO.via_str.rindex()": "Accessor String", "IndexGO.via_str.rjust()": "Accessor String", "IndexGO.via_str.rpartition()": "Accessor String", "IndexGO.via_str.rsplit()": "Accessor String", "IndexGO.via_str.rstrip()": "Accessor String", "IndexGO.via_str.split()": "Accessor String", "IndexGO.via_str.startswith()": "Accessor String", "IndexGO.via_str.strip()": "Accessor String", "IndexGO.via_str.swapcase()": "Accessor String", "IndexGO.via_str.title()": "Accessor String", "IndexGO.via_str.upper()": "Accessor String", "IndexGO.via_str.zfill()": "Accessor String", "IndexGO.via_re().search()": "Accessor Regular Expression", "IndexGO.via_re().match()": "Accessor Regular Expression", "IndexGO.via_re().fullmatch()": "Accessor Regular Expression", "IndexGO.via_re().split()": "Accessor Regular Expression", "IndexGO.via_re().findall()": "Accessor Regular Expression", "IndexGO.via_re().sub()": "Accessor Regular Expression", "IndexGO.via_re().subn()": "Accessor Regular Expression", "IndexGO.via_hashlib().to_bytes()": "Accessor Hashlib", "IndexGO.via_hashlib().md5()": "Accessor Hashlib", "IndexGO.via_hashlib().sha256()": "Accessor Hashlib", "IndexGO.via_hashlib().sha512()": "Accessor Hashlib", "IndexGO.via_hashlib().sha3_256()": "Accessor Hashlib", "IndexGO.via_hashlib().sha3_512()": "Accessor Hashlib", "IndexGO.via_hashlib().shake_128()": "Accessor Hashlib", "IndexGO.via_hashlib().shake_256()": "Accessor Hashlib", "IndexGO.via_hashlib().blake2b()": "Accessor Hashlib", "IndexGO.via_hashlib().blake2s()": "Accessor Hashlib", "IndexGO.via_type_clinic.to_hint()": "Accessor Type Clinic", "IndexGO.via_type_clinic.check()": "Accessor Type Clinic", "IndexGO.via_type_clinic.warn()": "Accessor Type Clinic", "IndexGO.via_type_clinic.__call__()": "Accessor Type Clinic", "IndexGO.via_type_clinic.__repr__()": "Accessor Type Clinic", "IndexHierarchy.__init__()": "Constructor", "IndexHierarchy.from_difference()": "Constructor", "IndexHierarchy.from_index_items()": "Constructor", "IndexHierarchy.from_intersection()": "Constructor", "IndexHierarchy.from_labels()": "Constructor", "IndexHierarchy.from_labels_delimited()": "Constructor", "IndexHierarchy.from_names()": "Constructor", "IndexHierarchy.from_pandas()": "Constructor", "IndexHierarchy.from_product()": "Constructor", "IndexHierarchy.from_tree()": "Constructor", "IndexHierarchy.from_union()": "Constructor", "IndexHierarchy.from_values_per_depth()": "Constructor", "IndexHierarchy.to_frame()": "Exporter", "IndexHierarchy.to_frame_go()": "Exporter", "IndexHierarchy.to_html()": "Exporter", "IndexHierarchy.to_html_datatables()": "Exporter", "IndexHierarchy.to_pandas()": "Exporter", "IndexHierarchy.to_tree()": "Exporter", "IndexHierarchy.to_visidata()": "Exporter", "IndexHierarchy.STATIC": "Attribute", "IndexHierarchy.depth": "Attribute", "IndexHierarchy.dtypes": "Attribute", "IndexHierarchy.index_types": "Attribute", "IndexHierarchy.memory": "Attribute", "IndexHierarchy.mloc": "Attribute", "IndexHierarchy.name": "Attribute", "IndexHierarchy.names": "Attribute", "IndexHierarchy.nbytes": "Attribute", "IndexHierarchy.ndim": "Attribute", "IndexHierarchy.positions": "Attribute", "IndexHierarchy.shape": "Attribute", "IndexHierarchy.size": "Attribute", "IndexHierarchy.__array__()": "Method", "IndexHierarchy.__array_ufunc__()": "Method", "IndexHierarchy.__bool__()": "Method", "IndexHierarchy.__copy__()": "Method", "IndexHierarchy.__deepcopy__()": "Method", "IndexHierarchy.__len__()": "Method", "IndexHierarchy.all()": "Method", "IndexHierarchy.any()": "Method", "IndexHierarchy.astype[]()": "Method", "IndexHierarchy.astype()": "Method", "IndexHierarchy.copy()": "Method", "IndexHierarchy.cumprod()": "Method", "IndexHierarchy.cumsum()": "Method", "IndexHierarchy.difference()": "Method", "IndexHierarchy.dropfalsy()": "Method", "IndexHierarchy.dropna()": "Method", "IndexHierarchy.equals()": "Method", "IndexHierarchy.fillfalsy()": "Method", "IndexHierarchy.fillna()": "Method", "IndexHierarchy.flat()": "Method", "IndexHierarchy.head()": "Method", "IndexHierarchy.iloc_searchsorted()": "Method", "IndexHierarchy.index_at_depth()": "Method", "IndexHierarchy.indexer_at_depth()": "Method", "IndexHierarchy.intersection()": "Method", "IndexHierarchy.is_sorted()": "Method", "IndexHierarchy.isfalsy()": "Method", "IndexHierarchy.isin()": "Method", "IndexHierarchy.isna()": "Method", "IndexHierarchy.label_widths_at_depth()": "Method", "IndexHierarchy.level_add()": "Method", "IndexHierarchy.level_drop()": "Method", "IndexHierarchy.loc_searchsorted()": "Method", "IndexHierarchy.loc_to_iloc()": "Method", "IndexHierarchy.max()": "Method", "IndexHierarchy.mean()": "Method", "IndexHierarchy.median()": "Method", "IndexHierarchy.min()": "Method", "IndexHierarchy.notfalsy()": "Method", "IndexHierarchy.notna()": "Method", "IndexHierarchy.prod()": "Method", "IndexHierarchy.rehierarch()": "Method", "IndexHierarchy.relabel()": "Method", "IndexHierarchy.relabel_at_depth()": "Method", "IndexHierarchy.rename()": "Method", "IndexHierarchy.roll()": "Method", "IndexHierarchy.sample()": "Method", "IndexHierarchy.sort()": "Method", "IndexHierarchy.std()": "Method", "IndexHierarchy.sum()": "Method", "IndexHierarchy.tail()": "Method", "IndexHierarchy.union()": "Method", "IndexHierarchy.unique()": "Method", "IndexHierarchy.values_at_depth()": "Method", "IndexHierarchy.var()": "Method", "IndexHierarchy.__contains__()": "Dictionary-Like", "IndexHierarchy.__iter__()": "Dictionary-Like", "IndexHierarchy.__reversed__()": "Dictionary-Like", "IndexHierarchy.values": "Dictionary-Like", "IndexHierarchy.interface": "Display", "IndexHierarchy.__repr__()": "Display", "IndexHierarchy.__str__()": "Display", "IndexHierarchy.display()": "Display", "IndexHierarchy.display_tall()": "Display", "IndexHierarchy.display_wide()": "Display", "IndexHierarchy.[]": "Selector", "IndexHierarchy.iloc[]": "Selector", "IndexHierarchy.loc[]": "Selector", "IndexHierarchy.iter_label()": "Iterator", "IndexHierarchy.iter_label().apply()": "Iterator", "IndexHierarchy.iter_label().apply_iter()": "Iterator", "IndexHierarchy.iter_label().apply_iter_items()": "Iterator", "IndexHierarchy.iter_label().apply_pool()": "Iterator", "IndexHierarchy.__add__()": "Operator Binary", "IndexHierarchy.__and__()": "Operator Binary", "IndexHierarchy.__eq__()": "Operator Binary", "IndexHierarchy.__floordiv__()": "Operator Binary", "IndexHierarchy.__ge__()": "Operator Binary", "IndexHierarchy.__gt__()": "Operator Binary", "IndexHierarchy.__le__()": "Operator Binary", "IndexHierarchy.__lt__()": "Operator Binary", "IndexHierarchy.__matmul__()": "Operator Binary", "IndexHierarchy.__mod__()": "Operator Binary", "IndexHierarchy.__mul__()": "Operator Binary", "IndexHierarchy.__ne__()": "Operator Binary", "IndexHierarchy.__or__()": "Operator Binary", "IndexHierarchy.__pow__()": "Operator Binary", "IndexHierarchy.__radd__()": "Operator Binary", "IndexHierarchy.__rfloordiv__()": "Operator Binary", "IndexHierarchy.__rmatmul__()": "Operator Binary", "IndexHierarchy.__rmul__()": "Operator Binary", "IndexHierarchy.__rshift__()": "Operator Binary", "IndexHierarchy.__rsub__()": "Operator Binary", "IndexHierarchy.__rtruediv__()": "Operator Binary", "IndexHierarchy.__sub__()": "Operator Binary", "IndexHierarchy.__truediv__()": "Operator Binary", "IndexHierarchy.__xor__()": "Operator Binary", "IndexHierarchy.__abs__()": "Operator Unary", "IndexHierarchy.__invert__()": "Operator Unary", "IndexHierarchy.__neg__()": "Operator Unary", "IndexHierarchy.__pos__()": "Operator Unary", "IndexHierarchy.via_values.apply()": "Accessor Values", "IndexHierarchy.via_values.__array_ufunc__()": "Accessor Values", "IndexHierarchy.via_values.__call__()": "Accessor Values", "IndexHierarchy.via_dt.__call__()": "Accessor Datetime", "IndexHierarchy.via_dt.year": "Accessor Datetime", "IndexHierarchy.via_dt.year_month": "Accessor Datetime", "IndexHierarchy.via_dt.year_quarter": "Accessor Datetime", "IndexHierarchy.via_dt.month": "Accessor Datetime", "IndexHierarchy.via_dt.day": "Accessor Datetime", "IndexHierarchy.via_dt.hour": "Accessor Datetime", "IndexHierarchy.via_dt.minute": "Accessor Datetime", "IndexHierarchy.via_dt.second": "Accessor Datetime", "IndexHierarchy.via_dt.weekday()": "Accessor Datetime", "IndexHierarchy.via_dt.quarter()": "Accessor Datetime", "IndexHierarchy.via_dt.is_month_end()": "Accessor Datetime", "IndexHierarchy.via_dt.is_month_start()": "Accessor Datetime", "IndexHierarchy.via_dt.is_year_end()": "Accessor Datetime", "IndexHierarchy.via_dt.is_year_start()": "Accessor Datetime", "IndexHierarchy.via_dt.is_quarter_end()": "Accessor Datetime", "IndexHierarchy.via_dt.is_quarter_start()": "Accessor Datetime", "IndexHierarchy.via_dt.timetuple()": "Accessor Datetime", "IndexHierarchy.via_dt.isoformat()": "Accessor Datetime", "IndexHierarchy.via_dt.fromisoformat()": "Accessor Datetime", "IndexHierarchy.via_dt.strftime()": "Accessor Datetime", "IndexHierarchy.via_dt.strptime()": "Accessor Datetime", "IndexHierarchy.via_dt.strpdate()": "Accessor Datetime", "IndexHierarchy.via_str.__getitem__()": "Accessor String", "IndexHierarchy.via_str.capitalize()": "Accessor String", "IndexHierarchy.via_str.center()": "Accessor String", "IndexHierarchy.via_str.contains()": "Accessor String", "IndexHierarchy.via_str.count()": "Accessor String", "IndexHierarchy.via_str.decode()": "Accessor String", "IndexHierarchy.via_str.encode()": "Accessor String", "IndexHierarchy.via_str.endswith()": "Accessor String", "IndexHierarchy.via_str.find()": "Accessor String", "IndexHierarchy.via_str.format()": "Accessor String", "IndexHierarchy.via_str.index()": "Accessor String", "IndexHierarchy.via_str.isalnum()": "Accessor String", "IndexHierarchy.via_str.isalpha()": "Accessor String", "IndexHierarchy.via_str.isdecimal()": "Accessor String", "IndexHierarchy.via_str.isdigit()": "Accessor String", "IndexHierarchy.via_str.islower()": "Accessor String", "IndexHierarchy.via_str.isnumeric()": "Accessor String", "IndexHierarchy.via_str.isspace()": "Accessor String", "IndexHierarchy.via_str.istitle()": "Accessor String", "IndexHierarchy.via_str.isupper()": "Accessor String", "IndexHierarchy.via_str.ljust()": "Accessor String", "IndexHierarchy.via_str.len()": "Accessor String", "IndexHierarchy.via_str.lower()": "Accessor String", "IndexHierarchy.via_str.lstrip()": "Accessor String", "IndexHierarchy.via_str.partition()": "Accessor String", "IndexHierarchy.via_str.replace()": "Accessor String", "IndexHierarchy.via_str.rfind()": "Accessor String", "IndexHierarchy.via_str.rindex()": "Accessor String", "IndexHierarchy.via_str.rjust()": "Accessor String", "IndexHierarchy.via_str.rpartition()": "Accessor String", "IndexHierarchy.via_str.rsplit()": "Accessor String", "IndexHierarchy.via_str.rstrip()": "Accessor String", "IndexHierarchy.via_str.split()": "Accessor String", "IndexHierarchy.via_str.startswith()": "Accessor String", "IndexHierarchy.via_str.strip()": "Accessor String", "IndexHierarchy.via_str.swapcase()": "Accessor String", "IndexHierarchy.via_str.title()": "Accessor String", "IndexHierarchy.via_str.upper()": "Accessor String", "IndexHierarchy.via_str.zfill()": "Accessor String", "IndexHierarchy.via_T.via_fill_value()": "Accessor Transpose", "IndexHierarchy.via_T.__add__()": "Accessor Transpose", "IndexHierarchy.via_T.__sub__()": "Accessor Transpose", "IndexHierarchy.via_T.__mul__()": "Accessor Transpose", "IndexHierarchy.via_T.__truediv__()": "Accessor Transpose", "IndexHierarchy.via_T.__floordiv__()": "Accessor Transpose", "IndexHierarchy.via_T.__mod__()": "Accessor Transpose", "IndexHierarchy.via_T.__pow__()": "Accessor Transpose", "IndexHierarchy.via_T.__lshift__()": "Accessor Transpose", "IndexHierarchy.via_T.__rshift__()": "Accessor Transpose", "IndexHierarchy.via_T.__and__()": "Accessor Transpose", "IndexHierarchy.via_T.__xor__()": "Accessor Transpose", "IndexHierarchy.via_T.__or__()": "Accessor Transpose", "IndexHierarchy.via_T.__lt__()": "Accessor Transpose", "IndexHierarchy.via_T.__le__()": "Accessor Transpose", "IndexHierarchy.via_T.__eq__()": "Accessor Transpose", "IndexHierarchy.via_T.__ne__()": "Accessor Transpose", "IndexHierarchy.via_T.__gt__()": "Accessor Transpose", "IndexHierarchy.via_T.__ge__()": "Accessor Transpose", "IndexHierarchy.via_T.__radd__()": "Accessor Transpose", "IndexHierarchy.via_T.__rsub__()": "Accessor Transpose", "IndexHierarchy.via_T.__rmul__()": "Accessor Transpose", "IndexHierarchy.via_T.__rtruediv__()": "Accessor Transpose", "IndexHierarchy.via_T.__rfloordiv__()": "Accessor Transpose", "IndexHierarchy.via_re().search()": "Accessor Regular Expression", "IndexHierarchy.via_re().match()": "Accessor Regular Expression", "IndexHierarchy.via_re().fullmatch()": "Accessor Regular Expression", "IndexHierarchy.via_re().split()": "Accessor Regular Expression", "IndexHierarchy.via_re().findall()": "Accessor Regular Expression", "IndexHierarchy.via_re().sub()": "Accessor Regular Expression", "IndexHierarchy.via_re().subn()": "Accessor Regular Expression", "IndexHierarchy.via_hashlib().to_bytes()": "Accessor Hashlib", "IndexHierarchy.via_hashlib().md5()": "Accessor Hashlib", "IndexHierarchy.via_hashlib().sha256()": "Accessor Hashlib", "IndexHierarchy.via_hashlib().sha512()": "Accessor Hashlib", "IndexHierarchy.via_hashlib().sha3_256()": "Accessor Hashlib", "IndexHierarchy.via_hashlib().sha3_512()": "Accessor Hashlib", "IndexHierarchy.via_hashlib().shake_128()": "Accessor Hashlib", "IndexHierarchy.via_hashlib().shake_256()": "Accessor Hashlib", "IndexHierarchy.via_hashlib().blake2b()": "Accessor Hashlib", "IndexHierarchy.via_hashlib().blake2s()": "Accessor Hashlib", "IndexHierarchy.via_type_clinic.to_hint()": "Accessor Type Clinic", "IndexHierarchy.via_type_clinic.check()": "Accessor Type Clinic", "IndexHierarchy.via_type_clinic.warn()": "Accessor Type Clinic", "IndexHierarchy.via_type_clinic.__call__()": "Accessor Type Clinic", "IndexHierarchy.via_type_clinic.__repr__()": "Accessor Type Clinic", "IndexHierarchyGO.__init__()": "Constructor", "IndexHierarchyGO.from_difference()": "Constructor", "IndexHierarchyGO.from_index_items()": "Constructor", "IndexHierarchyGO.from_intersection()": "Constructor", "IndexHierarchyGO.from_labels()": "Constructor", "IndexHierarchyGO.from_labels_delimited()": "Constructor", "IndexHierarchyGO.from_names()": "Constructor", "IndexHierarchyGO.from_pandas()": "Constructor", "IndexHierarchyGO.from_product()": "Constructor", "IndexHierarchyGO.from_tree()": "Constructor", "IndexHierarchyGO.from_union()": "Constructor", "IndexHierarchyGO.from_values_per_depth()": "Constructor", "IndexHierarchyGO.to_frame()": "Exporter", "IndexHierarchyGO.to_frame_go()": "Exporter", "IndexHierarchyGO.to_html()": "Exporter", "IndexHierarchyGO.to_html_datatables()": "Exporter", "IndexHierarchyGO.to_pandas()": "Exporter", "IndexHierarchyGO.to_tree()": "Exporter", "IndexHierarchyGO.to_visidata()": "Exporter", "IndexHierarchyGO.STATIC": "Attribute", "IndexHierarchyGO.depth": "Attribute", "IndexHierarchyGO.dtypes": "Attribute", "IndexHierarchyGO.index_types": "Attribute", "IndexHierarchyGO.memory": "Attribute", "IndexHierarchyGO.mloc": "Attribute", "IndexHierarchyGO.name": "Attribute", "IndexHierarchyGO.names": "Attribute", "IndexHierarchyGO.nbytes": "Attribute", "IndexHierarchyGO.ndim": "Attribute", "IndexHierarchyGO.positions": "Attribute", "IndexHierarchyGO.shape": "Attribute", "IndexHierarchyGO.size": "Attribute", "IndexHierarchyGO.__array__()": "Method", "IndexHierarchyGO.__array_ufunc__()": "Method", "IndexHierarchyGO.__bool__()": "Method", "IndexHierarchyGO.__copy__()": "Method", "IndexHierarchyGO.__deepcopy__()": "Method", "IndexHierarchyGO.__len__()": "Method", "IndexHierarchyGO.all()": "Method", "IndexHierarchyGO.any()": "Method", "IndexHierarchyGO.append()": "Method", "IndexHierarchyGO.astype[]()": "Method", "IndexHierarchyGO.astype()": "Method", "IndexHierarchyGO.copy()": "Method", "IndexHierarchyGO.cumprod()": "Method", "IndexHierarchyGO.cumsum()": "Method", "IndexHierarchyGO.difference()": "Method", "IndexHierarchyGO.dropfalsy()": "Method", "IndexHierarchyGO.dropna()": "Method", "IndexHierarchyGO.equals()": "Method", "IndexHierarchyGO.extend()": "Method", "IndexHierarchyGO.fillfalsy()": "Method", "IndexHierarchyGO.fillna()": "Method", "IndexHierarchyGO.flat()": "Method", "IndexHierarchyGO.head()": "Method", "IndexHierarchyGO.iloc_searchsorted()": "Method", "IndexHierarchyGO.index_at_depth()": "Method", "IndexHierarchyGO.indexer_at_depth()": "Method", "IndexHierarchyGO.intersection()": "Method", "IndexHierarchyGO.is_sorted()": "Method", "IndexHierarchyGO.isfalsy()": "Method", "IndexHierarchyGO.isin()": "Method", "IndexHierarchyGO.isna()": "Method", "IndexHierarchyGO.label_widths_at_depth()": "Method", "IndexHierarchyGO.level_add()": "Method", "IndexHierarchyGO.level_drop()": "Method", "IndexHierarchyGO.loc_searchsorted()": "Method", "IndexHierarchyGO.loc_to_iloc()": "Method", "IndexHierarchyGO.max()": "Method", "IndexHierarchyGO.mean()": "Method", "IndexHierarchyGO.median()": "Method", "IndexHierarchyGO.min()": "Method", "IndexHierarchyGO.notfalsy()": "Method", "IndexHierarchyGO.notna()": "Method", "IndexHierarchyGO.prod()": "Method", "IndexHierarchyGO.rehierarch()": "Method", "IndexHierarchyGO.relabel()": "Method", "IndexHierarchyGO.relabel_at_depth()": "Method", "IndexHierarchyGO.rename()": "Method", "IndexHierarchyGO.roll()": "Method", "IndexHierarchyGO.sample()": "Method", "IndexHierarchyGO.sort()": "Method", "IndexHierarchyGO.std()": "Method", "IndexHierarchyGO.sum()": "Method", "IndexHierarchyGO.tail()": "Method", "IndexHierarchyGO.union()": "Method", "IndexHierarchyGO.unique()": "Method", "IndexHierarchyGO.values_at_depth()": "Method", "IndexHierarchyGO.var()": "Method", "IndexHierarchyGO.__contains__()": "Dictionary-Like", "IndexHierarchyGO.__iter__()": "Dictionary-Like", "IndexHierarchyGO.__reversed__()": "Dictionary-Like", "IndexHierarchyGO.values": "Dictionary-Like", "IndexHierarchyGO.interface": "Display", "IndexHierarchyGO.__repr__()": "Display", "IndexHierarchyGO.__str__()": "Display", "IndexHierarchyGO.display()": "Display", "IndexHierarchyGO.display_tall()": "Display", "IndexHierarchyGO.display_wide()": "Display", "IndexHierarchyGO.[]": "Selector", "IndexHierarchyGO.iloc[]": "Selector", "IndexHierarchyGO.loc[]": "Selector", "IndexHierarchyGO.iter_label()": "Iterator", "IndexHierarchyGO.iter_label().apply()": "Iterator", "IndexHierarchyGO.iter_label().apply_iter()": "Iterator", "IndexHierarchyGO.iter_label().apply_iter_items()": "Iterator", "IndexHierarchyGO.iter_label().apply_pool()": "Iterator", "IndexHierarchyGO.__add__()": "Operator Binary", "IndexHierarchyGO.__and__()": "Operator Binary", "IndexHierarchyGO.__eq__()": "Operator Binary", "IndexHierarchyGO.__floordiv__()": "Operator Binary", "IndexHierarchyGO.__ge__()": "Operator Binary", "IndexHierarchyGO.__gt__()": "Operator Binary", "IndexHierarchyGO.__le__()": "Operator Binary", "IndexHierarchyGO.__lt__()": "Operator Binary", "IndexHierarchyGO.__matmul__()": "Operator Binary", "IndexHierarchyGO.__mod__()": "Operator Binary", "IndexHierarchyGO.__mul__()": "Operator Binary", "IndexHierarchyGO.__ne__()": "Operator Binary", "IndexHierarchyGO.__or__()": "Operator Binary", "IndexHierarchyGO.__pow__()": "Operator Binary", "IndexHierarchyGO.__radd__()": "Operator Binary", "IndexHierarchyGO.__rfloordiv__()": "Operator Binary", "IndexHierarchyGO.__rmatmul__()": "Operator Binary", "IndexHierarchyGO.__rmul__()": "Operator Binary", "IndexHierarchyGO.__rshift__()": "Operator Binary", "IndexHierarchyGO.__rsub__()": "Operator Binary", "IndexHierarchyGO.__rtruediv__()": "Operator Binary", "IndexHierarchyGO.__sub__()": "Operator Binary", "IndexHierarchyGO.__truediv__()": "Operator Binary", "IndexHierarchyGO.__xor__()": "Operator Binary", "IndexHierarchyGO.__abs__()": "Operator Unary", "IndexHierarchyGO.__invert__()": "Operator Unary", "IndexHierarchyGO.__neg__()": "Operator Unary", "IndexHierarchyGO.__pos__()": "Operator Unary", "IndexHierarchyGO.via_values.apply()": "Accessor Values", "IndexHierarchyGO.via_values.__array_ufunc__()": "Accessor Values", "IndexHierarchyGO.via_values.__call__()": "Accessor Values", "IndexHierarchyGO.via_dt.__call__()": "Accessor Datetime", "IndexHierarchyGO.via_dt.year": "Accessor Datetime", "IndexHierarchyGO.via_dt.year_month": "Accessor Datetime", "IndexHierarchyGO.via_dt.year_quarter": "Accessor Datetime", "IndexHierarchyGO.via_dt.month": "Accessor Datetime", "IndexHierarchyGO.via_dt.day": "Accessor Datetime", "IndexHierarchyGO.via_dt.hour": "Accessor Datetime", "IndexHierarchyGO.via_dt.minute": "Accessor Datetime", "IndexHierarchyGO.via_dt.second": "Accessor Datetime", "IndexHierarchyGO.via_dt.weekday()": "Accessor Datetime", "IndexHierarchyGO.via_dt.quarter()": "Accessor Datetime", "IndexHierarchyGO.via_dt.is_month_end()": "Accessor Datetime", "IndexHierarchyGO.via_dt.is_month_start()": "Accessor Datetime", "IndexHierarchyGO.via_dt.is_year_end()": "Accessor Datetime", "IndexHierarchyGO.via_dt.is_year_start()": "Accessor Datetime", "IndexHierarchyGO.via_dt.is_quarter_end()": "Accessor Datetime", "IndexHierarchyGO.via_dt.is_quarter_start()": "Accessor Datetime", "IndexHierarchyGO.via_dt.timetuple()": "Accessor Datetime", "IndexHierarchyGO.via_dt.isoformat()": "Accessor Datetime", "IndexHierarchyGO.via_dt.fromisoformat()": "Accessor Datetime", "IndexHierarchyGO.via_dt.strftime()": "Accessor Datetime", "IndexHierarchyGO.via_dt.strptime()": "Accessor Datetime", "IndexHierarchyGO.via_dt.strpdate()": "Accessor Datetime", "IndexHierarchyGO.via_str.__getitem__()": "Accessor String", "IndexHierarchyGO.via_str.capitalize()": "Accessor String", "IndexHierarchyGO.via_str.center()": "Accessor String", "IndexHierarchyGO.via_str.contains()": "Accessor String", "IndexHierarchyGO.via_str.count()": "Accessor String", "IndexHierarchyGO.via_str.decode()": "Accessor String", "IndexHierarchyGO.via_str.encode()": "Accessor String", "IndexHierarchyGO.via_str.endswith()": "Accessor String", "IndexHierarchyGO.via_str.find()": "Accessor String", "IndexHierarchyGO.via_str.format()": "Accessor String", "IndexHierarchyGO.via_str.index()": "Accessor String", "IndexHierarchyGO.via_str.isalnum()": "Accessor String", "IndexHierarchyGO.via_str.isalpha()": "Accessor String", "IndexHierarchyGO.via_str.isdecimal()": "Accessor String", "IndexHierarchyGO.via_str.isdigit()": "Accessor String", "IndexHierarchyGO.via_str.islower()": "Accessor String", "IndexHierarchyGO.via_str.isnumeric()": "Accessor String", "IndexHierarchyGO.via_str.isspace()": "Accessor String", "IndexHierarchyGO.via_str.istitle()": "Accessor String", "IndexHierarchyGO.via_str.isupper()": "Accessor String", "IndexHierarchyGO.via_str.ljust()": "Accessor String", "IndexHierarchyGO.via_str.len()": "Accessor String", "IndexHierarchyGO.via_str.lower()": "Accessor String", "IndexHierarchyGO.via_str.lstrip()": "Accessor String", "IndexHierarchyGO.via_str.partition()": "Accessor String", "IndexHierarchyGO.via_str.replace()": "Accessor String", "IndexHierarchyGO.via_str.rfind()": "Accessor String", "IndexHierarchyGO.via_str.rindex()": "Accessor String", "IndexHierarchyGO.via_str.rjust()": "Accessor String", "IndexHierarchyGO.via_str.rpartition()": "Accessor String", "IndexHierarchyGO.via_str.rsplit()": "Accessor String", "IndexHierarchyGO.via_str.rstrip()": "Accessor String", "IndexHierarchyGO.via_str.split()": "Accessor String", "IndexHierarchyGO.via_str.startswith()": "Accessor String", "IndexHierarchyGO.via_str.strip()": "Accessor String", "IndexHierarchyGO.via_str.swapcase()": "Accessor String", "IndexHierarchyGO.via_str.title()": "Accessor String", "IndexHierarchyGO.via_str.upper()": "Accessor String", "IndexHierarchyGO.via_str.zfill()": "Accessor String", "IndexHierarchyGO.via_T.via_fill_value()": "Accessor Transpose", "IndexHierarchyGO.via_T.__add__()": "Accessor Transpose", "IndexHierarchyGO.via_T.__sub__()": "Accessor Transpose", "IndexHierarchyGO.via_T.__mul__()": "Accessor Transpose", "IndexHierarchyGO.via_T.__truediv__()": "Accessor Transpose", "IndexHierarchyGO.via_T.__floordiv__()": "Accessor Transpose", "IndexHierarchyGO.via_T.__mod__()": "Accessor Transpose", "IndexHierarchyGO.via_T.__pow__()": "Accessor Transpose", "IndexHierarchyGO.via_T.__lshift__()": "Accessor Transpose", "IndexHierarchyGO.via_T.__rshift__()": "Accessor Transpose", "IndexHierarchyGO.via_T.__and__()": "Accessor Transpose", "IndexHierarchyGO.via_T.__xor__()": "Accessor Transpose", "IndexHierarchyGO.via_T.__or__()": "Accessor Transpose", "IndexHierarchyGO.via_T.__lt__()": "Accessor Transpose", "IndexHierarchyGO.via_T.__le__()": "Accessor Transpose", "IndexHierarchyGO.via_T.__eq__()": "Accessor Transpose", "IndexHierarchyGO.via_T.__ne__()": "Accessor Transpose", "IndexHierarchyGO.via_T.__gt__()": "Accessor Transpose", "IndexHierarchyGO.via_T.__ge__()": "Accessor Transpose", "IndexHierarchyGO.via_T.__radd__()": "Accessor Transpose", "IndexHierarchyGO.via_T.__rsub__()": "Accessor Transpose", "IndexHierarchyGO.via_T.__rmul__()": "Accessor Transpose", "IndexHierarchyGO.via_T.__rtruediv__()": "Accessor Transpose", "IndexHierarchyGO.via_T.__rfloordiv__()": "Accessor Transpose", "IndexHierarchyGO.via_re().search()": "Accessor Regular Expression", "IndexHierarchyGO.via_re().match()": "Accessor Regular Expression", "IndexHierarchyGO.via_re().fullmatch()": "Accessor Regular Expression", "IndexHierarchyGO.via_re().split()": "Accessor Regular Expression", "IndexHierarchyGO.via_re().findall()": "Accessor Regular Expression", "IndexHierarchyGO.via_re().sub()": "Accessor Regular Expression", "IndexHierarchyGO.via_re().subn()": "Accessor Regular Expression", "IndexHierarchyGO.via_hashlib().to_bytes()": "Accessor Hashlib", "IndexHierarchyGO.via_hashlib().md5()": "Accessor Hashlib", "IndexHierarchyGO.via_hashlib().sha256()": "Accessor Hashlib", "IndexHierarchyGO.via_hashlib().sha512()": "Accessor Hashlib", "IndexHierarchyGO.via_hashlib().sha3_256()": "Accessor Hashlib", "IndexHierarchyGO.via_hashlib().sha3_512()": "Accessor Hashlib", "IndexHierarchyGO.via_hashlib().shake_128()": "Accessor Hashlib", "IndexHierarchyGO.via_hashlib().shake_256()": "Accessor Hashlib", "IndexHierarchyGO.via_hashlib().blake2b()": "Accessor Hashlib", "IndexHierarchyGO.via_hashlib().blake2s()": "Accessor Hashlib", "IndexHierarchyGO.via_type_clinic.to_hint()": "Accessor Type Clinic", "IndexHierarchyGO.via_type_clinic.check()": "Accessor Type Clinic", "IndexHierarchyGO.via_type_clinic.warn()": "Accessor Type Clinic", "IndexHierarchyGO.via_type_clinic.__call__()": "Accessor Type Clinic", "IndexHierarchyGO.via_type_clinic.__repr__()": "Accessor Type Clinic", "IndexYear.__init__()": "Constructor", "IndexYear.from_date_range()": "Constructor", "IndexYear.from_difference()": "Constructor", "IndexYear.from_intersection()": "Constructor", "IndexYear.from_labels()": "Constructor", "IndexYear.from_pandas()": "Constructor", "IndexYear.from_union()": "Constructor", "IndexYear.from_year_month_range()": "Constructor", "IndexYear.from_year_range()": "Constructor", "IndexYear.to_html()": "Exporter", "IndexYear.to_html_datatables()": "Exporter", "IndexYear.to_pandas()": "Exporter", "IndexYear.to_series()": "Exporter", "IndexYear.to_visidata()": "Exporter", "IndexYear.STATIC": "Attribute", "IndexYear.depth": "Attribute", "IndexYear.dtype": "Attribute", "IndexYear.index_types": "Attribute", "IndexYear.memory": "Attribute", "IndexYear.mloc": "Attribute", "IndexYear.name": "Attribute", "IndexYear.names": "Attribute", "IndexYear.nbytes": "Attribute", "IndexYear.ndim": "Attribute", "IndexYear.positions": "Attribute", "IndexYear.shape": "Attribute", "IndexYear.size": "Attribute", "IndexYear.__array__()": "Method", "IndexYear.__array_ufunc__()": "Method", "IndexYear.__bool__()": "Method", "IndexYear.__copy__()": "Method", "IndexYear.__deepcopy__()": "Method", "IndexYear.__len__()": "Method", "IndexYear.all()": "Method", "IndexYear.any()": "Method", "IndexYear.astype()": "Method", "IndexYear.copy()": "Method", "IndexYear.cumprod()": "Method", "IndexYear.cumsum()": "Method", "IndexYear.difference()": "Method", "IndexYear.dropfalsy()": "Method", "IndexYear.dropna()": "Method", "IndexYear.equals()": "Method", "IndexYear.fillfalsy()": "Method", "IndexYear.fillna()": "Method", "IndexYear.head()": "Method", "IndexYear.iloc_searchsorted()": "Method", "IndexYear.intersection()": "Method", "IndexYear.is_sorted()": "Method", "IndexYear.isfalsy()": "Method", "IndexYear.isin()": "Method", "IndexYear.isna()": "Method", "IndexYear.label_widths_at_depth()": "Method", "IndexYear.level_add()": "Method", "IndexYear.loc_searchsorted()": "Method", "IndexYear.loc_to_iloc()": "Method", "IndexYear.max()": "Method", "IndexYear.mean()": "Method", "IndexYear.median()": "Method", "IndexYear.min()": "Method", "IndexYear.notfalsy()": "Method", "IndexYear.notna()": "Method", "IndexYear.prod()": "Method", "IndexYear.relabel()": "Method", "IndexYear.rename()": "Method", "IndexYear.roll()": "Method", "IndexYear.sample()": "Method", "IndexYear.sort()": "Method", "IndexYear.std()": "Method", "IndexYear.sum()": "Method", "IndexYear.tail()": "Method", "IndexYear.union()": "Method", "IndexYear.unique()": "Method", "IndexYear.values_at_depth()": "Method", "IndexYear.var()": "Method", "IndexYear.__contains__()": "Dictionary-Like", "IndexYear.__iter__()": "Dictionary-Like", "IndexYear.__reversed__()": "Dictionary-Like", "IndexYear.values": "Dictionary-Like", "IndexYear.interface": "Display", "IndexYear.__repr__()": "Display", "IndexYear.__str__()": "Display", "IndexYear.display()": "Display", "IndexYear.display_tall()": "Display", "IndexYear.display_wide()": "Display", "IndexYear.drop.iloc[]": "Selector", "IndexYear.drop.loc[]": "Selector", "IndexYear.[]": "Selector", "IndexYear.iloc[]": "Selector", "IndexYear.loc[]": "Selector", "IndexYear.iter_label()": "Iterator", "IndexYear.iter_label().apply()": "Iterator", "IndexYear.iter_label().apply_iter()": "Iterator", "IndexYear.iter_label().apply_iter_items()": "Iterator", "IndexYear.iter_label().apply_pool()": "Iterator", "IndexYear.__add__()": "Operator Binary", "IndexYear.__and__()": "Operator Binary", "IndexYear.__eq__()": "Operator Binary", "IndexYear.__floordiv__()": "Operator Binary", "IndexYear.__ge__()": "Operator Binary", "IndexYear.__gt__()": "Operator Binary", "IndexYear.__le__()": "Operator Binary", "IndexYear.__lt__()": "Operator Binary", "IndexYear.__matmul__()": "Operator Binary", "IndexYear.__mod__()": "Operator Binary", "IndexYear.__mul__()": "Operator Binary", "IndexYear.__ne__()": "Operator Binary", "IndexYear.__or__()": "Operator Binary", "IndexYear.__pow__()": "Operator Binary", "IndexYear.__radd__()": "Operator Binary", "IndexYear.__rfloordiv__()": "Operator Binary", "IndexYear.__rmatmul__()": "Operator Binary", "IndexYear.__rmul__()": "Operator Binary", "IndexYear.__rshift__()": "Operator Binary", "IndexYear.__rsub__()": "Operator Binary", "IndexYear.__rtruediv__()": "Operator Binary", "IndexYear.__sub__()": "Operator Binary", "IndexYear.__truediv__()": "Operator Binary", "IndexYear.__xor__()": "Operator Binary", "IndexYear.__abs__()": "Operator Unary", "IndexYear.__invert__()": "Operator Unary", "IndexYear.__neg__()": "Operator Unary", "IndexYear.__pos__()": "Operator Unary", "IndexYear.via_values.apply()": "Accessor Values", "IndexYear.via_values.__array_ufunc__()": "Accessor Values", "IndexYear.via_values.__call__()": "Accessor Values", "IndexYear.via_dt.__call__()": "Accessor Datetime", "IndexYear.via_dt.year": "Accessor Datetime", "IndexYear.via_dt.year_month": "Accessor Datetime", "IndexYear.via_dt.year_quarter": "Accessor Datetime", "IndexYear.via_dt.month": "Accessor Datetime", "IndexYear.via_dt.day": "Accessor Datetime", "IndexYear.via_dt.hour": "Accessor Datetime", "IndexYear.via_dt.minute": "Accessor Datetime", "IndexYear.via_dt.second": "Accessor Datetime", "IndexYear.via_dt.weekday()": "Accessor Datetime", "IndexYear.via_dt.quarter()": "Accessor Datetime", "IndexYear.via_dt.is_month_end()": "Accessor Datetime", "IndexYear.via_dt.is_month_start()": "Accessor Datetime", "IndexYear.via_dt.is_year_end()": "Accessor Datetime", "IndexYear.via_dt.is_year_start()": "Accessor Datetime", "IndexYear.via_dt.is_quarter_end()": "Accessor Datetime", "IndexYear.via_dt.is_quarter_start()": "Accessor Datetime", "IndexYear.via_dt.timetuple()": "Accessor Datetime", "IndexYear.via_dt.isoformat()": "Accessor Datetime", "IndexYear.via_dt.fromisoformat()": "Accessor Datetime", "IndexYear.via_dt.strftime()": "Accessor Datetime", "IndexYear.via_dt.strptime()": "Accessor Datetime", "IndexYear.via_dt.strpdate()": "Accessor Datetime", "IndexYear.via_str.__getitem__()": "Accessor String", "IndexYear.via_str.capitalize()": "Accessor String", "IndexYear.via_str.center()": "Accessor String", "IndexYear.via_str.contains()": "Accessor String", "IndexYear.via_str.count()": "Accessor String", "IndexYear.via_str.decode()": "Accessor String", "IndexYear.via_str.encode()": "Accessor String", "IndexYear.via_str.endswith()": "Accessor String", "IndexYear.via_str.find()": "Accessor String", "IndexYear.via_str.format()": "Accessor String", "IndexYear.via_str.index()": "Accessor String", "IndexYear.via_str.isalnum()": "Accessor String", "IndexYear.via_str.isalpha()": "Accessor String", "IndexYear.via_str.isdecimal()": "Accessor String", "IndexYear.via_str.isdigit()": "Accessor String", "IndexYear.via_str.islower()": "Accessor String", "IndexYear.via_str.isnumeric()": "Accessor String", "IndexYear.via_str.isspace()": "Accessor String", "IndexYear.via_str.istitle()": "Accessor String", "IndexYear.via_str.isupper()": "Accessor String", "IndexYear.via_str.ljust()": "Accessor String", "IndexYear.via_str.len()": "Accessor String", "IndexYear.via_str.lower()": "Accessor String", "IndexYear.via_str.lstrip()": "Accessor String", "IndexYear.via_str.partition()": "Accessor String", "IndexYear.via_str.replace()": "Accessor String", "IndexYear.via_str.rfind()": "Accessor String", "IndexYear.via_str.rindex()": "Accessor String", "IndexYear.via_str.rjust()": "Accessor String", "IndexYear.via_str.rpartition()": "Accessor String", "IndexYear.via_str.rsplit()": "Accessor String", "IndexYear.via_str.rstrip()": "Accessor String", "IndexYear.via_str.split()": "Accessor String", "IndexYear.via_str.startswith()": "Accessor String", "IndexYear.via_str.strip()": "Accessor String", "IndexYear.via_str.swapcase()": "Accessor String", "IndexYear.via_str.title()": "Accessor String", "IndexYear.via_str.upper()": "Accessor String", "IndexYear.via_str.zfill()": "Accessor String", "IndexYear.via_re().search()": "Accessor Regular Expression", "IndexYear.via_re().match()": "Accessor Regular Expression", "IndexYear.via_re().fullmatch()": "Accessor Regular Expression", "IndexYear.via_re().split()": "Accessor Regular Expression", "IndexYear.via_re().findall()": "Accessor Regular Expression", "IndexYear.via_re().sub()": "Accessor Regular Expression", "IndexYear.via_re().subn()": "Accessor Regular Expression", "IndexYear.via_hashlib().to_bytes()": "Accessor Hashlib", "IndexYear.via_hashlib().md5()": "Accessor Hashlib", "IndexYear.via_hashlib().sha256()": "Accessor Hashlib", "IndexYear.via_hashlib().sha512()": "Accessor Hashlib", "IndexYear.via_hashlib().sha3_256()": "Accessor Hashlib", "IndexYear.via_hashlib().sha3_512()": "Accessor Hashlib", "IndexYear.via_hashlib().shake_128()": "Accessor Hashlib", "IndexYear.via_hashlib().shake_256()": "Accessor Hashlib", "IndexYear.via_hashlib().blake2b()": "Accessor Hashlib", "IndexYear.via_hashlib().blake2s()": "Accessor Hashlib", "IndexYear.via_type_clinic.to_hint()": "Accessor Type Clinic", "IndexYear.via_type_clinic.check()": "Accessor Type Clinic", "IndexYear.via_type_clinic.warn()": "Accessor Type Clinic", "IndexYear.via_type_clinic.__call__()": "Accessor Type Clinic", "IndexYear.via_type_clinic.__repr__()": "Accessor Type Clinic", "IndexYearGO.__init__()": "Constructor", "IndexYearGO.from_date_range()": "Constructor", "IndexYearGO.from_difference()": "Constructor", "IndexYearGO.from_intersection()": "Constructor", "IndexYearGO.from_labels()": "Constructor", "IndexYearGO.from_pandas()": "Constructor", "IndexYearGO.from_union()": "Constructor", "IndexYearGO.from_year_month_range()": "Constructor", "IndexYearGO.from_year_range()": "Constructor", "IndexYearGO.to_html()": "Exporter", "IndexYearGO.to_html_datatables()": "Exporter", "IndexYearGO.to_pandas()": "Exporter", "IndexYearGO.to_series()": "Exporter", "IndexYearGO.to_visidata()": "Exporter", "IndexYearGO.STATIC": "Attribute", "IndexYearGO.depth": "Attribute", "IndexYearGO.dtype": "Attribute", "IndexYearGO.index_types": "Attribute", "IndexYearGO.memory": "Attribute", "IndexYearGO.mloc": "Attribute", "IndexYearGO.name": "Attribute", "IndexYearGO.names": "Attribute", "IndexYearGO.nbytes": "Attribute", "IndexYearGO.ndim": "Attribute", "IndexYearGO.positions": "Attribute", "IndexYearGO.shape": "Attribute", "IndexYearGO.size": "Attribute", "IndexYearGO.__array__()": "Method", "IndexYearGO.__array_ufunc__()": "Method", "IndexYearGO.__bool__()": "Method", "IndexYearGO.__copy__()": "Method", "IndexYearGO.__deepcopy__()": "Method", "IndexYearGO.__len__()": "Method", "IndexYearGO.all()": "Method", "IndexYearGO.any()": "Method", "IndexYearGO.append()": "Method", "IndexYearGO.astype()": "Method", "IndexYearGO.copy()": "Method", "IndexYearGO.cumprod()": "Method", "IndexYearGO.cumsum()": "Method", "IndexYearGO.difference()": "Method", "IndexYearGO.dropfalsy()": "Method", "IndexYearGO.dropna()": "Method", "IndexYearGO.equals()": "Method", "IndexYearGO.extend()": "Method", "IndexYearGO.fillfalsy()": "Method", "IndexYearGO.fillna()": "Method", "IndexYearGO.head()": "Method", "IndexYearGO.iloc_searchsorted()": "Method", "IndexYearGO.intersection()": "Method", "IndexYearGO.is_sorted()": "Method", "IndexYearGO.isfalsy()": "Method", "IndexYearGO.isin()": "Method", "IndexYearGO.isna()": "Method", "IndexYearGO.label_widths_at_depth()": "Method", "IndexYearGO.level_add()": "Method", "IndexYearGO.loc_searchsorted()": "Method", "IndexYearGO.loc_to_iloc()": "Method", "IndexYearGO.max()": "Method", "IndexYearGO.mean()": "Method", "IndexYearGO.median()": "Method", "IndexYearGO.min()": "Method", "IndexYearGO.notfalsy()": "Method", "IndexYearGO.notna()": "Method", "IndexYearGO.prod()": "Method", "IndexYearGO.relabel()": "Method", "IndexYearGO.rename()": "Method", "IndexYearGO.roll()": "Method", "IndexYearGO.sample()": "Method", "IndexYearGO.sort()": "Method", "IndexYearGO.std()": "Method", "IndexYearGO.sum()": "Method", "IndexYearGO.tail()": "Method", "IndexYearGO.union()": "Method", "IndexYearGO.unique()": "Method", "IndexYearGO.values_at_depth()": "Method", "IndexYearGO.var()": "Method", "IndexYearGO.__contains__()": "Dictionary-Like", "IndexYearGO.__iter__()": "Dictionary-Like", "IndexYearGO.__reversed__()": "Dictionary-Like", "IndexYearGO.values": "Dictionary-Like", "IndexYearGO.interface": "Display", "IndexYearGO.__repr__()": "Display", "IndexYearGO.__str__()": "Display", "IndexYearGO.display()": "Display", "IndexYearGO.display_tall()": "Display", "IndexYearGO.display_wide()": "Display", "IndexYearGO.drop.iloc[]": "Selector", "IndexYearGO.drop.loc[]": "Selector", "IndexYearGO.[]": "Selector", "IndexYearGO.iloc[]": "Selector", "IndexYearGO.loc[]": "Selector", "IndexYearGO.iter_label()": "Iterator", "IndexYearGO.iter_label().apply()": "Iterator", "IndexYearGO.iter_label().apply_iter()": "Iterator", "IndexYearGO.iter_label().apply_iter_items()": "Iterator", "IndexYearGO.iter_label().apply_pool()": "Iterator", "IndexYearGO.__add__()": "Operator Binary", "IndexYearGO.__and__()": "Operator Binary", "IndexYearGO.__eq__()": "Operator Binary", "IndexYearGO.__floordiv__()": "Operator Binary", "IndexYearGO.__ge__()": "Operator Binary", "IndexYearGO.__gt__()": "Operator Binary", "IndexYearGO.__le__()": "Operator Binary", "IndexYearGO.__lt__()": "Operator Binary", "IndexYearGO.__matmul__()": "Operator Binary", "IndexYearGO.__mod__()": "Operator Binary", "IndexYearGO.__mul__()": "Operator Binary", "IndexYearGO.__ne__()": "Operator Binary", "IndexYearGO.__or__()": "Operator Binary", "IndexYearGO.__pow__()": "Operator Binary", "IndexYearGO.__radd__()": "Operator Binary", "IndexYearGO.__rfloordiv__()": "Operator Binary", "IndexYearGO.__rmatmul__()": "Operator Binary", "IndexYearGO.__rmul__()": "Operator Binary", "IndexYearGO.__rshift__()": "Operator Binary", "IndexYearGO.__rsub__()": "Operator Binary", "IndexYearGO.__rtruediv__()": "Operator Binary", "IndexYearGO.__sub__()": "Operator Binary", "IndexYearGO.__truediv__()": "Operator Binary", "IndexYearGO.__xor__()": "Operator Binary", "IndexYearGO.__abs__()": "Operator Unary", "IndexYearGO.__invert__()": "Operator Unary", "IndexYearGO.__neg__()": "Operator Unary", "IndexYearGO.__pos__()": "Operator Unary", "IndexYearGO.via_values.apply()": "Accessor Values", "IndexYearGO.via_values.__array_ufunc__()": "Accessor Values", "IndexYearGO.via_values.__call__()": "Accessor Values", "IndexYearGO.via_dt.__call__()": "Accessor Datetime", "IndexYearGO.via_dt.year": "Accessor Datetime", "IndexYearGO.via_dt.year_month": "Accessor Datetime", "IndexYearGO.via_dt.year_quarter": "Accessor Datetime", "IndexYearGO.via_dt.month": "Accessor Datetime", "IndexYearGO.via_dt.day": "Accessor Datetime", "IndexYearGO.via_dt.hour": "Accessor Datetime", "IndexYearGO.via_dt.minute": "Accessor Datetime", "IndexYearGO.via_dt.second": "Accessor Datetime", "IndexYearGO.via_dt.weekday()": "Accessor Datetime", "IndexYearGO.via_dt.quarter()": "Accessor Datetime", "IndexYearGO.via_dt.is_month_end()": "Accessor Datetime", "IndexYearGO.via_dt.is_month_start()": "Accessor Datetime", "IndexYearGO.via_dt.is_year_end()": "Accessor Datetime", "IndexYearGO.via_dt.is_year_start()": "Accessor Datetime", "IndexYearGO.via_dt.is_quarter_end()": "Accessor Datetime", "IndexYearGO.via_dt.is_quarter_start()": "Accessor Datetime", "IndexYearGO.via_dt.timetuple()": "Accessor Datetime", "IndexYearGO.via_dt.isoformat()": "Accessor Datetime", "IndexYearGO.via_dt.fromisoformat()": "Accessor Datetime", "IndexYearGO.via_dt.strftime()": "Accessor Datetime", "IndexYearGO.via_dt.strptime()": "Accessor Datetime", "IndexYearGO.via_dt.strpdate()": "Accessor Datetime", "IndexYearGO.via_str.__getitem__()": "Accessor String", "IndexYearGO.via_str.capitalize()": "Accessor String", "IndexYearGO.via_str.center()": "Accessor String", "IndexYearGO.via_str.contains()": "Accessor String", "IndexYearGO.via_str.count()": "Accessor String", "IndexYearGO.via_str.decode()": "Accessor String", "IndexYearGO.via_str.encode()": "Accessor String", "IndexYearGO.via_str.endswith()": "Accessor String", "IndexYearGO.via_str.find()": "Accessor String", "IndexYearGO.via_str.format()": "Accessor String", "IndexYearGO.via_str.index()": "Accessor String", "IndexYearGO.via_str.isalnum()": "Accessor String", "IndexYearGO.via_str.isalpha()": "Accessor String", "IndexYearGO.via_str.isdecimal()": "Accessor String", "IndexYearGO.via_str.isdigit()": "Accessor String", "IndexYearGO.via_str.islower()": "Accessor String", "IndexYearGO.via_str.isnumeric()": "Accessor String", "IndexYearGO.via_str.isspace()": "Accessor String", "IndexYearGO.via_str.istitle()": "Accessor String", "IndexYearGO.via_str.isupper()": "Accessor String", "IndexYearGO.via_str.ljust()": "Accessor String", "IndexYearGO.via_str.len()": "Accessor String", "IndexYearGO.via_str.lower()": "Accessor String", "IndexYearGO.via_str.lstrip()": "Accessor String", "IndexYearGO.via_str.partition()": "Accessor String", "IndexYearGO.via_str.replace()": "Accessor String", "IndexYearGO.via_str.rfind()": "Accessor String", "IndexYearGO.via_str.rindex()": "Accessor String", "IndexYearGO.via_str.rjust()": "Accessor String", "IndexYearGO.via_str.rpartition()": "Accessor String", "IndexYearGO.via_str.rsplit()": "Accessor String", "IndexYearGO.via_str.rstrip()": "Accessor String", "IndexYearGO.via_str.split()": "Accessor String", "IndexYearGO.via_str.startswith()": "Accessor String", "IndexYearGO.via_str.strip()": "Accessor String", "IndexYearGO.via_str.swapcase()": "Accessor String", "IndexYearGO.via_str.title()": "Accessor String", "IndexYearGO.via_str.upper()": "Accessor String", "IndexYearGO.via_str.zfill()": "Accessor String", "IndexYearGO.via_re().search()": "Accessor Regular Expression", "IndexYearGO.via_re().match()": "Accessor Regular Expression", "IndexYearGO.via_re().fullmatch()": "Accessor Regular Expression", "IndexYearGO.via_re().split()": "Accessor Regular Expression", "IndexYearGO.via_re().findall()": "Accessor Regular Expression", "IndexYearGO.via_re().sub()": "Accessor Regular Expression", "IndexYearGO.via_re().subn()": "Accessor Regular Expression", "IndexYearGO.via_hashlib().to_bytes()": "Accessor Hashlib", "IndexYearGO.via_hashlib().md5()": "Accessor Hashlib", "IndexYearGO.via_hashlib().sha256()": "Accessor Hashlib", "IndexYearGO.via_hashlib().sha512()": "Accessor Hashlib", "IndexYearGO.via_hashlib().sha3_256()": "Accessor Hashlib", "IndexYearGO.via_hashlib().sha3_512()": "Accessor Hashlib", "IndexYearGO.via_hashlib().shake_128()": "Accessor Hashlib", "IndexYearGO.via_hashlib().shake_256()": "Accessor Hashlib", "IndexYearGO.via_hashlib().blake2b()": "Accessor Hashlib", "IndexYearGO.via_hashlib().blake2s()": "Accessor Hashlib", "IndexYearGO.via_type_clinic.to_hint()": "Accessor Type Clinic", "IndexYearGO.via_type_clinic.check()": "Accessor Type Clinic", "IndexYearGO.via_type_clinic.warn()": "Accessor Type Clinic", "IndexYearGO.via_type_clinic.__call__()": "Accessor Type Clinic", "IndexYearGO.via_type_clinic.__repr__()": "Accessor Type Clinic", "IndexYearMonth.__init__()": "Constructor", "IndexYearMonth.from_date_range()": "Constructor", "IndexYearMonth.from_difference()": "Constructor", "IndexYearMonth.from_intersection()": "Constructor", "IndexYearMonth.from_labels()": "Constructor", "IndexYearMonth.from_pandas()": "Constructor", "IndexYearMonth.from_union()": "Constructor", "IndexYearMonth.from_year_month_range()": "Constructor", "IndexYearMonth.from_year_range()": "Constructor", "IndexYearMonth.to_html()": "Exporter", "IndexYearMonth.to_html_datatables()": "Exporter", "IndexYearMonth.to_pandas()": "Exporter", "IndexYearMonth.to_series()": "Exporter", "IndexYearMonth.to_visidata()": "Exporter", "IndexYearMonth.STATIC": "Attribute", "IndexYearMonth.depth": "Attribute", "IndexYearMonth.dtype": "Attribute", "IndexYearMonth.index_types": "Attribute", "IndexYearMonth.memory": "Attribute", "IndexYearMonth.mloc": "Attribute", "IndexYearMonth.name": "Attribute", "IndexYearMonth.names": "Attribute", "IndexYearMonth.nbytes": "Attribute", "IndexYearMonth.ndim": "Attribute", "IndexYearMonth.positions": "Attribute", "IndexYearMonth.shape": "Attribute", "IndexYearMonth.size": "Attribute", "IndexYearMonth.__array__()": "Method", "IndexYearMonth.__array_ufunc__()": "Method", "IndexYearMonth.__bool__()": "Method", "IndexYearMonth.__copy__()": "Method", "IndexYearMonth.__deepcopy__()": "Method", "IndexYearMonth.__len__()": "Method", "IndexYearMonth.all()": "Method", "IndexYearMonth.any()": "Method", "IndexYearMonth.astype()": "Method", "IndexYearMonth.copy()": "Method", "IndexYearMonth.cumprod()": "Method", "IndexYearMonth.cumsum()": "Method", "IndexYearMonth.difference()": "Method", "IndexYearMonth.dropfalsy()": "Method", "IndexYearMonth.dropna()": "Method", "IndexYearMonth.equals()": "Method", "IndexYearMonth.fillfalsy()": "Method", "IndexYearMonth.fillna()": "Method", "IndexYearMonth.head()": "Method", "IndexYearMonth.iloc_searchsorted()": "Method", "IndexYearMonth.intersection()": "Method", "IndexYearMonth.is_sorted()": "Method", "IndexYearMonth.isfalsy()": "Method", "IndexYearMonth.isin()": "Method", "IndexYearMonth.isna()": "Method", "IndexYearMonth.label_widths_at_depth()": "Method", "IndexYearMonth.level_add()": "Method", "IndexYearMonth.loc_searchsorted()": "Method", "IndexYearMonth.loc_to_iloc()": "Method", "IndexYearMonth.max()": "Method", "IndexYearMonth.mean()": "Method", "IndexYearMonth.median()": "Method", "IndexYearMonth.min()": "Method", "IndexYearMonth.notfalsy()": "Method", "IndexYearMonth.notna()": "Method", "IndexYearMonth.prod()": "Method", "IndexYearMonth.relabel()": "Method", "IndexYearMonth.rename()": "Method", "IndexYearMonth.roll()": "Method", "IndexYearMonth.sample()": "Method", "IndexYearMonth.sort()": "Method", "IndexYearMonth.std()": "Method", "IndexYearMonth.sum()": "Method", "IndexYearMonth.tail()": "Method", "IndexYearMonth.union()": "Method", "IndexYearMonth.unique()": "Method", "IndexYearMonth.values_at_depth()": "Method", "IndexYearMonth.var()": "Method", "IndexYearMonth.__contains__()": "Dictionary-Like", "IndexYearMonth.__iter__()": "Dictionary-Like", "IndexYearMonth.__reversed__()": "Dictionary-Like", "IndexYearMonth.values": "Dictionary-Like", "IndexYearMonth.interface": "Display", "IndexYearMonth.__repr__()": "Display", "IndexYearMonth.__str__()": "Display", "IndexYearMonth.display()": "Display", "IndexYearMonth.display_tall()": "Display", "IndexYearMonth.display_wide()": "Display", "IndexYearMonth.drop.iloc[]": "Selector", "IndexYearMonth.drop.loc[]": "Selector", "IndexYearMonth.[]": "Selector", "IndexYearMonth.iloc[]": "Selector", "IndexYearMonth.loc[]": "Selector", "IndexYearMonth.iter_label()": "Iterator", "IndexYearMonth.iter_label().apply()": "Iterator", "IndexYearMonth.iter_label().apply_iter()": "Iterator", "IndexYearMonth.iter_label().apply_iter_items()": "Iterator", "IndexYearMonth.iter_label().apply_pool()": "Iterator", "IndexYearMonth.__add__()": "Operator Binary", "IndexYearMonth.__and__()": "Operator Binary", "IndexYearMonth.__eq__()": "Operator Binary", "IndexYearMonth.__floordiv__()": "Operator Binary", "IndexYearMonth.__ge__()": "Operator Binary", "IndexYearMonth.__gt__()": "Operator Binary", "IndexYearMonth.__le__()": "Operator Binary", "IndexYearMonth.__lt__()": "Operator Binary", "IndexYearMonth.__matmul__()": "Operator Binary", "IndexYearMonth.__mod__()": "Operator Binary", "IndexYearMonth.__mul__()": "Operator Binary", "IndexYearMonth.__ne__()": "Operator Binary", "IndexYearMonth.__or__()": "Operator Binary", "IndexYearMonth.__pow__()": "Operator Binary", "IndexYearMonth.__radd__()": "Operator Binary", "IndexYearMonth.__rfloordiv__()": "Operator Binary", "IndexYearMonth.__rmatmul__()": "Operator Binary", "IndexYearMonth.__rmul__()": "Operator Binary", "IndexYearMonth.__rshift__()": "Operator Binary", "IndexYearMonth.__rsub__()": "Operator Binary", "IndexYearMonth.__rtruediv__()": "Operator Binary", "IndexYearMonth.__sub__()": "Operator Binary", "IndexYearMonth.__truediv__()": "Operator Binary", "IndexYearMonth.__xor__()": "Operator Binary", "IndexYearMonth.__abs__()": "Operator Unary", "IndexYearMonth.__invert__()": "Operator Unary", "IndexYearMonth.__neg__()": "Operator Unary", "IndexYearMonth.__pos__()": "Operator Unary", "IndexYearMonth.via_values.apply()": "Accessor Values", "IndexYearMonth.via_values.__array_ufunc__()": "Accessor Values", "IndexYearMonth.via_values.__call__()": "Accessor Values", "IndexYearMonth.via_dt.__call__()": "Accessor Datetime", "IndexYearMonth.via_dt.year": "Accessor Datetime", "IndexYearMonth.via_dt.year_month": "Accessor Datetime", "IndexYearMonth.via_dt.year_quarter": "Accessor Datetime", "IndexYearMonth.via_dt.month": "Accessor Datetime", "IndexYearMonth.via_dt.day": "Accessor Datetime", "IndexYearMonth.via_dt.hour": "Accessor Datetime", "IndexYearMonth.via_dt.minute": "Accessor Datetime", "IndexYearMonth.via_dt.second": "Accessor Datetime", "IndexYearMonth.via_dt.weekday()": "Accessor Datetime", "IndexYearMonth.via_dt.quarter()": "Accessor Datetime", "IndexYearMonth.via_dt.is_month_end()": "Accessor Datetime", "IndexYearMonth.via_dt.is_month_start()": "Accessor Datetime", "IndexYearMonth.via_dt.is_year_end()": "Accessor Datetime", "IndexYearMonth.via_dt.is_year_start()": "Accessor Datetime", "IndexYearMonth.via_dt.is_quarter_end()": "Accessor Datetime", "IndexYearMonth.via_dt.is_quarter_start()": "Accessor Datetime", "IndexYearMonth.via_dt.timetuple()": "Accessor Datetime", "IndexYearMonth.via_dt.isoformat()": "Accessor Datetime", "IndexYearMonth.via_dt.fromisoformat()": "Accessor Datetime", "IndexYearMonth.via_dt.strftime()": "Accessor Datetime", "IndexYearMonth.via_dt.strptime()": "Accessor Datetime", "IndexYearMonth.via_dt.strpdate()": "Accessor Datetime", "IndexYearMonth.via_str.__getitem__()": "Accessor String", "IndexYearMonth.via_str.capitalize()": "Accessor String", "IndexYearMonth.via_str.center()": "Accessor String", "IndexYearMonth.via_str.contains()": "Accessor String", "IndexYearMonth.via_str.count()": "Accessor String", "IndexYearMonth.via_str.decode()": "Accessor String", "IndexYearMonth.via_str.encode()": "Accessor String", "IndexYearMonth.via_str.endswith()": "Accessor String", "IndexYearMonth.via_str.find()": "Accessor String", "IndexYearMonth.via_str.format()": "Accessor String", "IndexYearMonth.via_str.index()": "Accessor String", "IndexYearMonth.via_str.isalnum()": "Accessor String", "IndexYearMonth.via_str.isalpha()": "Accessor String", "IndexYearMonth.via_str.isdecimal()": "Accessor String", "IndexYearMonth.via_str.isdigit()": "Accessor String", "IndexYearMonth.via_str.islower()": "Accessor String", "IndexYearMonth.via_str.isnumeric()": "Accessor String", "IndexYearMonth.via_str.isspace()": "Accessor String", "IndexYearMonth.via_str.istitle()": "Accessor String", "IndexYearMonth.via_str.isupper()": "Accessor String", "IndexYearMonth.via_str.ljust()": "Accessor String", "IndexYearMonth.via_str.len()": "Accessor String", "IndexYearMonth.via_str.lower()": "Accessor String", "IndexYearMonth.via_str.lstrip()": "Accessor String", "IndexYearMonth.via_str.partition()": "Accessor String", "IndexYearMonth.via_str.replace()": "Accessor String", "IndexYearMonth.via_str.rfind()": "Accessor String", "IndexYearMonth.via_str.rindex()": "Accessor String", "IndexYearMonth.via_str.rjust()": "Accessor String", "IndexYearMonth.via_str.rpartition()": "Accessor String", "IndexYearMonth.via_str.rsplit()": "Accessor String", "IndexYearMonth.via_str.rstrip()": "Accessor String", "IndexYearMonth.via_str.split()": "Accessor String", "IndexYearMonth.via_str.startswith()": "Accessor String", "IndexYearMonth.via_str.strip()": "Accessor String", "IndexYearMonth.via_str.swapcase()": "Accessor String", "IndexYearMonth.via_str.title()": "Accessor String", "IndexYearMonth.via_str.upper()": "Accessor String", "IndexYearMonth.via_str.zfill()": "Accessor String", "IndexYearMonth.via_re().search()": "Accessor Regular Expression", "IndexYearMonth.via_re().match()": "Accessor Regular Expression", "IndexYearMonth.via_re().fullmatch()": "Accessor Regular Expression", "IndexYearMonth.via_re().split()": "Accessor Regular Expression", "IndexYearMonth.via_re().findall()": "Accessor Regular Expression", "IndexYearMonth.via_re().sub()": "Accessor Regular Expression", "IndexYearMonth.via_re().subn()": "Accessor Regular Expression", "IndexYearMonth.via_hashlib().to_bytes()": "Accessor Hashlib", "IndexYearMonth.via_hashlib().md5()": "Accessor Hashlib", "IndexYearMonth.via_hashlib().sha256()": "Accessor Hashlib", "IndexYearMonth.via_hashlib().sha512()": "Accessor Hashlib", "IndexYearMonth.via_hashlib().sha3_256()": "Accessor Hashlib", "IndexYearMonth.via_hashlib().sha3_512()": "Accessor Hashlib", "IndexYearMonth.via_hashlib().shake_128()": "Accessor Hashlib", "IndexYearMonth.via_hashlib().shake_256()": "Accessor Hashlib", "IndexYearMonth.via_hashlib().blake2b()": "Accessor Hashlib", "IndexYearMonth.via_hashlib().blake2s()": "Accessor Hashlib", "IndexYearMonth.via_type_clinic.to_hint()": "Accessor Type Clinic", "IndexYearMonth.via_type_clinic.check()": "Accessor Type Clinic", "IndexYearMonth.via_type_clinic.warn()": "Accessor Type Clinic", "IndexYearMonth.via_type_clinic.__call__()": "Accessor Type Clinic", "IndexYearMonth.via_type_clinic.__repr__()": "Accessor Type Clinic", "IndexYearMonthGO.__init__()": "Constructor", "IndexYearMonthGO.from_date_range()": "Constructor", "IndexYearMonthGO.from_difference()": "Constructor", "IndexYearMonthGO.from_intersection()": "Constructor", "IndexYearMonthGO.from_labels()": "Constructor", "IndexYearMonthGO.from_pandas()": "Constructor", "IndexYearMonthGO.from_union()": "Constructor", "IndexYearMonthGO.from_year_month_range()": "Constructor", "IndexYearMonthGO.from_year_range()": "Constructor", "IndexYearMonthGO.to_html()": "Exporter", "IndexYearMonthGO.to_html_datatables()": "Exporter", "IndexYearMonthGO.to_pandas()": "Exporter", "IndexYearMonthGO.to_series()": "Exporter", "IndexYearMonthGO.to_visidata()": "Exporter", "IndexYearMonthGO.STATIC": "Attribute", "IndexYearMonthGO.depth": "Attribute", "IndexYearMonthGO.dtype": "Attribute", "IndexYearMonthGO.index_types": "Attribute", "IndexYearMonthGO.memory": "Attribute", "IndexYearMonthGO.mloc": "Attribute", "IndexYearMonthGO.name": "Attribute", "IndexYearMonthGO.names": "Attribute", "IndexYearMonthGO.nbytes": "Attribute", "IndexYearMonthGO.ndim": "Attribute", "IndexYearMonthGO.positions": "Attribute", "IndexYearMonthGO.shape": "Attribute", "IndexYearMonthGO.size": "Attribute", "IndexYearMonthGO.__array__()": "Method", "IndexYearMonthGO.__array_ufunc__()": "Method", "IndexYearMonthGO.__bool__()": "Method", "IndexYearMonthGO.__copy__()": "Method", "IndexYearMonthGO.__deepcopy__()": "Method", "IndexYearMonthGO.__len__()": "Method", "IndexYearMonthGO.all()": "Method", "IndexYearMonthGO.any()": "Method", "IndexYearMonthGO.append()": "Method", "IndexYearMonthGO.astype()": "Method", "IndexYearMonthGO.copy()": "Method", "IndexYearMonthGO.cumprod()": "Method", "IndexYearMonthGO.cumsum()": "Method", "IndexYearMonthGO.difference()": "Method", "IndexYearMonthGO.dropfalsy()": "Method", "IndexYearMonthGO.dropna()": "Method", "IndexYearMonthGO.equals()": "Method", "IndexYearMonthGO.extend()": "Method", "IndexYearMonthGO.fillfalsy()": "Method", "IndexYearMonthGO.fillna()": "Method", "IndexYearMonthGO.head()": "Method", "IndexYearMonthGO.iloc_searchsorted()": "Method", "IndexYearMonthGO.intersection()": "Method", "IndexYearMonthGO.is_sorted()": "Method", "IndexYearMonthGO.isfalsy()": "Method", "IndexYearMonthGO.isin()": "Method", "IndexYearMonthGO.isna()": "Method", "IndexYearMonthGO.label_widths_at_depth()": "Method", "IndexYearMonthGO.level_add()": "Method", "IndexYearMonthGO.loc_searchsorted()": "Method", "IndexYearMonthGO.loc_to_iloc()": "Method", "IndexYearMonthGO.max()": "Method", "IndexYearMonthGO.mean()": "Method", "IndexYearMonthGO.median()": "Method", "IndexYearMonthGO.min()": "Method", "IndexYearMonthGO.notfalsy()": "Method", "IndexYearMonthGO.notna()": "Method", "IndexYearMonthGO.prod()": "Method", "IndexYearMonthGO.relabel()": "Method", "IndexYearMonthGO.rename()": "Method", "IndexYearMonthGO.roll()": "Method", "IndexYearMonthGO.sample()": "Method", "IndexYearMonthGO.sort()": "Method", "IndexYearMonthGO.std()": "Method", "IndexYearMonthGO.sum()": "Method", "IndexYearMonthGO.tail()": "Method", "IndexYearMonthGO.union()": "Method", "IndexYearMonthGO.unique()": "Method", "IndexYearMonthGO.values_at_depth()": "Method", "IndexYearMonthGO.var()": "Method", "IndexYearMonthGO.__contains__()": "Dictionary-Like", "IndexYearMonthGO.__iter__()": "Dictionary-Like", "IndexYearMonthGO.__reversed__()": "Dictionary-Like", "IndexYearMonthGO.values": "Dictionary-Like", "IndexYearMonthGO.interface": "Display", "IndexYearMonthGO.__repr__()": "Display", "IndexYearMonthGO.__str__()": "Display", "IndexYearMonthGO.display()": "Display", "IndexYearMonthGO.display_tall()": "Display", "IndexYearMonthGO.display_wide()": "Display", "IndexYearMonthGO.drop.iloc[]": "Selector", "IndexYearMonthGO.drop.loc[]": "Selector", "IndexYearMonthGO.[]": "Selector", "IndexYearMonthGO.iloc[]": "Selector", "IndexYearMonthGO.loc[]": "Selector", "IndexYearMonthGO.iter_label()": "Iterator", "IndexYearMonthGO.iter_label().apply()": "Iterator", "IndexYearMonthGO.iter_label().apply_iter()": "Iterator", "IndexYearMonthGO.iter_label().apply_iter_items()": "Iterator", "IndexYearMonthGO.iter_label().apply_pool()": "Iterator", "IndexYearMonthGO.__add__()": "Operator Binary", "IndexYearMonthGO.__and__()": "Operator Binary", "IndexYearMonthGO.__eq__()": "Operator Binary", "IndexYearMonthGO.__floordiv__()": "Operator Binary", "IndexYearMonthGO.__ge__()": "Operator Binary", "IndexYearMonthGO.__gt__()": "Operator Binary", "IndexYearMonthGO.__le__()": "Operator Binary", "IndexYearMonthGO.__lt__()": "Operator Binary", "IndexYearMonthGO.__matmul__()": "Operator Binary", "IndexYearMonthGO.__mod__()": "Operator Binary", "IndexYearMonthGO.__mul__()": "Operator Binary", "IndexYearMonthGO.__ne__()": "Operator Binary", "IndexYearMonthGO.__or__()": "Operator Binary", "IndexYearMonthGO.__pow__()": "Operator Binary", "IndexYearMonthGO.__radd__()": "Operator Binary", "IndexYearMonthGO.__rfloordiv__()": "Operator Binary", "IndexYearMonthGO.__rmatmul__()": "Operator Binary", "IndexYearMonthGO.__rmul__()": "Operator Binary", "IndexYearMonthGO.__rshift__()": "Operator Binary", "IndexYearMonthGO.__rsub__()": "Operator Binary", "IndexYearMonthGO.__rtruediv__()": "Operator Binary", "IndexYearMonthGO.__sub__()": "Operator Binary", "IndexYearMonthGO.__truediv__()": "Operator Binary", "IndexYearMonthGO.__xor__()": "Operator Binary", "IndexYearMonthGO.__abs__()": "Operator Unary", "IndexYearMonthGO.__invert__()": "Operator Unary", "IndexYearMonthGO.__neg__()": "Operator Unary", "IndexYearMonthGO.__pos__()": "Operator Unary", "IndexYearMonthGO.via_values.apply()": "Accessor Values", "IndexYearMonthGO.via_values.__array_ufunc__()": "Accessor Values", "IndexYearMonthGO.via_values.__call__()": "Accessor Values", "IndexYearMonthGO.via_dt.__call__()": "Accessor Datetime", "IndexYearMonthGO.via_dt.year": "Accessor Datetime", "IndexYearMonthGO.via_dt.year_month": "Accessor Datetime", "IndexYearMonthGO.via_dt.year_quarter": "Accessor Datetime", "IndexYearMonthGO.via_dt.month": "Accessor Datetime", "IndexYearMonthGO.via_dt.day": "Accessor Datetime", "IndexYearMonthGO.via_dt.hour": "Accessor Datetime", "IndexYearMonthGO.via_dt.minute": "Accessor Datetime", "IndexYearMonthGO.via_dt.second": "Accessor Datetime", "IndexYearMonthGO.via_dt.weekday()": "Accessor Datetime", "IndexYearMonthGO.via_dt.quarter()": "Accessor Datetime", "IndexYearMonthGO.via_dt.is_month_end()": "Accessor Datetime", "IndexYearMonthGO.via_dt.is_month_start()": "Accessor Datetime", "IndexYearMonthGO.via_dt.is_year_end()": "Accessor Datetime", "IndexYearMonthGO.via_dt.is_year_start()": "Accessor Datetime", "IndexYearMonthGO.via_dt.is_quarter_end()": "Accessor Datetime", "IndexYearMonthGO.via_dt.is_quarter_start()": "Accessor Datetime", "IndexYearMonthGO.via_dt.timetuple()": "Accessor Datetime", "IndexYearMonthGO.via_dt.isoformat()": "Accessor Datetime", "IndexYearMonthGO.via_dt.fromisoformat()": "Accessor Datetime", "IndexYearMonthGO.via_dt.strftime()": "Accessor Datetime", "IndexYearMonthGO.via_dt.strptime()": "Accessor Datetime", "IndexYearMonthGO.via_dt.strpdate()": "Accessor Datetime", "IndexYearMonthGO.via_str.__getitem__()": "Accessor String", "IndexYearMonthGO.via_str.capitalize()": "Accessor String", "IndexYearMonthGO.via_str.center()": "Accessor String", "IndexYearMonthGO.via_str.contains()": "Accessor String", "IndexYearMonthGO.via_str.count()": "Accessor String", "IndexYearMonthGO.via_str.decode()": "Accessor String", "IndexYearMonthGO.via_str.encode()": "Accessor String", "IndexYearMonthGO.via_str.endswith()": "Accessor String", "IndexYearMonthGO.via_str.find()": "Accessor String", "IndexYearMonthGO.via_str.format()": "Accessor String", "IndexYearMonthGO.via_str.index()": "Accessor String", "IndexYearMonthGO.via_str.isalnum()": "Accessor String", "IndexYearMonthGO.via_str.isalpha()": "Accessor String", "IndexYearMonthGO.via_str.isdecimal()": "Accessor String", "IndexYearMonthGO.via_str.isdigit()": "Accessor String", "IndexYearMonthGO.via_str.islower()": "Accessor String", "IndexYearMonthGO.via_str.isnumeric()": "Accessor String", "IndexYearMonthGO.via_str.isspace()": "Accessor String", "IndexYearMonthGO.via_str.istitle()": "Accessor String", "IndexYearMonthGO.via_str.isupper()": "Accessor String", "IndexYearMonthGO.via_str.ljust()": "Accessor String", "IndexYearMonthGO.via_str.len()": "Accessor String", "IndexYearMonthGO.via_str.lower()": "Accessor String", "IndexYearMonthGO.via_str.lstrip()": "Accessor String", "IndexYearMonthGO.via_str.partition()": "Accessor String", "IndexYearMonthGO.via_str.replace()": "Accessor String", "IndexYearMonthGO.via_str.rfind()": "Accessor String", "IndexYearMonthGO.via_str.rindex()": "Accessor String", "IndexYearMonthGO.via_str.rjust()": "Accessor String", "IndexYearMonthGO.via_str.rpartition()": "Accessor String", "IndexYearMonthGO.via_str.rsplit()": "Accessor String", "IndexYearMonthGO.via_str.rstrip()": "Accessor String", "IndexYearMonthGO.via_str.split()": "Accessor String", "IndexYearMonthGO.via_str.startswith()": "Accessor String", "IndexYearMonthGO.via_str.strip()": "Accessor String", "IndexYearMonthGO.via_str.swapcase()": "Accessor String", "IndexYearMonthGO.via_str.title()": "Accessor String", "IndexYearMonthGO.via_str.upper()": "Accessor String", "IndexYearMonthGO.via_str.zfill()": "Accessor String", "IndexYearMonthGO.via_re().search()": "Accessor Regular Expression", "IndexYearMonthGO.via_re().match()": "Accessor Regular Expression", "IndexYearMonthGO.via_re().fullmatch()": "Accessor Regular Expression", "IndexYearMonthGO.via_re().split()": "Accessor Regular Expression", "IndexYearMonthGO.via_re().findall()": "Accessor Regular Expression", "IndexYearMonthGO.via_re().sub()": "Accessor Regular Expression", "IndexYearMonthGO.via_re().subn()": "Accessor Regular Expression", "IndexYearMonthGO.via_hashlib().to_bytes()": "Accessor Hashlib", "IndexYearMonthGO.via_hashlib().md5()": "Accessor Hashlib", "IndexYearMonthGO.via_hashlib().sha256()": "Accessor Hashlib", "IndexYearMonthGO.via_hashlib().sha512()": "Accessor Hashlib", "IndexYearMonthGO.via_hashlib().sha3_256()": "Accessor Hashlib", "IndexYearMonthGO.via_hashlib().sha3_512()": "Accessor Hashlib", "IndexYearMonthGO.via_hashlib().shake_128()": "Accessor Hashlib", "IndexYearMonthGO.via_hashlib().shake_256()": "Accessor Hashlib", "IndexYearMonthGO.via_hashlib().blake2b()": "Accessor Hashlib", "IndexYearMonthGO.via_hashlib().blake2s()": "Accessor Hashlib", "IndexYearMonthGO.via_type_clinic.to_hint()": "Accessor Type Clinic", "IndexYearMonthGO.via_type_clinic.check()": "Accessor Type Clinic", "IndexYearMonthGO.via_type_clinic.warn()": "Accessor Type Clinic", "IndexYearMonthGO.via_type_clinic.__call__()": "Accessor Type Clinic", "IndexYearMonthGO.via_type_clinic.__repr__()": "Accessor Type Clinic", "IndexDate.__init__()": "Constructor", "IndexDate.from_date_range()": "Constructor", "IndexDate.from_difference()": "Constructor", "IndexDate.from_intersection()": "Constructor", "IndexDate.from_labels()": "Constructor", "IndexDate.from_pandas()": "Constructor", "IndexDate.from_union()": "Constructor", "IndexDate.from_year_month_range()": "Constructor", "IndexDate.from_year_range()": "Constructor", "IndexDate.to_html()": "Exporter", "IndexDate.to_html_datatables()": "Exporter", "IndexDate.to_pandas()": "Exporter", "IndexDate.to_series()": "Exporter", "IndexDate.to_visidata()": "Exporter", "IndexDate.STATIC": "Attribute", "IndexDate.depth": "Attribute", "IndexDate.dtype": "Attribute", "IndexDate.index_types": "Attribute", "IndexDate.memory": "Attribute", "IndexDate.mloc": "Attribute", "IndexDate.name": "Attribute", "IndexDate.names": "Attribute", "IndexDate.nbytes": "Attribute", "IndexDate.ndim": "Attribute", "IndexDate.positions": "Attribute", "IndexDate.shape": "Attribute", "IndexDate.size": "Attribute", "IndexDate.__array__()": "Method", "IndexDate.__array_ufunc__()": "Method", "IndexDate.__bool__()": "Method", "IndexDate.__copy__()": "Method", "IndexDate.__deepcopy__()": "Method", "IndexDate.__len__()": "Method", "IndexDate.all()": "Method", "IndexDate.any()": "Method", "IndexDate.astype()": "Method", "IndexDate.copy()": "Method", "IndexDate.cumprod()": "Method", "IndexDate.cumsum()": "Method", "IndexDate.difference()": "Method", "IndexDate.dropfalsy()": "Method", "IndexDate.dropna()": "Method", "IndexDate.equals()": "Method", "IndexDate.fillfalsy()": "Method", "IndexDate.fillna()": "Method", "IndexDate.head()": "Method", "IndexDate.iloc_searchsorted()": "Method", "IndexDate.intersection()": "Method", "IndexDate.is_sorted()": "Method", "IndexDate.isfalsy()": "Method", "IndexDate.isin()": "Method", "IndexDate.isna()": "Method", "IndexDate.label_widths_at_depth()": "Method", "IndexDate.level_add()": "Method", "IndexDate.loc_searchsorted()": "Method", "IndexDate.loc_to_iloc()": "Method", "IndexDate.max()": "Method", "IndexDate.mean()": "Method", "IndexDate.median()": "Method", "IndexDate.min()": "Method", "IndexDate.notfalsy()": "Method", "IndexDate.notna()": "Method", "IndexDate.prod()": "Method", "IndexDate.relabel()": "Method", "IndexDate.rename()": "Method", "IndexDate.roll()": "Method", "IndexDate.sample()": "Method", "IndexDate.sort()": "Method", "IndexDate.std()": "Method", "IndexDate.sum()": "Method", "IndexDate.tail()": "Method", "IndexDate.union()": "Method", "IndexDate.unique()": "Method", "IndexDate.values_at_depth()": "Method", "IndexDate.var()": "Method", "IndexDate.__contains__()": "Dictionary-Like", "IndexDate.__iter__()": "Dictionary-Like", "IndexDate.__reversed__()": "Dictionary-Like", "IndexDate.values": "Dictionary-Like", "IndexDate.interface": "Display", "IndexDate.__repr__()": "Display", "IndexDate.__str__()": "Display", "IndexDate.display()": "Display", "IndexDate.display_tall()": "Display", "IndexDate.display_wide()": "Display", "IndexDate.drop.iloc[]": "Selector", "IndexDate.drop.loc[]": "Selector", "IndexDate.[]": "Selector", "IndexDate.iloc[]": "Selector", "IndexDate.loc[]": "Selector", "IndexDate.iter_label()": "Iterator", "IndexDate.iter_label().apply()": "Iterator", "IndexDate.iter_label().apply_iter()": "Iterator", "IndexDate.iter_label().apply_iter_items()": "Iterator", "IndexDate.iter_label().apply_pool()": "Iterator", "IndexDate.__add__()": "Operator Binary", "IndexDate.__and__()": "Operator Binary", "IndexDate.__eq__()": "Operator Binary", "IndexDate.__floordiv__()": "Operator Binary", "IndexDate.__ge__()": "Operator Binary", "IndexDate.__gt__()": "Operator Binary", "IndexDate.__le__()": "Operator Binary", "IndexDate.__lt__()": "Operator Binary", "IndexDate.__matmul__()": "Operator Binary", "IndexDate.__mod__()": "Operator Binary", "IndexDate.__mul__()": "Operator Binary", "IndexDate.__ne__()": "Operator Binary", "IndexDate.__or__()": "Operator Binary", "IndexDate.__pow__()": "Operator Binary", "IndexDate.__radd__()": "Operator Binary", "IndexDate.__rfloordiv__()": "Operator Binary", "IndexDate.__rmatmul__()": "Operator Binary", "IndexDate.__rmul__()": "Operator Binary", "IndexDate.__rshift__()": "Operator Binary", "IndexDate.__rsub__()": "Operator Binary", "IndexDate.__rtruediv__()": "Operator Binary", "IndexDate.__sub__()": "Operator Binary", "IndexDate.__truediv__()": "Operator Binary", "IndexDate.__xor__()": "Operator Binary", "IndexDate.__abs__()": "Operator Unary", "IndexDate.__invert__()": "Operator Unary", "IndexDate.__neg__()": "Operator Unary", "IndexDate.__pos__()": "Operator Unary", "IndexDate.via_values.apply()": "Accessor Values", "IndexDate.via_values.__array_ufunc__()": "Accessor Values", "IndexDate.via_values.__call__()": "Accessor Values", "IndexDate.via_dt.__call__()": "Accessor Datetime", "IndexDate.via_dt.year": "Accessor Datetime", "IndexDate.via_dt.year_month": "Accessor Datetime", "IndexDate.via_dt.year_quarter": "Accessor Datetime", "IndexDate.via_dt.month": "Accessor Datetime", "IndexDate.via_dt.day": "Accessor Datetime", "IndexDate.via_dt.hour": "Accessor Datetime", "IndexDate.via_dt.minute": "Accessor Datetime", "IndexDate.via_dt.second": "Accessor Datetime", "IndexDate.via_dt.weekday()": "Accessor Datetime", "IndexDate.via_dt.quarter()": "Accessor Datetime", "IndexDate.via_dt.is_month_end()": "Accessor Datetime", "IndexDate.via_dt.is_month_start()": "Accessor Datetime", "IndexDate.via_dt.is_year_end()": "Accessor Datetime", "IndexDate.via_dt.is_year_start()": "Accessor Datetime", "IndexDate.via_dt.is_quarter_end()": "Accessor Datetime", "IndexDate.via_dt.is_quarter_start()": "Accessor Datetime", "IndexDate.via_dt.timetuple()": "Accessor Datetime", "IndexDate.via_dt.isoformat()": "Accessor Datetime", "IndexDate.via_dt.fromisoformat()": "Accessor Datetime", "IndexDate.via_dt.strftime()": "Accessor Datetime", "IndexDate.via_dt.strptime()": "Accessor Datetime", "IndexDate.via_dt.strpdate()": "Accessor Datetime", "IndexDate.via_str.__getitem__()": "Accessor String", "IndexDate.via_str.capitalize()": "Accessor String", "IndexDate.via_str.center()": "Accessor String", "IndexDate.via_str.contains()": "Accessor String", "IndexDate.via_str.count()": "Accessor String", "IndexDate.via_str.decode()": "Accessor String", "IndexDate.via_str.encode()": "Accessor String", "IndexDate.via_str.endswith()": "Accessor String", "IndexDate.via_str.find()": "Accessor String", "IndexDate.via_str.format()": "Accessor String", "IndexDate.via_str.index()": "Accessor String", "IndexDate.via_str.isalnum()": "Accessor String", "IndexDate.via_str.isalpha()": "Accessor String", "IndexDate.via_str.isdecimal()": "Accessor String", "IndexDate.via_str.isdigit()": "Accessor String", "IndexDate.via_str.islower()": "Accessor String", "IndexDate.via_str.isnumeric()": "Accessor String", "IndexDate.via_str.isspace()": "Accessor String", "IndexDate.via_str.istitle()": "Accessor String", "IndexDate.via_str.isupper()": "Accessor String", "IndexDate.via_str.ljust()": "Accessor String", "IndexDate.via_str.len()": "Accessor String", "IndexDate.via_str.lower()": "Accessor String", "IndexDate.via_str.lstrip()": "Accessor String", "IndexDate.via_str.partition()": "Accessor String", "IndexDate.via_str.replace()": "Accessor String", "IndexDate.via_str.rfind()": "Accessor String", "IndexDate.via_str.rindex()": "Accessor String", "IndexDate.via_str.rjust()": "Accessor String", "IndexDate.via_str.rpartition()": "Accessor String", "IndexDate.via_str.rsplit()": "Accessor String", "IndexDate.via_str.rstrip()": "Accessor String", "IndexDate.via_str.split()": "Accessor String", "IndexDate.via_str.startswith()": "Accessor String", "IndexDate.via_str.strip()": "Accessor String", "IndexDate.via_str.swapcase()": "Accessor String", "IndexDate.via_str.title()": "Accessor String", "IndexDate.via_str.upper()": "Accessor String", "IndexDate.via_str.zfill()": "Accessor String", "IndexDate.via_re().search()": "Accessor Regular Expression", "IndexDate.via_re().match()": "Accessor Regular Expression", "IndexDate.via_re().fullmatch()": "Accessor Regular Expression", "IndexDate.via_re().split()": "Accessor Regular Expression", "IndexDate.via_re().findall()": "Accessor Regular Expression", "IndexDate.via_re().sub()": "Accessor Regular Expression", "IndexDate.via_re().subn()": "Accessor Regular Expression", "IndexDate.via_hashlib().to_bytes()": "Accessor Hashlib", "IndexDate.via_hashlib().md5()": "Accessor Hashlib", "IndexDate.via_hashlib().sha256()": "Accessor Hashlib", "IndexDate.via_hashlib().sha512()": "Accessor Hashlib", "IndexDate.via_hashlib().sha3_256()": "Accessor Hashlib", "IndexDate.via_hashlib().sha3_512()": "Accessor Hashlib", "IndexDate.via_hashlib().shake_128()": "Accessor Hashlib", "IndexDate.via_hashlib().shake_256()": "Accessor Hashlib", "IndexDate.via_hashlib().blake2b()": "Accessor Hashlib", "IndexDate.via_hashlib().blake2s()": "Accessor Hashlib", "IndexDate.via_type_clinic.to_hint()": "Accessor Type Clinic", "IndexDate.via_type_clinic.check()": "Accessor Type Clinic", "IndexDate.via_type_clinic.warn()": "Accessor Type Clinic", "IndexDate.via_type_clinic.__call__()": "Accessor Type Clinic", "IndexDate.via_type_clinic.__repr__()": "Accessor Type Clinic", "IndexDateGO.__init__()": "Constructor", "IndexDateGO.from_date_range()": "Constructor", "IndexDateGO.from_difference()": "Constructor", "IndexDateGO.from_intersection()": "Constructor", "IndexDateGO.from_labels()": "Constructor", "IndexDateGO.from_pandas()": "Constructor", "IndexDateGO.from_union()": "Constructor", "IndexDateGO.from_year_month_range()": "Constructor", "IndexDateGO.from_year_range()": "Constructor", "IndexDateGO.to_html()": "Exporter", "IndexDateGO.to_html_datatables()": "Exporter", "IndexDateGO.to_pandas()": "Exporter", "IndexDateGO.to_series()": "Exporter", "IndexDateGO.to_visidata()": "Exporter", "IndexDateGO.STATIC": "Attribute", "IndexDateGO.depth": "Attribute", "IndexDateGO.dtype": "Attribute", "IndexDateGO.index_types": "Attribute", "IndexDateGO.memory": "Attribute", "IndexDateGO.mloc": "Attribute", "IndexDateGO.name": "Attribute", "IndexDateGO.names": "Attribute", "IndexDateGO.nbytes": "Attribute", "IndexDateGO.ndim": "Attribute", "IndexDateGO.positions": "Attribute", "IndexDateGO.shape": "Attribute", "IndexDateGO.size": "Attribute", "IndexDateGO.__array__()": "Method", "IndexDateGO.__array_ufunc__()": "Method", "IndexDateGO.__bool__()": "Method", "IndexDateGO.__copy__()": "Method", "IndexDateGO.__deepcopy__()": "Method", "IndexDateGO.__len__()": "Method", "IndexDateGO.all()": "Method", "IndexDateGO.any()": "Method", "IndexDateGO.append()": "Method", "IndexDateGO.astype()": "Method", "IndexDateGO.copy()": "Method", "IndexDateGO.cumprod()": "Method", "IndexDateGO.cumsum()": "Method", "IndexDateGO.difference()": "Method", "IndexDateGO.dropfalsy()": "Method", "IndexDateGO.dropna()": "Method", "IndexDateGO.equals()": "Method", "IndexDateGO.extend()": "Method", "IndexDateGO.fillfalsy()": "Method", "IndexDateGO.fillna()": "Method", "IndexDateGO.head()": "Method", "IndexDateGO.iloc_searchsorted()": "Method", "IndexDateGO.intersection()": "Method", "IndexDateGO.is_sorted()": "Method", "IndexDateGO.isfalsy()": "Method", "IndexDateGO.isin()": "Method", "IndexDateGO.isna()": "Method", "IndexDateGO.label_widths_at_depth()": "Method", "IndexDateGO.level_add()": "Method", "IndexDateGO.loc_searchsorted()": "Method", "IndexDateGO.loc_to_iloc()": "Method", "IndexDateGO.max()": "Method", "IndexDateGO.mean()": "Method", "IndexDateGO.median()": "Method", "IndexDateGO.min()": "Method", "IndexDateGO.notfalsy()": "Method", "IndexDateGO.notna()": "Method", "IndexDateGO.prod()": "Method", "IndexDateGO.relabel()": "Method", "IndexDateGO.rename()": "Method", "IndexDateGO.roll()": "Method", "IndexDateGO.sample()": "Method", "IndexDateGO.sort()": "Method", "IndexDateGO.std()": "Method", "IndexDateGO.sum()": "Method", "IndexDateGO.tail()": "Method", "IndexDateGO.union()": "Method", "IndexDateGO.unique()": "Method", "IndexDateGO.values_at_depth()": "Method", "IndexDateGO.var()": "Method", "IndexDateGO.__contains__()": "Dictionary-Like", "IndexDateGO.__iter__()": "Dictionary-Like", "IndexDateGO.__reversed__()": "Dictionary-Like", "IndexDateGO.values": "Dictionary-Like", "IndexDateGO.interface": "Display", "IndexDateGO.__repr__()": "Display", "IndexDateGO.__str__()": "Display", "IndexDateGO.display()": "Display", "IndexDateGO.display_tall()": "Display", "IndexDateGO.display_wide()": "Display", "IndexDateGO.drop.iloc[]": "Selector", "IndexDateGO.drop.loc[]": "Selector", "IndexDateGO.[]": "Selector", "IndexDateGO.iloc[]": "Selector", "IndexDateGO.loc[]": "Selector", "IndexDateGO.iter_label()": "Iterator", "IndexDateGO.iter_label().apply()": "Iterator", "IndexDateGO.iter_label().apply_iter()": "Iterator", "IndexDateGO.iter_label().apply_iter_items()": "Iterator", "IndexDateGO.iter_label().apply_pool()": "Iterator", "IndexDateGO.__add__()": "Operator Binary", "IndexDateGO.__and__()": "Operator Binary", "IndexDateGO.__eq__()": "Operator Binary", "IndexDateGO.__floordiv__()": "Operator Binary", "IndexDateGO.__ge__()": "Operator Binary", "IndexDateGO.__gt__()": "Operator Binary", "IndexDateGO.__le__()": "Operator Binary", "IndexDateGO.__lt__()": "Operator Binary", "IndexDateGO.__matmul__()": "Operator Binary", "IndexDateGO.__mod__()": "Operator Binary", "IndexDateGO.__mul__()": "Operator Binary", "IndexDateGO.__ne__()": "Operator Binary", "IndexDateGO.__or__()": "Operator Binary", "IndexDateGO.__pow__()": "Operator Binary", "IndexDateGO.__radd__()": "Operator Binary", "IndexDateGO.__rfloordiv__()": "Operator Binary", "IndexDateGO.__rmatmul__()": "Operator Binary", "IndexDateGO.__rmul__()": "Operator Binary", "IndexDateGO.__rshift__()": "Operator Binary", "IndexDateGO.__rsub__()": "Operator Binary", "IndexDateGO.__rtruediv__()": "Operator Binary", "IndexDateGO.__sub__()": "Operator Binary", "IndexDateGO.__truediv__()": "Operator Binary", "IndexDateGO.__xor__()": "Operator Binary", "IndexDateGO.__abs__()": "Operator Unary", "IndexDateGO.__invert__()": "Operator Unary", "IndexDateGO.__neg__()": "Operator Unary", "IndexDateGO.__pos__()": "Operator Unary", "IndexDateGO.via_values.apply()": "Accessor Values", "IndexDateGO.via_values.__array_ufunc__()": "Accessor Values", "IndexDateGO.via_values.__call__()": "Accessor Values", "IndexDateGO.via_dt.__call__()": "Accessor Datetime", "IndexDateGO.via_dt.year": "Accessor Datetime", "IndexDateGO.via_dt.year_month": "Accessor Datetime", "IndexDateGO.via_dt.year_quarter": "Accessor Datetime", "IndexDateGO.via_dt.month": "Accessor Datetime", "IndexDateGO.via_dt.day": "Accessor Datetime", "IndexDateGO.via_dt.hour": "Accessor Datetime", "IndexDateGO.via_dt.minute": "Accessor Datetime", "IndexDateGO.via_dt.second": "Accessor Datetime", "IndexDateGO.via_dt.weekday()": "Accessor Datetime", "IndexDateGO.via_dt.quarter()": "Accessor Datetime", "IndexDateGO.via_dt.is_month_end()": "Accessor Datetime", "IndexDateGO.via_dt.is_month_start()": "Accessor Datetime", "IndexDateGO.via_dt.is_year_end()": "Accessor Datetime", "IndexDateGO.via_dt.is_year_start()": "Accessor Datetime", "IndexDateGO.via_dt.is_quarter_end()": "Accessor Datetime", "IndexDateGO.via_dt.is_quarter_start()": "Accessor Datetime", "IndexDateGO.via_dt.timetuple()": "Accessor Datetime", "IndexDateGO.via_dt.isoformat()": "Accessor Datetime", "IndexDateGO.via_dt.fromisoformat()": "Accessor Datetime", "IndexDateGO.via_dt.strftime()": "Accessor Datetime", "IndexDateGO.via_dt.strptime()": "Accessor Datetime", "IndexDateGO.via_dt.strpdate()": "Accessor Datetime", "IndexDateGO.via_str.__getitem__()": "Accessor String", "IndexDateGO.via_str.capitalize()": "Accessor String", "IndexDateGO.via_str.center()": "Accessor String", "IndexDateGO.via_str.contains()": "Accessor String", "IndexDateGO.via_str.count()": "Accessor String", "IndexDateGO.via_str.decode()": "Accessor String", "IndexDateGO.via_str.encode()": "Accessor String", "IndexDateGO.via_str.endswith()": "Accessor String", "IndexDateGO.via_str.find()": "Accessor String", "IndexDateGO.via_str.format()": "Accessor String", "IndexDateGO.via_str.index()": "Accessor String", "IndexDateGO.via_str.isalnum()": "Accessor String", "IndexDateGO.via_str.isalpha()": "Accessor String", "IndexDateGO.via_str.isdecimal()": "Accessor String", "IndexDateGO.via_str.isdigit()": "Accessor String", "IndexDateGO.via_str.islower()": "Accessor String", "IndexDateGO.via_str.isnumeric()": "Accessor String", "IndexDateGO.via_str.isspace()": "Accessor String", "IndexDateGO.via_str.istitle()": "Accessor String", "IndexDateGO.via_str.isupper()": "Accessor String", "IndexDateGO.via_str.ljust()": "Accessor String", "IndexDateGO.via_str.len()": "Accessor String", "IndexDateGO.via_str.lower()": "Accessor String", "IndexDateGO.via_str.lstrip()": "Accessor String", "IndexDateGO.via_str.partition()": "Accessor String", "IndexDateGO.via_str.replace()": "Accessor String", "IndexDateGO.via_str.rfind()": "Accessor String", "IndexDateGO.via_str.rindex()": "Accessor String", "IndexDateGO.via_str.rjust()": "Accessor String", "IndexDateGO.via_str.rpartition()": "Accessor String", "IndexDateGO.via_str.rsplit()": "Accessor String", "IndexDateGO.via_str.rstrip()": "Accessor String", "IndexDateGO.via_str.split()": "Accessor String", "IndexDateGO.via_str.startswith()": "Accessor String", "IndexDateGO.via_str.strip()": "Accessor String", "IndexDateGO.via_str.swapcase()": "Accessor String", "IndexDateGO.via_str.title()": "Accessor String", "IndexDateGO.via_str.upper()": "Accessor String", "IndexDateGO.via_str.zfill()": "Accessor String", "IndexDateGO.via_re().search()": "Accessor Regular Expression", "IndexDateGO.via_re().match()": "Accessor Regular Expression", "IndexDateGO.via_re().fullmatch()": "Accessor Regular Expression", "IndexDateGO.via_re().split()": "Accessor Regular Expression", "IndexDateGO.via_re().findall()": "Accessor Regular Expression", "IndexDateGO.via_re().sub()": "Accessor Regular Expression", "IndexDateGO.via_re().subn()": "Accessor Regular Expression", "IndexDateGO.via_hashlib().to_bytes()": "Accessor Hashlib", "IndexDateGO.via_hashlib().md5()": "Accessor Hashlib", "IndexDateGO.via_hashlib().sha256()": "Accessor Hashlib", "IndexDateGO.via_hashlib().sha512()": "Accessor Hashlib", "IndexDateGO.via_hashlib().sha3_256()": "Accessor Hashlib", "IndexDateGO.via_hashlib().sha3_512()": "Accessor Hashlib", "IndexDateGO.via_hashlib().shake_128()": "Accessor Hashlib", "IndexDateGO.via_hashlib().shake_256()": "Accessor Hashlib", "IndexDateGO.via_hashlib().blake2b()": "Accessor Hashlib", "IndexDateGO.via_hashlib().blake2s()": "Accessor Hashlib", "IndexDateGO.via_type_clinic.to_hint()": "Accessor Type Clinic", "IndexDateGO.via_type_clinic.check()": "Accessor Type Clinic", "IndexDateGO.via_type_clinic.warn()": "Accessor Type Clinic", "IndexDateGO.via_type_clinic.__call__()": "Accessor Type Clinic", "IndexDateGO.via_type_clinic.__repr__()": "Accessor Type Clinic", "IndexMinute.__init__()": "Constructor", "IndexMinute.from_difference()": "Constructor", "IndexMinute.from_intersection()": "Constructor", "IndexMinute.from_labels()": "Constructor", "IndexMinute.from_pandas()": "Constructor", "IndexMinute.from_union()": "Constructor", "IndexMinute.to_html()": "Exporter", "IndexMinute.to_html_datatables()": "Exporter", "IndexMinute.to_pandas()": "Exporter", "IndexMinute.to_series()": "Exporter", "IndexMinute.to_visidata()": "Exporter", "IndexMinute.STATIC": "Attribute", "IndexMinute.depth": "Attribute", "IndexMinute.dtype": "Attribute", "IndexMinute.index_types": "Attribute", "IndexMinute.memory": "Attribute", "IndexMinute.mloc": "Attribute", "IndexMinute.name": "Attribute", "IndexMinute.names": "Attribute", "IndexMinute.nbytes": "Attribute", "IndexMinute.ndim": "Attribute", "IndexMinute.positions": "Attribute", "IndexMinute.shape": "Attribute", "IndexMinute.size": "Attribute", "IndexMinute.__array__()": "Method", "IndexMinute.__array_ufunc__()": "Method", "IndexMinute.__bool__()": "Method", "IndexMinute.__copy__()": "Method", "IndexMinute.__deepcopy__()": "Method", "IndexMinute.__len__()": "Method", "IndexMinute.all()": "Method", "IndexMinute.any()": "Method", "IndexMinute.astype()": "Method", "IndexMinute.copy()": "Method", "IndexMinute.cumprod()": "Method", "IndexMinute.cumsum()": "Method", "IndexMinute.difference()": "Method", "IndexMinute.dropfalsy()": "Method", "IndexMinute.dropna()": "Method", "IndexMinute.equals()": "Method", "IndexMinute.fillfalsy()": "Method", "IndexMinute.fillna()": "Method", "IndexMinute.head()": "Method", "IndexMinute.iloc_searchsorted()": "Method", "IndexMinute.intersection()": "Method", "IndexMinute.is_sorted()": "Method", "IndexMinute.isfalsy()": "Method", "IndexMinute.isin()": "Method", "IndexMinute.isna()": "Method", "IndexMinute.label_widths_at_depth()": "Method", "IndexMinute.level_add()": "Method", "IndexMinute.loc_searchsorted()": "Method", "IndexMinute.loc_to_iloc()": "Method", "IndexMinute.max()": "Method", "IndexMinute.mean()": "Method", "IndexMinute.median()": "Method", "IndexMinute.min()": "Method", "IndexMinute.notfalsy()": "Method", "IndexMinute.notna()": "Method", "IndexMinute.prod()": "Method", "IndexMinute.relabel()": "Method", "IndexMinute.rename()": "Method", "IndexMinute.roll()": "Method", "IndexMinute.sample()": "Method", "IndexMinute.sort()": "Method", "IndexMinute.std()": "Method", "IndexMinute.sum()": "Method", "IndexMinute.tail()": "Method", "IndexMinute.union()": "Method", "IndexMinute.unique()": "Method", "IndexMinute.values_at_depth()": "Method", "IndexMinute.var()": "Method", "IndexMinute.__contains__()": "Dictionary-Like", "IndexMinute.__iter__()": "Dictionary-Like", "IndexMinute.__reversed__()": "Dictionary-Like", "IndexMinute.values": "Dictionary-Like", "IndexMinute.interface": "Display", "IndexMinute.__repr__()": "Display", "IndexMinute.__str__()": "Display", "IndexMinute.display()": "Display", "IndexMinute.display_tall()": "Display", "IndexMinute.display_wide()": "Display", "IndexMinute.drop.iloc[]": "Selector", "IndexMinute.drop.loc[]": "Selector", "IndexMinute.[]": "Selector", "IndexMinute.iloc[]": "Selector", "IndexMinute.loc[]": "Selector", "IndexMinute.iter_label()": "Iterator", "IndexMinute.iter_label().apply()": "Iterator", "IndexMinute.iter_label().apply_iter()": "Iterator", "IndexMinute.iter_label().apply_iter_items()": "Iterator", "IndexMinute.iter_label().apply_pool()": "Iterator", "IndexMinute.__add__()": "Operator Binary", "IndexMinute.__and__()": "Operator Binary", "IndexMinute.__eq__()": "Operator Binary", "IndexMinute.__floordiv__()": "Operator Binary", "IndexMinute.__ge__()": "Operator Binary", "IndexMinute.__gt__()": "Operator Binary", "IndexMinute.__le__()": "Operator Binary", "IndexMinute.__lt__()": "Operator Binary", "IndexMinute.__matmul__()": "Operator Binary", "IndexMinute.__mod__()": "Operator Binary", "IndexMinute.__mul__()": "Operator Binary", "IndexMinute.__ne__()": "Operator Binary", "IndexMinute.__or__()": "Operator Binary", "IndexMinute.__pow__()": "Operator Binary", "IndexMinute.__radd__()": "Operator Binary", "IndexMinute.__rfloordiv__()": "Operator Binary", "IndexMinute.__rmatmul__()": "Operator Binary", "IndexMinute.__rmul__()": "Operator Binary", "IndexMinute.__rshift__()": "Operator Binary", "IndexMinute.__rsub__()": "Operator Binary", "IndexMinute.__rtruediv__()": "Operator Binary", "IndexMinute.__sub__()": "Operator Binary", "IndexMinute.__truediv__()": "Operator Binary", "IndexMinute.__xor__()": "Operator Binary", "IndexMinute.__abs__()": "Operator Unary", "IndexMinute.__invert__()": "Operator Unary", "IndexMinute.__neg__()": "Operator Unary", "IndexMinute.__pos__()": "Operator Unary", "IndexMinute.via_values.apply()": "Accessor Values", "IndexMinute.via_values.__array_ufunc__()": "Accessor Values", "IndexMinute.via_values.__call__()": "Accessor Values", "IndexMinute.via_dt.__call__()": "Accessor Datetime", "IndexMinute.via_dt.year": "Accessor Datetime", "IndexMinute.via_dt.year_month": "Accessor Datetime", "IndexMinute.via_dt.year_quarter": "Accessor Datetime", "IndexMinute.via_dt.month": "Accessor Datetime", "IndexMinute.via_dt.day": "Accessor Datetime", "IndexMinute.via_dt.hour": "Accessor Datetime", "IndexMinute.via_dt.minute": "Accessor Datetime", "IndexMinute.via_dt.second": "Accessor Datetime", "IndexMinute.via_dt.weekday()": "Accessor Datetime", "IndexMinute.via_dt.quarter()": "Accessor Datetime", "IndexMinute.via_dt.is_month_end()": "Accessor Datetime", "IndexMinute.via_dt.is_month_start()": "Accessor Datetime", "IndexMinute.via_dt.is_year_end()": "Accessor Datetime", "IndexMinute.via_dt.is_year_start()": "Accessor Datetime", "IndexMinute.via_dt.is_quarter_end()": "Accessor Datetime", "IndexMinute.via_dt.is_quarter_start()": "Accessor Datetime", "IndexMinute.via_dt.timetuple()": "Accessor Datetime", "IndexMinute.via_dt.isoformat()": "Accessor Datetime", "IndexMinute.via_dt.fromisoformat()": "Accessor Datetime", "IndexMinute.via_dt.strftime()": "Accessor Datetime", "IndexMinute.via_dt.strptime()": "Accessor Datetime", "IndexMinute.via_dt.strpdate()": "Accessor Datetime", "IndexMinute.via_str.__getitem__()": "Accessor String", "IndexMinute.via_str.capitalize()": "Accessor String", "IndexMinute.via_str.center()": "Accessor String", "IndexMinute.via_str.contains()": "Accessor String", "IndexMinute.via_str.count()": "Accessor String", "IndexMinute.via_str.decode()": "Accessor String", "IndexMinute.via_str.encode()": "Accessor String", "IndexMinute.via_str.endswith()": "Accessor String", "IndexMinute.via_str.find()": "Accessor String", "IndexMinute.via_str.format()": "Accessor String", "IndexMinute.via_str.index()": "Accessor String", "IndexMinute.via_str.isalnum()": "Accessor String", "IndexMinute.via_str.isalpha()": "Accessor String", "IndexMinute.via_str.isdecimal()": "Accessor String", "IndexMinute.via_str.isdigit()": "Accessor String", "IndexMinute.via_str.islower()": "Accessor String", "IndexMinute.via_str.isnumeric()": "Accessor String", "IndexMinute.via_str.isspace()": "Accessor String", "IndexMinute.via_str.istitle()": "Accessor String", "IndexMinute.via_str.isupper()": "Accessor String", "IndexMinute.via_str.ljust()": "Accessor String", "IndexMinute.via_str.len()": "Accessor String", "IndexMinute.via_str.lower()": "Accessor String", "IndexMinute.via_str.lstrip()": "Accessor String", "IndexMinute.via_str.partition()": "Accessor String", "IndexMinute.via_str.replace()": "Accessor String", "IndexMinute.via_str.rfind()": "Accessor String", "IndexMinute.via_str.rindex()": "Accessor String", "IndexMinute.via_str.rjust()": "Accessor String", "IndexMinute.via_str.rpartition()": "Accessor String", "IndexMinute.via_str.rsplit()": "Accessor String", "IndexMinute.via_str.rstrip()": "Accessor String", "IndexMinute.via_str.split()": "Accessor String", "IndexMinute.via_str.startswith()": "Accessor String", "IndexMinute.via_str.strip()": "Accessor String", "IndexMinute.via_str.swapcase()": "Accessor String", "IndexMinute.via_str.title()": "Accessor String", "IndexMinute.via_str.upper()": "Accessor String", "IndexMinute.via_str.zfill()": "Accessor String", "IndexMinute.via_re().search()": "Accessor Regular Expression", "IndexMinute.via_re().match()": "Accessor Regular Expression", "IndexMinute.via_re().fullmatch()": "Accessor Regular Expression", "IndexMinute.via_re().split()": "Accessor Regular Expression", "IndexMinute.via_re().findall()": "Accessor Regular Expression", "IndexMinute.via_re().sub()": "Accessor Regular Expression", "IndexMinute.via_re().subn()": "Accessor Regular Expression", "IndexMinute.via_hashlib().to_bytes()": "Accessor Hashlib", "IndexMinute.via_hashlib().md5()": "Accessor Hashlib", "IndexMinute.via_hashlib().sha256()": "Accessor Hashlib", "IndexMinute.via_hashlib().sha512()": "Accessor Hashlib", "IndexMinute.via_hashlib().sha3_256()": "Accessor Hashlib", "IndexMinute.via_hashlib().sha3_512()": "Accessor Hashlib", "IndexMinute.via_hashlib().shake_128()": "Accessor Hashlib", "IndexMinute.via_hashlib().shake_256()": "Accessor Hashlib", "IndexMinute.via_hashlib().blake2b()": "Accessor Hashlib", "IndexMinute.via_hashlib().blake2s()": "Accessor Hashlib", "IndexMinute.via_type_clinic.to_hint()": "Accessor Type Clinic", "IndexMinute.via_type_clinic.check()": "Accessor Type Clinic", "IndexMinute.via_type_clinic.warn()": "Accessor Type Clinic", "IndexMinute.via_type_clinic.__call__()": "Accessor Type Clinic", "IndexMinute.via_type_clinic.__repr__()": "Accessor Type Clinic", "IndexMinuteGO.__init__()": "Constructor", "IndexMinuteGO.from_difference()": "Constructor", "IndexMinuteGO.from_intersection()": "Constructor", "IndexMinuteGO.from_labels()": "Constructor", "IndexMinuteGO.from_pandas()": "Constructor", "IndexMinuteGO.from_union()": "Constructor", "IndexMinuteGO.to_html()": "Exporter", "IndexMinuteGO.to_html_datatables()": "Exporter", "IndexMinuteGO.to_pandas()": "Exporter", "IndexMinuteGO.to_series()": "Exporter", "IndexMinuteGO.to_visidata()": "Exporter", "IndexMinuteGO.STATIC": "Attribute", "IndexMinuteGO.depth": "Attribute", "IndexMinuteGO.dtype": "Attribute", "IndexMinuteGO.index_types": "Attribute", "IndexMinuteGO.memory": "Attribute", "IndexMinuteGO.mloc": "Attribute", "IndexMinuteGO.name": "Attribute", "IndexMinuteGO.names": "Attribute", "IndexMinuteGO.nbytes": "Attribute", "IndexMinuteGO.ndim": "Attribute", "IndexMinuteGO.positions": "Attribute", "IndexMinuteGO.shape": "Attribute", "IndexMinuteGO.size": "Attribute", "IndexMinuteGO.__array__()": "Method", "IndexMinuteGO.__array_ufunc__()": "Method", "IndexMinuteGO.__bool__()": "Method", "IndexMinuteGO.__copy__()": "Method", "IndexMinuteGO.__deepcopy__()": "Method", "IndexMinuteGO.__len__()": "Method", "IndexMinuteGO.all()": "Method", "IndexMinuteGO.any()": "Method", "IndexMinuteGO.append()": "Method", "IndexMinuteGO.astype()": "Method", "IndexMinuteGO.copy()": "Method", "IndexMinuteGO.cumprod()": "Method", "IndexMinuteGO.cumsum()": "Method", "IndexMinuteGO.difference()": "Method", "IndexMinuteGO.dropfalsy()": "Method", "IndexMinuteGO.dropna()": "Method", "IndexMinuteGO.equals()": "Method", "IndexMinuteGO.extend()": "Method", "IndexMinuteGO.fillfalsy()": "Method", "IndexMinuteGO.fillna()": "Method", "IndexMinuteGO.head()": "Method", "IndexMinuteGO.iloc_searchsorted()": "Method", "IndexMinuteGO.intersection()": "Method", "IndexMinuteGO.is_sorted()": "Method", "IndexMinuteGO.isfalsy()": "Method", "IndexMinuteGO.isin()": "Method", "IndexMinuteGO.isna()": "Method", "IndexMinuteGO.label_widths_at_depth()": "Method", "IndexMinuteGO.level_add()": "Method", "IndexMinuteGO.loc_searchsorted()": "Method", "IndexMinuteGO.loc_to_iloc()": "Method", "IndexMinuteGO.max()": "Method", "IndexMinuteGO.mean()": "Method", "IndexMinuteGO.median()": "Method", "IndexMinuteGO.min()": "Method", "IndexMinuteGO.notfalsy()": "Method", "IndexMinuteGO.notna()": "Method", "IndexMinuteGO.prod()": "Method", "IndexMinuteGO.relabel()": "Method", "IndexMinuteGO.rename()": "Method", "IndexMinuteGO.roll()": "Method", "IndexMinuteGO.sample()": "Method", "IndexMinuteGO.sort()": "Method", "IndexMinuteGO.std()": "Method", "IndexMinuteGO.sum()": "Method", "IndexMinuteGO.tail()": "Method", "IndexMinuteGO.union()": "Method", "IndexMinuteGO.unique()": "Method", "IndexMinuteGO.values_at_depth()": "Method", "IndexMinuteGO.var()": "Method", "IndexMinuteGO.__contains__()": "Dictionary-Like", "IndexMinuteGO.__iter__()": "Dictionary-Like", "IndexMinuteGO.__reversed__()": "Dictionary-Like", "IndexMinuteGO.values": "Dictionary-Like", "IndexMinuteGO.interface": "Display", "IndexMinuteGO.__repr__()": "Display", "IndexMinuteGO.__str__()": "Display", "IndexMinuteGO.display()": "Display", "IndexMinuteGO.display_tall()": "Display", "IndexMinuteGO.display_wide()": "Display", "IndexMinuteGO.drop.iloc[]": "Selector", "IndexMinuteGO.drop.loc[]": "Selector", "IndexMinuteGO.[]": "Selector", "IndexMinuteGO.iloc[]": "Selector", "IndexMinuteGO.loc[]": "Selector", "IndexMinuteGO.iter_label()": "Iterator", "IndexMinuteGO.iter_label().apply()": "Iterator", "IndexMinuteGO.iter_label().apply_iter()": "Iterator", "IndexMinuteGO.iter_label().apply_iter_items()": "Iterator", "IndexMinuteGO.iter_label().apply_pool()": "Iterator", "IndexMinuteGO.__add__()": "Operator Binary", "IndexMinuteGO.__and__()": "Operator Binary", "IndexMinuteGO.__eq__()": "Operator Binary", "IndexMinuteGO.__floordiv__()": "Operator Binary", "IndexMinuteGO.__ge__()": "Operator Binary", "IndexMinuteGO.__gt__()": "Operator Binary", "IndexMinuteGO.__le__()": "Operator Binary", "IndexMinuteGO.__lt__()": "Operator Binary", "IndexMinuteGO.__matmul__()": "Operator Binary", "IndexMinuteGO.__mod__()": "Operator Binary", "IndexMinuteGO.__mul__()": "Operator Binary", "IndexMinuteGO.__ne__()": "Operator Binary", "IndexMinuteGO.__or__()": "Operator Binary", "IndexMinuteGO.__pow__()": "Operator Binary", "IndexMinuteGO.__radd__()": "Operator Binary", "IndexMinuteGO.__rfloordiv__()": "Operator Binary", "IndexMinuteGO.__rmatmul__()": "Operator Binary", "IndexMinuteGO.__rmul__()": "Operator Binary", "IndexMinuteGO.__rshift__()": "Operator Binary", "IndexMinuteGO.__rsub__()": "Operator Binary", "IndexMinuteGO.__rtruediv__()": "Operator Binary", "IndexMinuteGO.__sub__()": "Operator Binary", "IndexMinuteGO.__truediv__()": "Operator Binary", "IndexMinuteGO.__xor__()": "Operator Binary", "IndexMinuteGO.__abs__()": "Operator Unary", "IndexMinuteGO.__invert__()": "Operator Unary", "IndexMinuteGO.__neg__()": "Operator Unary", "IndexMinuteGO.__pos__()": "Operator Unary", "IndexMinuteGO.via_values.apply()": "Accessor Values", "IndexMinuteGO.via_values.__array_ufunc__()": "Accessor Values", "IndexMinuteGO.via_values.__call__()": "Accessor Values", "IndexMinuteGO.via_dt.__call__()": "Accessor Datetime", "IndexMinuteGO.via_dt.year": "Accessor Datetime", "IndexMinuteGO.via_dt.year_month": "Accessor Datetime", "IndexMinuteGO.via_dt.year_quarter": "Accessor Datetime", "IndexMinuteGO.via_dt.month": "Accessor Datetime", "IndexMinuteGO.via_dt.day": "Accessor Datetime", "IndexMinuteGO.via_dt.hour": "Accessor Datetime", "IndexMinuteGO.via_dt.minute": "Accessor Datetime", "IndexMinuteGO.via_dt.second": "Accessor Datetime", "IndexMinuteGO.via_dt.weekday()": "Accessor Datetime", "IndexMinuteGO.via_dt.quarter()": "Accessor Datetime", "IndexMinuteGO.via_dt.is_month_end()": "Accessor Datetime", "IndexMinuteGO.via_dt.is_month_start()": "Accessor Datetime", "IndexMinuteGO.via_dt.is_year_end()": "Accessor Datetime", "IndexMinuteGO.via_dt.is_year_start()": "Accessor Datetime", "IndexMinuteGO.via_dt.is_quarter_end()": "Accessor Datetime", "IndexMinuteGO.via_dt.is_quarter_start()": "Accessor Datetime", "IndexMinuteGO.via_dt.timetuple()": "Accessor Datetime", "IndexMinuteGO.via_dt.isoformat()": "Accessor Datetime", "IndexMinuteGO.via_dt.fromisoformat()": "Accessor Datetime", "IndexMinuteGO.via_dt.strftime()": "Accessor Datetime", "IndexMinuteGO.via_dt.strptime()": "Accessor Datetime", "IndexMinuteGO.via_dt.strpdate()": "Accessor Datetime", "IndexMinuteGO.via_str.__getitem__()": "Accessor String", "IndexMinuteGO.via_str.capitalize()": "Accessor String", "IndexMinuteGO.via_str.center()": "Accessor String", "IndexMinuteGO.via_str.contains()": "Accessor String", "IndexMinuteGO.via_str.count()": "Accessor String", "IndexMinuteGO.via_str.decode()": "Accessor String", "IndexMinuteGO.via_str.encode()": "Accessor String", "IndexMinuteGO.via_str.endswith()": "Accessor String", "IndexMinuteGO.via_str.find()": "Accessor String", "IndexMinuteGO.via_str.format()": "Accessor String", "IndexMinuteGO.via_str.index()": "Accessor String", "IndexMinuteGO.via_str.isalnum()": "Accessor String", "IndexMinuteGO.via_str.isalpha()": "Accessor String", "IndexMinuteGO.via_str.isdecimal()": "Accessor String", "IndexMinuteGO.via_str.isdigit()": "Accessor String", "IndexMinuteGO.via_str.islower()": "Accessor String", "IndexMinuteGO.via_str.isnumeric()": "Accessor String", "IndexMinuteGO.via_str.isspace()": "Accessor String", "IndexMinuteGO.via_str.istitle()": "Accessor String", "IndexMinuteGO.via_str.isupper()": "Accessor String", "IndexMinuteGO.via_str.ljust()": "Accessor String", "IndexMinuteGO.via_str.len()": "Accessor String", "IndexMinuteGO.via_str.lower()": "Accessor String", "IndexMinuteGO.via_str.lstrip()": "Accessor String", "IndexMinuteGO.via_str.partition()": "Accessor String", "IndexMinuteGO.via_str.replace()": "Accessor String", "IndexMinuteGO.via_str.rfind()": "Accessor String", "IndexMinuteGO.via_str.rindex()": "Accessor String", "IndexMinuteGO.via_str.rjust()": "Accessor String", "IndexMinuteGO.via_str.rpartition()": "Accessor String", "IndexMinuteGO.via_str.rsplit()": "Accessor String", "IndexMinuteGO.via_str.rstrip()": "Accessor String", "IndexMinuteGO.via_str.split()": "Accessor String", "IndexMinuteGO.via_str.startswith()": "Accessor String", "IndexMinuteGO.via_str.strip()": "Accessor String", "IndexMinuteGO.via_str.swapcase()": "Accessor String", "IndexMinuteGO.via_str.title()": "Accessor String", "IndexMinuteGO.via_str.upper()": "Accessor String", "IndexMinuteGO.via_str.zfill()": "Accessor String", "IndexMinuteGO.via_re().search()": "Accessor Regular Expression", "IndexMinuteGO.via_re().match()": "Accessor Regular Expression", "IndexMinuteGO.via_re().fullmatch()": "Accessor Regular Expression", "IndexMinuteGO.via_re().split()": "Accessor Regular Expression", "IndexMinuteGO.via_re().findall()": "Accessor Regular Expression", "IndexMinuteGO.via_re().sub()": "Accessor Regular Expression", "IndexMinuteGO.via_re().subn()": "Accessor Regular Expression", "IndexMinuteGO.via_hashlib().to_bytes()": "Accessor Hashlib", "IndexMinuteGO.via_hashlib().md5()": "Accessor Hashlib", "IndexMinuteGO.via_hashlib().sha256()": "Accessor Hashlib", "IndexMinuteGO.via_hashlib().sha512()": "Accessor Hashlib", "IndexMinuteGO.via_hashlib().sha3_256()": "Accessor Hashlib", "IndexMinuteGO.via_hashlib().sha3_512()": "Accessor Hashlib", "IndexMinuteGO.via_hashlib().shake_128()": "Accessor Hashlib", "IndexMinuteGO.via_hashlib().shake_256()": "Accessor Hashlib", "IndexMinuteGO.via_hashlib().blake2b()": "Accessor Hashlib", "IndexMinuteGO.via_hashlib().blake2s()": "Accessor Hashlib", "IndexMinuteGO.via_type_clinic.to_hint()": "Accessor Type Clinic", "IndexMinuteGO.via_type_clinic.check()": "Accessor Type Clinic", "IndexMinuteGO.via_type_clinic.warn()": "Accessor Type Clinic", "IndexMinuteGO.via_type_clinic.__call__()": "Accessor Type Clinic", "IndexMinuteGO.via_type_clinic.__repr__()": "Accessor Type Clinic", "IndexHour.__init__()": "Constructor", "IndexHour.from_difference()": "Constructor", "IndexHour.from_intersection()": "Constructor", "IndexHour.from_labels()": "Constructor", "IndexHour.from_pandas()": "Constructor", "IndexHour.from_union()": "Constructor", "IndexHour.to_html()": "Exporter", "IndexHour.to_html_datatables()": "Exporter", "IndexHour.to_pandas()": "Exporter", "IndexHour.to_series()": "Exporter", "IndexHour.to_visidata()": "Exporter", "IndexHour.STATIC": "Attribute", "IndexHour.depth": "Attribute", "IndexHour.dtype": "Attribute", "IndexHour.index_types": "Attribute", "IndexHour.memory": "Attribute", "IndexHour.mloc": "Attribute", "IndexHour.name": "Attribute", "IndexHour.names": "Attribute", "IndexHour.nbytes": "Attribute", "IndexHour.ndim": "Attribute", "IndexHour.positions": "Attribute", "IndexHour.shape": "Attribute", "IndexHour.size": "Attribute", "IndexHour.__array__()": "Method", "IndexHour.__array_ufunc__()": "Method", "IndexHour.__bool__()": "Method", "IndexHour.__copy__()": "Method", "IndexHour.__deepcopy__()": "Method", "IndexHour.__len__()": "Method", "IndexHour.all()": "Method", "IndexHour.any()": "Method", "IndexHour.astype()": "Method", "IndexHour.copy()": "Method", "IndexHour.cumprod()": "Method", "IndexHour.cumsum()": "Method", "IndexHour.difference()": "Method", "IndexHour.dropfalsy()": "Method", "IndexHour.dropna()": "Method", "IndexHour.equals()": "Method", "IndexHour.fillfalsy()": "Method", "IndexHour.fillna()": "Method", "IndexHour.head()": "Method", "IndexHour.iloc_searchsorted()": "Method", "IndexHour.intersection()": "Method", "IndexHour.is_sorted()": "Method", "IndexHour.isfalsy()": "Method", "IndexHour.isin()": "Method", "IndexHour.isna()": "Method", "IndexHour.label_widths_at_depth()": "Method", "IndexHour.level_add()": "Method", "IndexHour.loc_searchsorted()": "Method", "IndexHour.loc_to_iloc()": "Method", "IndexHour.max()": "Method", "IndexHour.mean()": "Method", "IndexHour.median()": "Method", "IndexHour.min()": "Method", "IndexHour.notfalsy()": "Method", "IndexHour.notna()": "Method", "IndexHour.prod()": "Method", "IndexHour.relabel()": "Method", "IndexHour.rename()": "Method", "IndexHour.roll()": "Method", "IndexHour.sample()": "Method", "IndexHour.sort()": "Method", "IndexHour.std()": "Method", "IndexHour.sum()": "Method", "IndexHour.tail()": "Method", "IndexHour.union()": "Method", "IndexHour.unique()": "Method", "IndexHour.values_at_depth()": "Method", "IndexHour.var()": "Method", "IndexHour.__contains__()": "Dictionary-Like", "IndexHour.__iter__()": "Dictionary-Like", "IndexHour.__reversed__()": "Dictionary-Like", "IndexHour.values": "Dictionary-Like", "IndexHour.interface": "Display", "IndexHour.__repr__()": "Display", "IndexHour.__str__()": "Display", "IndexHour.display()": "Display", "IndexHour.display_tall()": "Display", "IndexHour.display_wide()": "Display", "IndexHour.drop.iloc[]": "Selector", "IndexHour.drop.loc[]": "Selector", "IndexHour.[]": "Selector", "IndexHour.iloc[]": "Selector", "IndexHour.loc[]": "Selector", "IndexHour.iter_label()": "Iterator", "IndexHour.iter_label().apply()": "Iterator", "IndexHour.iter_label().apply_iter()": "Iterator", "IndexHour.iter_label().apply_iter_items()": "Iterator", "IndexHour.iter_label().apply_pool()": "Iterator", "IndexHour.__add__()": "Operator Binary", "IndexHour.__and__()": "Operator Binary", "IndexHour.__eq__()": "Operator Binary", "IndexHour.__floordiv__()": "Operator Binary", "IndexHour.__ge__()": "Operator Binary", "IndexHour.__gt__()": "Operator Binary", "IndexHour.__le__()": "Operator Binary", "IndexHour.__lt__()": "Operator Binary", "IndexHour.__matmul__()": "Operator Binary", "IndexHour.__mod__()": "Operator Binary", "IndexHour.__mul__()": "Operator Binary", "IndexHour.__ne__()": "Operator Binary", "IndexHour.__or__()": "Operator Binary", "IndexHour.__pow__()": "Operator Binary", "IndexHour.__radd__()": "Operator Binary", "IndexHour.__rfloordiv__()": "Operator Binary", "IndexHour.__rmatmul__()": "Operator Binary", "IndexHour.__rmul__()": "Operator Binary", "IndexHour.__rshift__()": "Operator Binary", "IndexHour.__rsub__()": "Operator Binary", "IndexHour.__rtruediv__()": "Operator Binary", "IndexHour.__sub__()": "Operator Binary", "IndexHour.__truediv__()": "Operator Binary", "IndexHour.__xor__()": "Operator Binary", "IndexHour.__abs__()": "Operator Unary", "IndexHour.__invert__()": "Operator Unary", "IndexHour.__neg__()": "Operator Unary", "IndexHour.__pos__()": "Operator Unary", "IndexHour.via_values.apply()": "Accessor Values", "IndexHour.via_values.__array_ufunc__()": "Accessor Values", "IndexHour.via_values.__call__()": "Accessor Values", "IndexHour.via_dt.__call__()": "Accessor Datetime", "IndexHour.via_dt.year": "Accessor Datetime", "IndexHour.via_dt.year_month": "Accessor Datetime", "IndexHour.via_dt.year_quarter": "Accessor Datetime", "IndexHour.via_dt.month": "Accessor Datetime", "IndexHour.via_dt.day": "Accessor Datetime", "IndexHour.via_dt.hour": "Accessor Datetime", "IndexHour.via_dt.minute": "Accessor Datetime", "IndexHour.via_dt.second": "Accessor Datetime", "IndexHour.via_dt.weekday()": "Accessor Datetime", "IndexHour.via_dt.quarter()": "Accessor Datetime", "IndexHour.via_dt.is_month_end()": "Accessor Datetime", "IndexHour.via_dt.is_month_start()": "Accessor Datetime", "IndexHour.via_dt.is_year_end()": "Accessor Datetime", "IndexHour.via_dt.is_year_start()": "Accessor Datetime", "IndexHour.via_dt.is_quarter_end()": "Accessor Datetime", "IndexHour.via_dt.is_quarter_start()": "Accessor Datetime", "IndexHour.via_dt.timetuple()": "Accessor Datetime", "IndexHour.via_dt.isoformat()": "Accessor Datetime", "IndexHour.via_dt.fromisoformat()": "Accessor Datetime", "IndexHour.via_dt.strftime()": "Accessor Datetime", "IndexHour.via_dt.strptime()": "Accessor Datetime", "IndexHour.via_dt.strpdate()": "Accessor Datetime", "IndexHour.via_str.__getitem__()": "Accessor String", "IndexHour.via_str.capitalize()": "Accessor String", "IndexHour.via_str.center()": "Accessor String", "IndexHour.via_str.contains()": "Accessor String", "IndexHour.via_str.count()": "Accessor String", "IndexHour.via_str.decode()": "Accessor String", "IndexHour.via_str.encode()": "Accessor String", "IndexHour.via_str.endswith()": "Accessor String", "IndexHour.via_str.find()": "Accessor String", "IndexHour.via_str.format()": "Accessor String", "IndexHour.via_str.index()": "Accessor String", "IndexHour.via_str.isalnum()": "Accessor String", "IndexHour.via_str.isalpha()": "Accessor String", "IndexHour.via_str.isdecimal()": "Accessor String", "IndexHour.via_str.isdigit()": "Accessor String", "IndexHour.via_str.islower()": "Accessor String", "IndexHour.via_str.isnumeric()": "Accessor String", "IndexHour.via_str.isspace()": "Accessor String", "IndexHour.via_str.istitle()": "Accessor String", "IndexHour.via_str.isupper()": "Accessor String", "IndexHour.via_str.ljust()": "Accessor String", "IndexHour.via_str.len()": "Accessor String", "IndexHour.via_str.lower()": "Accessor String", "IndexHour.via_str.lstrip()": "Accessor String", "IndexHour.via_str.partition()": "Accessor String", "IndexHour.via_str.replace()": "Accessor String", "IndexHour.via_str.rfind()": "Accessor String", "IndexHour.via_str.rindex()": "Accessor String", "IndexHour.via_str.rjust()": "Accessor String", "IndexHour.via_str.rpartition()": "Accessor String", "IndexHour.via_str.rsplit()": "Accessor String", "IndexHour.via_str.rstrip()": "Accessor String", "IndexHour.via_str.split()": "Accessor String", "IndexHour.via_str.startswith()": "Accessor String", "IndexHour.via_str.strip()": "Accessor String", "IndexHour.via_str.swapcase()": "Accessor String", "IndexHour.via_str.title()": "Accessor String", "IndexHour.via_str.upper()": "Accessor String", "IndexHour.via_str.zfill()": "Accessor String", "IndexHour.via_re().search()": "Accessor Regular Expression", "IndexHour.via_re().match()": "Accessor Regular Expression", "IndexHour.via_re().fullmatch()": "Accessor Regular Expression", "IndexHour.via_re().split()": "Accessor Regular Expression", "IndexHour.via_re().findall()": "Accessor Regular Expression", "IndexHour.via_re().sub()": "Accessor Regular Expression", "IndexHour.via_re().subn()": "Accessor Regular Expression", "IndexHour.via_hashlib().to_bytes()": "Accessor Hashlib", "IndexHour.via_hashlib().md5()": "Accessor Hashlib", "IndexHour.via_hashlib().sha256()": "Accessor Hashlib", "IndexHour.via_hashlib().sha512()": "Accessor Hashlib", "IndexHour.via_hashlib().sha3_256()": "Accessor Hashlib", "IndexHour.via_hashlib().sha3_512()": "Accessor Hashlib", "IndexHour.via_hashlib().shake_128()": "Accessor Hashlib", "IndexHour.via_hashlib().shake_256()": "Accessor Hashlib", "IndexHour.via_hashlib().blake2b()": "Accessor Hashlib", "IndexHour.via_hashlib().blake2s()": "Accessor Hashlib", "IndexHour.via_type_clinic.to_hint()": "Accessor Type Clinic", "IndexHour.via_type_clinic.check()": "Accessor Type Clinic", "IndexHour.via_type_clinic.warn()": "Accessor Type Clinic", "IndexHour.via_type_clinic.__call__()": "Accessor Type Clinic", "IndexHour.via_type_clinic.__repr__()": "Accessor Type Clinic", "IndexHourGO.__init__()": "Constructor", "IndexHourGO.from_difference()": "Constructor", "IndexHourGO.from_intersection()": "Constructor", "IndexHourGO.from_labels()": "Constructor", "IndexHourGO.from_pandas()": "Constructor", "IndexHourGO.from_union()": "Constructor", "IndexHourGO.to_html()": "Exporter", "IndexHourGO.to_html_datatables()": "Exporter", "IndexHourGO.to_pandas()": "Exporter", "IndexHourGO.to_series()": "Exporter", "IndexHourGO.to_visidata()": "Exporter", "IndexHourGO.STATIC": "Attribute", "IndexHourGO.depth": "Attribute", "IndexHourGO.dtype": "Attribute", "IndexHourGO.index_types": "Attribute", "IndexHourGO.memory": "Attribute", "IndexHourGO.mloc": "Attribute", "IndexHourGO.name": "Attribute", "IndexHourGO.names": "Attribute", "IndexHourGO.nbytes": "Attribute", "IndexHourGO.ndim": "Attribute", "IndexHourGO.positions": "Attribute", "IndexHourGO.shape": "Attribute", "IndexHourGO.size": "Attribute", "IndexHourGO.__array__()": "Method", "IndexHourGO.__array_ufunc__()": "Method", "IndexHourGO.__bool__()": "Method", "IndexHourGO.__copy__()": "Method", "IndexHourGO.__deepcopy__()": "Method", "IndexHourGO.__len__()": "Method", "IndexHourGO.all()": "Method", "IndexHourGO.any()": "Method", "IndexHourGO.append()": "Method", "IndexHourGO.astype()": "Method", "IndexHourGO.copy()": "Method", "IndexHourGO.cumprod()": "Method", "IndexHourGO.cumsum()": "Method", "IndexHourGO.difference()": "Method", "IndexHourGO.dropfalsy()": "Method", "IndexHourGO.dropna()": "Method", "IndexHourGO.equals()": "Method", "IndexHourGO.extend()": "Method", "IndexHourGO.fillfalsy()": "Method", "IndexHourGO.fillna()": "Method", "IndexHourGO.head()": "Method", "IndexHourGO.iloc_searchsorted()": "Method", "IndexHourGO.intersection()": "Method", "IndexHourGO.is_sorted()": "Method", "IndexHourGO.isfalsy()": "Method", "IndexHourGO.isin()": "Method", "IndexHourGO.isna()": "Method", "IndexHourGO.label_widths_at_depth()": "Method", "IndexHourGO.level_add()": "Method", "IndexHourGO.loc_searchsorted()": "Method", "IndexHourGO.loc_to_iloc()": "Method", "IndexHourGO.max()": "Method", "IndexHourGO.mean()": "Method", "IndexHourGO.median()": "Method", "IndexHourGO.min()": "Method", "IndexHourGO.notfalsy()": "Method", "IndexHourGO.notna()": "Method", "IndexHourGO.prod()": "Method", "IndexHourGO.relabel()": "Method", "IndexHourGO.rename()": "Method", "IndexHourGO.roll()": "Method", "IndexHourGO.sample()": "Method", "IndexHourGO.sort()": "Method", "IndexHourGO.std()": "Method", "IndexHourGO.sum()": "Method", "IndexHourGO.tail()": "Method", "IndexHourGO.union()": "Method", "IndexHourGO.unique()": "Method", "IndexHourGO.values_at_depth()": "Method", "IndexHourGO.var()": "Method", "IndexHourGO.__contains__()": "Dictionary-Like", "IndexHourGO.__iter__()": "Dictionary-Like", "IndexHourGO.__reversed__()": "Dictionary-Like", "IndexHourGO.values": "Dictionary-Like", "IndexHourGO.interface": "Display", "IndexHourGO.__repr__()": "Display", "IndexHourGO.__str__()": "Display", "IndexHourGO.display()": "Display", "IndexHourGO.display_tall()": "Display", "IndexHourGO.display_wide()": "Display", "IndexHourGO.drop.iloc[]": "Selector", "IndexHourGO.drop.loc[]": "Selector", "IndexHourGO.[]": "Selector", "IndexHourGO.iloc[]": "Selector", "IndexHourGO.loc[]": "Selector", "IndexHourGO.iter_label()": "Iterator", "IndexHourGO.iter_label().apply()": "Iterator", "IndexHourGO.iter_label().apply_iter()": "Iterator", "IndexHourGO.iter_label().apply_iter_items()": "Iterator", "IndexHourGO.iter_label().apply_pool()": "Iterator", "IndexHourGO.__add__()": "Operator Binary", "IndexHourGO.__and__()": "Operator Binary", "IndexHourGO.__eq__()": "Operator Binary", "IndexHourGO.__floordiv__()": "Operator Binary", "IndexHourGO.__ge__()": "Operator Binary", "IndexHourGO.__gt__()": "Operator Binary", "IndexHourGO.__le__()": "Operator Binary", "IndexHourGO.__lt__()": "Operator Binary", "IndexHourGO.__matmul__()": "Operator Binary", "IndexHourGO.__mod__()": "Operator Binary", "IndexHourGO.__mul__()": "Operator Binary", "IndexHourGO.__ne__()": "Operator Binary", "IndexHourGO.__or__()": "Operator Binary", "IndexHourGO.__pow__()": "Operator Binary", "IndexHourGO.__radd__()": "Operator Binary", "IndexHourGO.__rfloordiv__()": "Operator Binary", "IndexHourGO.__rmatmul__()": "Operator Binary", "IndexHourGO.__rmul__()": "Operator Binary", "IndexHourGO.__rshift__()": "Operator Binary", "IndexHourGO.__rsub__()": "Operator Binary", "IndexHourGO.__rtruediv__()": "Operator Binary", "IndexHourGO.__sub__()": "Operator Binary", "IndexHourGO.__truediv__()": "Operator Binary", "IndexHourGO.__xor__()": "Operator Binary", "IndexHourGO.__abs__()": "Operator Unary", "IndexHourGO.__invert__()": "Operator Unary", "IndexHourGO.__neg__()": "Operator Unary", "IndexHourGO.__pos__()": "Operator Unary", "IndexHourGO.via_values.apply()": "Accessor Values", "IndexHourGO.via_values.__array_ufunc__()": "Accessor Values", "IndexHourGO.via_values.__call__()": "Accessor Values", "IndexHourGO.via_dt.__call__()": "Accessor Datetime", "IndexHourGO.via_dt.year": "Accessor Datetime", "IndexHourGO.via_dt.year_month": "Accessor Datetime", "IndexHourGO.via_dt.year_quarter": "Accessor Datetime", "IndexHourGO.via_dt.month": "Accessor Datetime", "IndexHourGO.via_dt.day": "Accessor Datetime", "IndexHourGO.via_dt.hour": "Accessor Datetime", "IndexHourGO.via_dt.minute": "Accessor Datetime", "IndexHourGO.via_dt.second": "Accessor Datetime", "IndexHourGO.via_dt.weekday()": "Accessor Datetime", "IndexHourGO.via_dt.quarter()": "Accessor Datetime", "IndexHourGO.via_dt.is_month_end()": "Accessor Datetime", "IndexHourGO.via_dt.is_month_start()": "Accessor Datetime", "IndexHourGO.via_dt.is_year_end()": "Accessor Datetime", "IndexHourGO.via_dt.is_year_start()": "Accessor Datetime", "IndexHourGO.via_dt.is_quarter_end()": "Accessor Datetime", "IndexHourGO.via_dt.is_quarter_start()": "Accessor Datetime", "IndexHourGO.via_dt.timetuple()": "Accessor Datetime", "IndexHourGO.via_dt.isoformat()": "Accessor Datetime", "IndexHourGO.via_dt.fromisoformat()": "Accessor Datetime", "IndexHourGO.via_dt.strftime()": "Accessor Datetime", "IndexHourGO.via_dt.strptime()": "Accessor Datetime", "IndexHourGO.via_dt.strpdate()": "Accessor Datetime", "IndexHourGO.via_str.__getitem__()": "Accessor String", "IndexHourGO.via_str.capitalize()": "Accessor String", "IndexHourGO.via_str.center()": "Accessor String", "IndexHourGO.via_str.contains()": "Accessor String", "IndexHourGO.via_str.count()": "Accessor String", "IndexHourGO.via_str.decode()": "Accessor String", "IndexHourGO.via_str.encode()": "Accessor String", "IndexHourGO.via_str.endswith()": "Accessor String", "IndexHourGO.via_str.find()": "Accessor String", "IndexHourGO.via_str.format()": "Accessor String", "IndexHourGO.via_str.index()": "Accessor String", "IndexHourGO.via_str.isalnum()": "Accessor String", "IndexHourGO.via_str.isalpha()": "Accessor String", "IndexHourGO.via_str.isdecimal()": "Accessor String", "IndexHourGO.via_str.isdigit()": "Accessor String", "IndexHourGO.via_str.islower()": "Accessor String", "IndexHourGO.via_str.isnumeric()": "Accessor String", "IndexHourGO.via_str.isspace()": "Accessor String", "IndexHourGO.via_str.istitle()": "Accessor String", "IndexHourGO.via_str.isupper()": "Accessor String", "IndexHourGO.via_str.ljust()": "Accessor String", "IndexHourGO.via_str.len()": "Accessor String", "IndexHourGO.via_str.lower()": "Accessor String", "IndexHourGO.via_str.lstrip()": "Accessor String", "IndexHourGO.via_str.partition()": "Accessor String", "IndexHourGO.via_str.replace()": "Accessor String", "IndexHourGO.via_str.rfind()": "Accessor String", "IndexHourGO.via_str.rindex()": "Accessor String", "IndexHourGO.via_str.rjust()": "Accessor String", "IndexHourGO.via_str.rpartition()": "Accessor String", "IndexHourGO.via_str.rsplit()": "Accessor String", "IndexHourGO.via_str.rstrip()": "Accessor String", "IndexHourGO.via_str.split()": "Accessor String", "IndexHourGO.via_str.startswith()": "Accessor String", "IndexHourGO.via_str.strip()": "Accessor String", "IndexHourGO.via_str.swapcase()": "Accessor String", "IndexHourGO.via_str.title()": "Accessor String", "IndexHourGO.via_str.upper()": "Accessor String", "IndexHourGO.via_str.zfill()": "Accessor String", "IndexHourGO.via_re().search()": "Accessor Regular Expression", "IndexHourGO.via_re().match()": "Accessor Regular Expression", "IndexHourGO.via_re().fullmatch()": "Accessor Regular Expression", "IndexHourGO.via_re().split()": "Accessor Regular Expression", "IndexHourGO.via_re().findall()": "Accessor Regular Expression", "IndexHourGO.via_re().sub()": "Accessor Regular Expression", "IndexHourGO.via_re().subn()": "Accessor Regular Expression", "IndexHourGO.via_hashlib().to_bytes()": "Accessor Hashlib", "IndexHourGO.via_hashlib().md5()": "Accessor Hashlib", "IndexHourGO.via_hashlib().sha256()": "Accessor Hashlib", "IndexHourGO.via_hashlib().sha512()": "Accessor Hashlib", "IndexHourGO.via_hashlib().sha3_256()": "Accessor Hashlib", "IndexHourGO.via_hashlib().sha3_512()": "Accessor Hashlib", "IndexHourGO.via_hashlib().shake_128()": "Accessor Hashlib", "IndexHourGO.via_hashlib().shake_256()": "Accessor Hashlib", "IndexHourGO.via_hashlib().blake2b()": "Accessor Hashlib", "IndexHourGO.via_hashlib().blake2s()": "Accessor Hashlib", "IndexHourGO.via_type_clinic.to_hint()": "Accessor Type Clinic", "IndexHourGO.via_type_clinic.check()": "Accessor Type Clinic", "IndexHourGO.via_type_clinic.warn()": "Accessor Type Clinic", "IndexHourGO.via_type_clinic.__call__()": "Accessor Type Clinic", "IndexHourGO.via_type_clinic.__repr__()": "Accessor Type Clinic", "IndexSecond.__init__()": "Constructor", "IndexSecond.from_difference()": "Constructor", "IndexSecond.from_intersection()": "Constructor", "IndexSecond.from_labels()": "Constructor", "IndexSecond.from_pandas()": "Constructor", "IndexSecond.from_union()": "Constructor", "IndexSecond.to_html()": "Exporter", "IndexSecond.to_html_datatables()": "Exporter", "IndexSecond.to_pandas()": "Exporter", "IndexSecond.to_series()": "Exporter", "IndexSecond.to_visidata()": "Exporter", "IndexSecond.STATIC": "Attribute", "IndexSecond.depth": "Attribute", "IndexSecond.dtype": "Attribute", "IndexSecond.index_types": "Attribute", "IndexSecond.memory": "Attribute", "IndexSecond.mloc": "Attribute", "IndexSecond.name": "Attribute", "IndexSecond.names": "Attribute", "IndexSecond.nbytes": "Attribute", "IndexSecond.ndim": "Attribute", "IndexSecond.positions": "Attribute", "IndexSecond.shape": "Attribute", "IndexSecond.size": "Attribute", "IndexSecond.__array__()": "Method", "IndexSecond.__array_ufunc__()": "Method", "IndexSecond.__bool__()": "Method", "IndexSecond.__copy__()": "Method", "IndexSecond.__deepcopy__()": "Method", "IndexSecond.__len__()": "Method", "IndexSecond.all()": "Method", "IndexSecond.any()": "Method", "IndexSecond.astype()": "Method", "IndexSecond.copy()": "Method", "IndexSecond.cumprod()": "Method", "IndexSecond.cumsum()": "Method", "IndexSecond.difference()": "Method", "IndexSecond.dropfalsy()": "Method", "IndexSecond.dropna()": "Method", "IndexSecond.equals()": "Method", "IndexSecond.fillfalsy()": "Method", "IndexSecond.fillna()": "Method", "IndexSecond.head()": "Method", "IndexSecond.iloc_searchsorted()": "Method", "IndexSecond.intersection()": "Method", "IndexSecond.is_sorted()": "Method", "IndexSecond.isfalsy()": "Method", "IndexSecond.isin()": "Method", "IndexSecond.isna()": "Method", "IndexSecond.label_widths_at_depth()": "Method", "IndexSecond.level_add()": "Method", "IndexSecond.loc_searchsorted()": "Method", "IndexSecond.loc_to_iloc()": "Method", "IndexSecond.max()": "Method", "IndexSecond.mean()": "Method", "IndexSecond.median()": "Method", "IndexSecond.min()": "Method", "IndexSecond.notfalsy()": "Method", "IndexSecond.notna()": "Method", "IndexSecond.prod()": "Method", "IndexSecond.relabel()": "Method", "IndexSecond.rename()": "Method", "IndexSecond.roll()": "Method", "IndexSecond.sample()": "Method", "IndexSecond.sort()": "Method", "IndexSecond.std()": "Method", "IndexSecond.sum()": "Method", "IndexSecond.tail()": "Method", "IndexSecond.union()": "Method", "IndexSecond.unique()": "Method", "IndexSecond.values_at_depth()": "Method", "IndexSecond.var()": "Method", "IndexSecond.__contains__()": "Dictionary-Like", "IndexSecond.__iter__()": "Dictionary-Like", "IndexSecond.__reversed__()": "Dictionary-Like", "IndexSecond.values": "Dictionary-Like", "IndexSecond.interface": "Display", "IndexSecond.__repr__()": "Display", "IndexSecond.__str__()": "Display", "IndexSecond.display()": "Display", "IndexSecond.display_tall()": "Display", "IndexSecond.display_wide()": "Display", "IndexSecond.drop.iloc[]": "Selector", "IndexSecond.drop.loc[]": "Selector", "IndexSecond.[]": "Selector", "IndexSecond.iloc[]": "Selector", "IndexSecond.loc[]": "Selector", "IndexSecond.iter_label()": "Iterator", "IndexSecond.iter_label().apply()": "Iterator", "IndexSecond.iter_label().apply_iter()": "Iterator", "IndexSecond.iter_label().apply_iter_items()": "Iterator", "IndexSecond.iter_label().apply_pool()": "Iterator", "IndexSecond.__add__()": "Operator Binary", "IndexSecond.__and__()": "Operator Binary", "IndexSecond.__eq__()": "Operator Binary", "IndexSecond.__floordiv__()": "Operator Binary", "IndexSecond.__ge__()": "Operator Binary", "IndexSecond.__gt__()": "Operator Binary", "IndexSecond.__le__()": "Operator Binary", "IndexSecond.__lt__()": "Operator Binary", "IndexSecond.__matmul__()": "Operator Binary", "IndexSecond.__mod__()": "Operator Binary", "IndexSecond.__mul__()": "Operator Binary", "IndexSecond.__ne__()": "Operator Binary", "IndexSecond.__or__()": "Operator Binary", "IndexSecond.__pow__()": "Operator Binary", "IndexSecond.__radd__()": "Operator Binary", "IndexSecond.__rfloordiv__()": "Operator Binary", "IndexSecond.__rmatmul__()": "Operator Binary", "IndexSecond.__rmul__()": "Operator Binary", "IndexSecond.__rshift__()": "Operator Binary", "IndexSecond.__rsub__()": "Operator Binary", "IndexSecond.__rtruediv__()": "Operator Binary", "IndexSecond.__sub__()": "Operator Binary", "IndexSecond.__truediv__()": "Operator Binary", "IndexSecond.__xor__()": "Operator Binary", "IndexSecond.__abs__()": "Operator Unary", "IndexSecond.__invert__()": "Operator Unary", "IndexSecond.__neg__()": "Operator Unary", "IndexSecond.__pos__()": "Operator Unary", "IndexSecond.via_values.apply()": "Accessor Values", "IndexSecond.via_values.__array_ufunc__()": "Accessor Values", "IndexSecond.via_values.__call__()": "Accessor Values", "IndexSecond.via_dt.__call__()": "Accessor Datetime", "IndexSecond.via_dt.year": "Accessor Datetime", "IndexSecond.via_dt.year_month": "Accessor Datetime", "IndexSecond.via_dt.year_quarter": "Accessor Datetime", "IndexSecond.via_dt.month": "Accessor Datetime", "IndexSecond.via_dt.day": "Accessor Datetime", "IndexSecond.via_dt.hour": "Accessor Datetime", "IndexSecond.via_dt.minute": "Accessor Datetime", "IndexSecond.via_dt.second": "Accessor Datetime", "IndexSecond.via_dt.weekday()": "Accessor Datetime", "IndexSecond.via_dt.quarter()": "Accessor Datetime", "IndexSecond.via_dt.is_month_end()": "Accessor Datetime", "IndexSecond.via_dt.is_month_start()": "Accessor Datetime", "IndexSecond.via_dt.is_year_end()": "Accessor Datetime", "IndexSecond.via_dt.is_year_start()": "Accessor Datetime", "IndexSecond.via_dt.is_quarter_end()": "Accessor Datetime", "IndexSecond.via_dt.is_quarter_start()": "Accessor Datetime", "IndexSecond.via_dt.timetuple()": "Accessor Datetime", "IndexSecond.via_dt.isoformat()": "Accessor Datetime", "IndexSecond.via_dt.fromisoformat()": "Accessor Datetime", "IndexSecond.via_dt.strftime()": "Accessor Datetime", "IndexSecond.via_dt.strptime()": "Accessor Datetime", "IndexSecond.via_dt.strpdate()": "Accessor Datetime", "IndexSecond.via_str.__getitem__()": "Accessor String", "IndexSecond.via_str.capitalize()": "Accessor String", "IndexSecond.via_str.center()": "Accessor String", "IndexSecond.via_str.contains()": "Accessor String", "IndexSecond.via_str.count()": "Accessor String", "IndexSecond.via_str.decode()": "Accessor String", "IndexSecond.via_str.encode()": "Accessor String", "IndexSecond.via_str.endswith()": "Accessor String", "IndexSecond.via_str.find()": "Accessor String", "IndexSecond.via_str.format()": "Accessor String", "IndexSecond.via_str.index()": "Accessor String", "IndexSecond.via_str.isalnum()": "Accessor String", "IndexSecond.via_str.isalpha()": "Accessor String", "IndexSecond.via_str.isdecimal()": "Accessor String", "IndexSecond.via_str.isdigit()": "Accessor String", "IndexSecond.via_str.islower()": "Accessor String", "IndexSecond.via_str.isnumeric()": "Accessor String", "IndexSecond.via_str.isspace()": "Accessor String", "IndexSecond.via_str.istitle()": "Accessor String", "IndexSecond.via_str.isupper()": "Accessor String", "IndexSecond.via_str.ljust()": "Accessor String", "IndexSecond.via_str.len()": "Accessor String", "IndexSecond.via_str.lower()": "Accessor String", "IndexSecond.via_str.lstrip()": "Accessor String", "IndexSecond.via_str.partition()": "Accessor String", "IndexSecond.via_str.replace()": "Accessor String", "IndexSecond.via_str.rfind()": "Accessor String", "IndexSecond.via_str.rindex()": "Accessor String", "IndexSecond.via_str.rjust()": "Accessor String", "IndexSecond.via_str.rpartition()": "Accessor String", "IndexSecond.via_str.rsplit()": "Accessor String", "IndexSecond.via_str.rstrip()": "Accessor String", "IndexSecond.via_str.split()": "Accessor String", "IndexSecond.via_str.startswith()": "Accessor String", "IndexSecond.via_str.strip()": "Accessor String", "IndexSecond.via_str.swapcase()": "Accessor String", "IndexSecond.via_str.title()": "Accessor String", "IndexSecond.via_str.upper()": "Accessor String", "IndexSecond.via_str.zfill()": "Accessor String", "IndexSecond.via_re().search()": "Accessor Regular Expression", "IndexSecond.via_re().match()": "Accessor Regular Expression", "IndexSecond.via_re().fullmatch()": "Accessor Regular Expression", "IndexSecond.via_re().split()": "Accessor Regular Expression", "IndexSecond.via_re().findall()": "Accessor Regular Expression", "IndexSecond.via_re().sub()": "Accessor Regular Expression", "IndexSecond.via_re().subn()": "Accessor Regular Expression", "IndexSecond.via_hashlib().to_bytes()": "Accessor Hashlib", "IndexSecond.via_hashlib().md5()": "Accessor Hashlib", "IndexSecond.via_hashlib().sha256()": "Accessor Hashlib", "IndexSecond.via_hashlib().sha512()": "Accessor Hashlib", "IndexSecond.via_hashlib().sha3_256()": "Accessor Hashlib", "IndexSecond.via_hashlib().sha3_512()": "Accessor Hashlib", "IndexSecond.via_hashlib().shake_128()": "Accessor Hashlib", "IndexSecond.via_hashlib().shake_256()": "Accessor Hashlib", "IndexSecond.via_hashlib().blake2b()": "Accessor Hashlib", "IndexSecond.via_hashlib().blake2s()": "Accessor Hashlib", "IndexSecond.via_type_clinic.to_hint()": "Accessor Type Clinic", "IndexSecond.via_type_clinic.check()": "Accessor Type Clinic", "IndexSecond.via_type_clinic.warn()": "Accessor Type Clinic", "IndexSecond.via_type_clinic.__call__()": "Accessor Type Clinic", "IndexSecond.via_type_clinic.__repr__()": "Accessor Type Clinic", "IndexSecondGO.__init__()": "Constructor", "IndexSecondGO.from_difference()": "Constructor", "IndexSecondGO.from_intersection()": "Constructor", "IndexSecondGO.from_labels()": "Constructor", "IndexSecondGO.from_pandas()": "Constructor", "IndexSecondGO.from_union()": "Constructor", "IndexSecondGO.to_html()": "Exporter", "IndexSecondGO.to_html_datatables()": "Exporter", "IndexSecondGO.to_pandas()": "Exporter", "IndexSecondGO.to_series()": "Exporter", "IndexSecondGO.to_visidata()": "Exporter", "IndexSecondGO.STATIC": "Attribute", "IndexSecondGO.depth": "Attribute", "IndexSecondGO.dtype": "Attribute", "IndexSecondGO.index_types": "Attribute", "IndexSecondGO.memory": "Attribute", "IndexSecondGO.mloc": "Attribute", "IndexSecondGO.name": "Attribute", "IndexSecondGO.names": "Attribute", "IndexSecondGO.nbytes": "Attribute", "IndexSecondGO.ndim": "Attribute", "IndexSecondGO.positions": "Attribute", "IndexSecondGO.shape": "Attribute", "IndexSecondGO.size": "Attribute", "IndexSecondGO.__array__()": "Method", "IndexSecondGO.__array_ufunc__()": "Method", "IndexSecondGO.__bool__()": "Method", "IndexSecondGO.__copy__()": "Method", "IndexSecondGO.__deepcopy__()": "Method", "IndexSecondGO.__len__()": "Method", "IndexSecondGO.all()": "Method", "IndexSecondGO.any()": "Method", "IndexSecondGO.append()": "Method", "IndexSecondGO.astype()": "Method", "IndexSecondGO.copy()": "Method", "IndexSecondGO.cumprod()": "Method", "IndexSecondGO.cumsum()": "Method", "IndexSecondGO.difference()": "Method", "IndexSecondGO.dropfalsy()": "Method", "IndexSecondGO.dropna()": "Method", "IndexSecondGO.equals()": "Method", "IndexSecondGO.extend()": "Method", "IndexSecondGO.fillfalsy()": "Method", "IndexSecondGO.fillna()": "Method", "IndexSecondGO.head()": "Method", "IndexSecondGO.iloc_searchsorted()": "Method", "IndexSecondGO.intersection()": "Method", "IndexSecondGO.is_sorted()": "Method", "IndexSecondGO.isfalsy()": "Method", "IndexSecondGO.isin()": "Method", "IndexSecondGO.isna()": "Method", "IndexSecondGO.label_widths_at_depth()": "Method", "IndexSecondGO.level_add()": "Method", "IndexSecondGO.loc_searchsorted()": "Method", "IndexSecondGO.loc_to_iloc()": "Method", "IndexSecondGO.max()": "Method", "IndexSecondGO.mean()": "Method", "IndexSecondGO.median()": "Method", "IndexSecondGO.min()": "Method", "IndexSecondGO.notfalsy()": "Method", "IndexSecondGO.notna()": "Method", "IndexSecondGO.prod()": "Method", "IndexSecondGO.relabel()": "Method", "IndexSecondGO.rename()": "Method", "IndexSecondGO.roll()": "Method", "IndexSecondGO.sample()": "Method", "IndexSecondGO.sort()": "Method", "IndexSecondGO.std()": "Method", "IndexSecondGO.sum()": "Method", "IndexSecondGO.tail()": "Method", "IndexSecondGO.union()": "Method", "IndexSecondGO.unique()": "Method", "IndexSecondGO.values_at_depth()": "Method", "IndexSecondGO.var()": "Method", "IndexSecondGO.__contains__()": "Dictionary-Like", "IndexSecondGO.__iter__()": "Dictionary-Like", "IndexSecondGO.__reversed__()": "Dictionary-Like", "IndexSecondGO.values": "Dictionary-Like", "IndexSecondGO.interface": "Display", "IndexSecondGO.__repr__()": "Display", "IndexSecondGO.__str__()": "Display", "IndexSecondGO.display()": "Display", "IndexSecondGO.display_tall()": "Display", "IndexSecondGO.display_wide()": "Display", "IndexSecondGO.drop.iloc[]": "Selector", "IndexSecondGO.drop.loc[]": "Selector", "IndexSecondGO.[]": "Selector", "IndexSecondGO.iloc[]": "Selector", "IndexSecondGO.loc[]": "Selector", "IndexSecondGO.iter_label()": "Iterator", "IndexSecondGO.iter_label().apply()": "Iterator", "IndexSecondGO.iter_label().apply_iter()": "Iterator", "IndexSecondGO.iter_label().apply_iter_items()": "Iterator", "IndexSecondGO.iter_label().apply_pool()": "Iterator", "IndexSecondGO.__add__()": "Operator Binary", "IndexSecondGO.__and__()": "Operator Binary", "IndexSecondGO.__eq__()": "Operator Binary", "IndexSecondGO.__floordiv__()": "Operator Binary", "IndexSecondGO.__ge__()": "Operator Binary", "IndexSecondGO.__gt__()": "Operator Binary", "IndexSecondGO.__le__()": "Operator Binary", "IndexSecondGO.__lt__()": "Operator Binary", "IndexSecondGO.__matmul__()": "Operator Binary", "IndexSecondGO.__mod__()": "Operator Binary", "IndexSecondGO.__mul__()": "Operator Binary", "IndexSecondGO.__ne__()": "Operator Binary", "IndexSecondGO.__or__()": "Operator Binary", "IndexSecondGO.__pow__()": "Operator Binary", "IndexSecondGO.__radd__()": "Operator Binary", "IndexSecondGO.__rfloordiv__()": "Operator Binary", "IndexSecondGO.__rmatmul__()": "Operator Binary", "IndexSecondGO.__rmul__()": "Operator Binary", "IndexSecondGO.__rshift__()": "Operator Binary", "IndexSecondGO.__rsub__()": "Operator Binary", "IndexSecondGO.__rtruediv__()": "Operator Binary", "IndexSecondGO.__sub__()": "Operator Binary", "IndexSecondGO.__truediv__()": "Operator Binary", "IndexSecondGO.__xor__()": "Operator Binary", "IndexSecondGO.__abs__()": "Operator Unary", "IndexSecondGO.__invert__()": "Operator Unary", "IndexSecondGO.__neg__()": "Operator Unary", "IndexSecondGO.__pos__()": "Operator Unary", "IndexSecondGO.via_values.apply()": "Accessor Values", "IndexSecondGO.via_values.__array_ufunc__()": "Accessor Values", "IndexSecondGO.via_values.__call__()": "Accessor Values", "IndexSecondGO.via_dt.__call__()": "Accessor Datetime", "IndexSecondGO.via_dt.year": "Accessor Datetime", "IndexSecondGO.via_dt.year_month": "Accessor Datetime", "IndexSecondGO.via_dt.year_quarter": "Accessor Datetime", "IndexSecondGO.via_dt.month": "Accessor Datetime", "IndexSecondGO.via_dt.day": "Accessor Datetime", "IndexSecondGO.via_dt.hour": "Accessor Datetime", "IndexSecondGO.via_dt.minute": "Accessor Datetime", "IndexSecondGO.via_dt.second": "Accessor Datetime", "IndexSecondGO.via_dt.weekday()": "Accessor Datetime", "IndexSecondGO.via_dt.quarter()": "Accessor Datetime", "IndexSecondGO.via_dt.is_month_end()": "Accessor Datetime", "IndexSecondGO.via_dt.is_month_start()": "Accessor Datetime", "IndexSecondGO.via_dt.is_year_end()": "Accessor Datetime", "IndexSecondGO.via_dt.is_year_start()": "Accessor Datetime", "IndexSecondGO.via_dt.is_quarter_end()": "Accessor Datetime", "IndexSecondGO.via_dt.is_quarter_start()": "Accessor Datetime", "IndexSecondGO.via_dt.timetuple()": "Accessor Datetime", "IndexSecondGO.via_dt.isoformat()": "Accessor Datetime", "IndexSecondGO.via_dt.fromisoformat()": "Accessor Datetime", "IndexSecondGO.via_dt.strftime()": "Accessor Datetime", "IndexSecondGO.via_dt.strptime()": "Accessor Datetime", "IndexSecondGO.via_dt.strpdate()": "Accessor Datetime", "IndexSecondGO.via_str.__getitem__()": "Accessor String", "IndexSecondGO.via_str.capitalize()": "Accessor String", "IndexSecondGO.via_str.center()": "Accessor String", "IndexSecondGO.via_str.contains()": "Accessor String", "IndexSecondGO.via_str.count()": "Accessor String", "IndexSecondGO.via_str.decode()": "Accessor String", "IndexSecondGO.via_str.encode()": "Accessor String", "IndexSecondGO.via_str.endswith()": "Accessor String", "IndexSecondGO.via_str.find()": "Accessor String", "IndexSecondGO.via_str.format()": "Accessor String", "IndexSecondGO.via_str.index()": "Accessor String", "IndexSecondGO.via_str.isalnum()": "Accessor String", "IndexSecondGO.via_str.isalpha()": "Accessor String", "IndexSecondGO.via_str.isdecimal()": "Accessor String", "IndexSecondGO.via_str.isdigit()": "Accessor String", "IndexSecondGO.via_str.islower()": "Accessor String", "IndexSecondGO.via_str.isnumeric()": "Accessor String", "IndexSecondGO.via_str.isspace()": "Accessor String", "IndexSecondGO.via_str.istitle()": "Accessor String", "IndexSecondGO.via_str.isupper()": "Accessor String", "IndexSecondGO.via_str.ljust()": "Accessor String", "IndexSecondGO.via_str.len()": "Accessor String", "IndexSecondGO.via_str.lower()": "Accessor String", "IndexSecondGO.via_str.lstrip()": "Accessor String", "IndexSecondGO.via_str.partition()": "Accessor String", "IndexSecondGO.via_str.replace()": "Accessor String", "IndexSecondGO.via_str.rfind()": "Accessor String", "IndexSecondGO.via_str.rindex()": "Accessor String", "IndexSecondGO.via_str.rjust()": "Accessor String", "IndexSecondGO.via_str.rpartition()": "Accessor String", "IndexSecondGO.via_str.rsplit()": "Accessor String", "IndexSecondGO.via_str.rstrip()": "Accessor String", "IndexSecondGO.via_str.split()": "Accessor String", "IndexSecondGO.via_str.startswith()": "Accessor String", "IndexSecondGO.via_str.strip()": "Accessor String", "IndexSecondGO.via_str.swapcase()": "Accessor String", "IndexSecondGO.via_str.title()": "Accessor String", "IndexSecondGO.via_str.upper()": "Accessor String", "IndexSecondGO.via_str.zfill()": "Accessor String", "IndexSecondGO.via_re().search()": "Accessor Regular Expression", "IndexSecondGO.via_re().match()": "Accessor Regular Expression", "IndexSecondGO.via_re().fullmatch()": "Accessor Regular Expression", "IndexSecondGO.via_re().split()": "Accessor Regular Expression", "IndexSecondGO.via_re().findall()": "Accessor Regular Expression", "IndexSecondGO.via_re().sub()": "Accessor Regular Expression", "IndexSecondGO.via_re().subn()": "Accessor Regular Expression", "IndexSecondGO.via_hashlib().to_bytes()": "Accessor Hashlib", "IndexSecondGO.via_hashlib().md5()": "Accessor Hashlib", "IndexSecondGO.via_hashlib().sha256()": "Accessor Hashlib", "IndexSecondGO.via_hashlib().sha512()": "Accessor Hashlib", "IndexSecondGO.via_hashlib().sha3_256()": "Accessor Hashlib", "IndexSecondGO.via_hashlib().sha3_512()": "Accessor Hashlib", "IndexSecondGO.via_hashlib().shake_128()": "Accessor Hashlib", "IndexSecondGO.via_hashlib().shake_256()": "Accessor Hashlib", "IndexSecondGO.via_hashlib().blake2b()": "Accessor Hashlib", "IndexSecondGO.via_hashlib().blake2s()": "Accessor Hashlib", "IndexSecondGO.via_type_clinic.to_hint()": "Accessor Type Clinic", "IndexSecondGO.via_type_clinic.check()": "Accessor Type Clinic", "IndexSecondGO.via_type_clinic.warn()": "Accessor Type Clinic", "IndexSecondGO.via_type_clinic.__call__()": "Accessor Type Clinic", "IndexSecondGO.via_type_clinic.__repr__()": "Accessor Type Clinic", "IndexMillisecond.__init__()": "Constructor", "IndexMillisecond.from_difference()": "Constructor", "IndexMillisecond.from_intersection()": "Constructor", "IndexMillisecond.from_labels()": "Constructor", "IndexMillisecond.from_pandas()": "Constructor", "IndexMillisecond.from_union()": "Constructor", "IndexMillisecond.to_html()": "Exporter", "IndexMillisecond.to_html_datatables()": "Exporter", "IndexMillisecond.to_pandas()": "Exporter", "IndexMillisecond.to_series()": "Exporter", "IndexMillisecond.to_visidata()": "Exporter", "IndexMillisecond.STATIC": "Attribute", "IndexMillisecond.depth": "Attribute", "IndexMillisecond.dtype": "Attribute", "IndexMillisecond.index_types": "Attribute", "IndexMillisecond.memory": "Attribute", "IndexMillisecond.mloc": "Attribute", "IndexMillisecond.name": "Attribute", "IndexMillisecond.names": "Attribute", "IndexMillisecond.nbytes": "Attribute", "IndexMillisecond.ndim": "Attribute", "IndexMillisecond.positions": "Attribute", "IndexMillisecond.shape": "Attribute", "IndexMillisecond.size": "Attribute", "IndexMillisecond.__array__()": "Method", "IndexMillisecond.__array_ufunc__()": "Method", "IndexMillisecond.__bool__()": "Method", "IndexMillisecond.__copy__()": "Method", "IndexMillisecond.__deepcopy__()": "Method", "IndexMillisecond.__len__()": "Method", "IndexMillisecond.all()": "Method", "IndexMillisecond.any()": "Method", "IndexMillisecond.astype()": "Method", "IndexMillisecond.copy()": "Method", "IndexMillisecond.cumprod()": "Method", "IndexMillisecond.cumsum()": "Method", "IndexMillisecond.difference()": "Method", "IndexMillisecond.dropfalsy()": "Method", "IndexMillisecond.dropna()": "Method", "IndexMillisecond.equals()": "Method", "IndexMillisecond.fillfalsy()": "Method", "IndexMillisecond.fillna()": "Method", "IndexMillisecond.head()": "Method", "IndexMillisecond.iloc_searchsorted()": "Method", "IndexMillisecond.intersection()": "Method", "IndexMillisecond.is_sorted()": "Method", "IndexMillisecond.isfalsy()": "Method", "IndexMillisecond.isin()": "Method", "IndexMillisecond.isna()": "Method", "IndexMillisecond.label_widths_at_depth()": "Method", "IndexMillisecond.level_add()": "Method", "IndexMillisecond.loc_searchsorted()": "Method", "IndexMillisecond.loc_to_iloc()": "Method", "IndexMillisecond.max()": "Method", "IndexMillisecond.mean()": "Method", "IndexMillisecond.median()": "Method", "IndexMillisecond.min()": "Method", "IndexMillisecond.notfalsy()": "Method", "IndexMillisecond.notna()": "Method", "IndexMillisecond.prod()": "Method", "IndexMillisecond.relabel()": "Method", "IndexMillisecond.rename()": "Method", "IndexMillisecond.roll()": "Method", "IndexMillisecond.sample()": "Method", "IndexMillisecond.sort()": "Method", "IndexMillisecond.std()": "Method", "IndexMillisecond.sum()": "Method", "IndexMillisecond.tail()": "Method", "IndexMillisecond.union()": "Method", "IndexMillisecond.unique()": "Method", "IndexMillisecond.values_at_depth()": "Method", "IndexMillisecond.var()": "Method", "IndexMillisecond.__contains__()": "Dictionary-Like", "IndexMillisecond.__iter__()": "Dictionary-Like", "IndexMillisecond.__reversed__()": "Dictionary-Like", "IndexMillisecond.values": "Dictionary-Like", "IndexMillisecond.interface": "Display", "IndexMillisecond.__repr__()": "Display", "IndexMillisecond.__str__()": "Display", "IndexMillisecond.display()": "Display", "IndexMillisecond.display_tall()": "Display", "IndexMillisecond.display_wide()": "Display", "IndexMillisecond.drop.iloc[]": "Selector", "IndexMillisecond.drop.loc[]": "Selector", "IndexMillisecond.[]": "Selector", "IndexMillisecond.iloc[]": "Selector", "IndexMillisecond.loc[]": "Selector", "IndexMillisecond.iter_label()": "Iterator", "IndexMillisecond.iter_label().apply()": "Iterator", "IndexMillisecond.iter_label().apply_iter()": "Iterator", "IndexMillisecond.iter_label().apply_iter_items()": "Iterator", "IndexMillisecond.iter_label().apply_pool()": "Iterator", "IndexMillisecond.__add__()": "Operator Binary", "IndexMillisecond.__and__()": "Operator Binary", "IndexMillisecond.__eq__()": "Operator Binary", "IndexMillisecond.__floordiv__()": "Operator Binary", "IndexMillisecond.__ge__()": "Operator Binary", "IndexMillisecond.__gt__()": "Operator Binary", "IndexMillisecond.__le__()": "Operator Binary", "IndexMillisecond.__lt__()": "Operator Binary", "IndexMillisecond.__matmul__()": "Operator Binary", "IndexMillisecond.__mod__()": "Operator Binary", "IndexMillisecond.__mul__()": "Operator Binary", "IndexMillisecond.__ne__()": "Operator Binary", "IndexMillisecond.__or__()": "Operator Binary", "IndexMillisecond.__pow__()": "Operator Binary", "IndexMillisecond.__radd__()": "Operator Binary", "IndexMillisecond.__rfloordiv__()": "Operator Binary", "IndexMillisecond.__rmatmul__()": "Operator Binary", "IndexMillisecond.__rmul__()": "Operator Binary", "IndexMillisecond.__rshift__()": "Operator Binary", "IndexMillisecond.__rsub__()": "Operator Binary", "IndexMillisecond.__rtruediv__()": "Operator Binary", "IndexMillisecond.__sub__()": "Operator Binary", "IndexMillisecond.__truediv__()": "Operator Binary", "IndexMillisecond.__xor__()": "Operator Binary", "IndexMillisecond.__abs__()": "Operator Unary", "IndexMillisecond.__invert__()": "Operator Unary", "IndexMillisecond.__neg__()": "Operator Unary", "IndexMillisecond.__pos__()": "Operator Unary", "IndexMillisecond.via_values.apply()": "Accessor Values", "IndexMillisecond.via_values.__array_ufunc__()": "Accessor Values", "IndexMillisecond.via_values.__call__()": "Accessor Values", "IndexMillisecond.via_dt.__call__()": "Accessor Datetime", "IndexMillisecond.via_dt.year": "Accessor Datetime", "IndexMillisecond.via_dt.year_month": "Accessor Datetime", "IndexMillisecond.via_dt.year_quarter": "Accessor Datetime", "IndexMillisecond.via_dt.month": "Accessor Datetime", "IndexMillisecond.via_dt.day": "Accessor Datetime", "IndexMillisecond.via_dt.hour": "Accessor Datetime", "IndexMillisecond.via_dt.minute": "Accessor Datetime", "IndexMillisecond.via_dt.second": "Accessor Datetime", "IndexMillisecond.via_dt.weekday()": "Accessor Datetime", "IndexMillisecond.via_dt.quarter()": "Accessor Datetime", "IndexMillisecond.via_dt.is_month_end()": "Accessor Datetime", "IndexMillisecond.via_dt.is_month_start()": "Accessor Datetime", "IndexMillisecond.via_dt.is_year_end()": "Accessor Datetime", "IndexMillisecond.via_dt.is_year_start()": "Accessor Datetime", "IndexMillisecond.via_dt.is_quarter_end()": "Accessor Datetime", "IndexMillisecond.via_dt.is_quarter_start()": "Accessor Datetime", "IndexMillisecond.via_dt.timetuple()": "Accessor Datetime", "IndexMillisecond.via_dt.isoformat()": "Accessor Datetime", "IndexMillisecond.via_dt.fromisoformat()": "Accessor Datetime", "IndexMillisecond.via_dt.strftime()": "Accessor Datetime", "IndexMillisecond.via_dt.strptime()": "Accessor Datetime", "IndexMillisecond.via_dt.strpdate()": "Accessor Datetime", "IndexMillisecond.via_str.__getitem__()": "Accessor String", "IndexMillisecond.via_str.capitalize()": "Accessor String", "IndexMillisecond.via_str.center()": "Accessor String", "IndexMillisecond.via_str.contains()": "Accessor String", "IndexMillisecond.via_str.count()": "Accessor String", "IndexMillisecond.via_str.decode()": "Accessor String", "IndexMillisecond.via_str.encode()": "Accessor String", "IndexMillisecond.via_str.endswith()": "Accessor String", "IndexMillisecond.via_str.find()": "Accessor String", "IndexMillisecond.via_str.format()": "Accessor String", "IndexMillisecond.via_str.index()": "Accessor String", "IndexMillisecond.via_str.isalnum()": "Accessor String", "IndexMillisecond.via_str.isalpha()": "Accessor String", "IndexMillisecond.via_str.isdecimal()": "Accessor String", "IndexMillisecond.via_str.isdigit()": "Accessor String", "IndexMillisecond.via_str.islower()": "Accessor String", "IndexMillisecond.via_str.isnumeric()": "Accessor String", "IndexMillisecond.via_str.isspace()": "Accessor String", "IndexMillisecond.via_str.istitle()": "Accessor String", "IndexMillisecond.via_str.isupper()": "Accessor String", "IndexMillisecond.via_str.ljust()": "Accessor String", "IndexMillisecond.via_str.len()": "Accessor String", "IndexMillisecond.via_str.lower()": "Accessor String", "IndexMillisecond.via_str.lstrip()": "Accessor String", "IndexMillisecond.via_str.partition()": "Accessor String", "IndexMillisecond.via_str.replace()": "Accessor String", "IndexMillisecond.via_str.rfind()": "Accessor String", "IndexMillisecond.via_str.rindex()": "Accessor String", "IndexMillisecond.via_str.rjust()": "Accessor String", "IndexMillisecond.via_str.rpartition()": "Accessor String", "IndexMillisecond.via_str.rsplit()": "Accessor String", "IndexMillisecond.via_str.rstrip()": "Accessor String", "IndexMillisecond.via_str.split()": "Accessor String", "IndexMillisecond.via_str.startswith()": "Accessor String", "IndexMillisecond.via_str.strip()": "Accessor String", "IndexMillisecond.via_str.swapcase()": "Accessor String", "IndexMillisecond.via_str.title()": "Accessor String", "IndexMillisecond.via_str.upper()": "Accessor String", "IndexMillisecond.via_str.zfill()": "Accessor String", "IndexMillisecond.via_re().search()": "Accessor Regular Expression", "IndexMillisecond.via_re().match()": "Accessor Regular Expression", "IndexMillisecond.via_re().fullmatch()": "Accessor Regular Expression", "IndexMillisecond.via_re().split()": "Accessor Regular Expression", "IndexMillisecond.via_re().findall()": "Accessor Regular Expression", "IndexMillisecond.via_re().sub()": "Accessor Regular Expression", "IndexMillisecond.via_re().subn()": "Accessor Regular Expression", "IndexMillisecond.via_hashlib().to_bytes()": "Accessor Hashlib", "IndexMillisecond.via_hashlib().md5()": "Accessor Hashlib", "IndexMillisecond.via_hashlib().sha256()": "Accessor Hashlib", "IndexMillisecond.via_hashlib().sha512()": "Accessor Hashlib", "IndexMillisecond.via_hashlib().sha3_256()": "Accessor Hashlib", "IndexMillisecond.via_hashlib().sha3_512()": "Accessor Hashlib", "IndexMillisecond.via_hashlib().shake_128()": "Accessor Hashlib", "IndexMillisecond.via_hashlib().shake_256()": "Accessor Hashlib", "IndexMillisecond.via_hashlib().blake2b()": "Accessor Hashlib", "IndexMillisecond.via_hashlib().blake2s()": "Accessor Hashlib", "IndexMillisecond.via_type_clinic.to_hint()": "Accessor Type Clinic", "IndexMillisecond.via_type_clinic.check()": "Accessor Type Clinic", "IndexMillisecond.via_type_clinic.warn()": "Accessor Type Clinic", "IndexMillisecond.via_type_clinic.__call__()": "Accessor Type Clinic", "IndexMillisecond.via_type_clinic.__repr__()": "Accessor Type Clinic", "IndexMillisecondGO.__init__()": "Constructor", "IndexMillisecondGO.from_difference()": "Constructor", "IndexMillisecondGO.from_intersection()": "Constructor", "IndexMillisecondGO.from_labels()": "Constructor", "IndexMillisecondGO.from_pandas()": "Constructor", "IndexMillisecondGO.from_union()": "Constructor", "IndexMillisecondGO.to_html()": "Exporter", "IndexMillisecondGO.to_html_datatables()": "Exporter", "IndexMillisecondGO.to_pandas()": "Exporter", "IndexMillisecondGO.to_series()": "Exporter", "IndexMillisecondGO.to_visidata()": "Exporter", "IndexMillisecondGO.STATIC": "Attribute", "IndexMillisecondGO.depth": "Attribute", "IndexMillisecondGO.dtype": "Attribute", "IndexMillisecondGO.index_types": "Attribute", "IndexMillisecondGO.memory": "Attribute", "IndexMillisecondGO.mloc": "Attribute", "IndexMillisecondGO.name": "Attribute", "IndexMillisecondGO.names": "Attribute", "IndexMillisecondGO.nbytes": "Attribute", "IndexMillisecondGO.ndim": "Attribute", "IndexMillisecondGO.positions": "Attribute", "IndexMillisecondGO.shape": "Attribute", "IndexMillisecondGO.size": "Attribute", "IndexMillisecondGO.__array__()": "Method", "IndexMillisecondGO.__array_ufunc__()": "Method", "IndexMillisecondGO.__bool__()": "Method", "IndexMillisecondGO.__copy__()": "Method", "IndexMillisecondGO.__deepcopy__()": "Method", "IndexMillisecondGO.__len__()": "Method", "IndexMillisecondGO.all()": "Method", "IndexMillisecondGO.any()": "Method", "IndexMillisecondGO.append()": "Method", "IndexMillisecondGO.astype()": "Method", "IndexMillisecondGO.copy()": "Method", "IndexMillisecondGO.cumprod()": "Method", "IndexMillisecondGO.cumsum()": "Method", "IndexMillisecondGO.difference()": "Method", "IndexMillisecondGO.dropfalsy()": "Method", "IndexMillisecondGO.dropna()": "Method", "IndexMillisecondGO.equals()": "Method", "IndexMillisecondGO.extend()": "Method", "IndexMillisecondGO.fillfalsy()": "Method", "IndexMillisecondGO.fillna()": "Method", "IndexMillisecondGO.head()": "Method", "IndexMillisecondGO.iloc_searchsorted()": "Method", "IndexMillisecondGO.intersection()": "Method", "IndexMillisecondGO.is_sorted()": "Method", "IndexMillisecondGO.isfalsy()": "Method", "IndexMillisecondGO.isin()": "Method", "IndexMillisecondGO.isna()": "Method", "IndexMillisecondGO.label_widths_at_depth()": "Method", "IndexMillisecondGO.level_add()": "Method", "IndexMillisecondGO.loc_searchsorted()": "Method", "IndexMillisecondGO.loc_to_iloc()": "Method", "IndexMillisecondGO.max()": "Method", "IndexMillisecondGO.mean()": "Method", "IndexMillisecondGO.median()": "Method", "IndexMillisecondGO.min()": "Method", "IndexMillisecondGO.notfalsy()": "Method", "IndexMillisecondGO.notna()": "Method", "IndexMillisecondGO.prod()": "Method", "IndexMillisecondGO.relabel()": "Method", "IndexMillisecondGO.rename()": "Method", "IndexMillisecondGO.roll()": "Method", "IndexMillisecondGO.sample()": "Method", "IndexMillisecondGO.sort()": "Method", "IndexMillisecondGO.std()": "Method", "IndexMillisecondGO.sum()": "Method", "IndexMillisecondGO.tail()": "Method", "IndexMillisecondGO.union()": "Method", "IndexMillisecondGO.unique()": "Method", "IndexMillisecondGO.values_at_depth()": "Method", "IndexMillisecondGO.var()": "Method", "IndexMillisecondGO.__contains__()": "Dictionary-Like", "IndexMillisecondGO.__iter__()": "Dictionary-Like", "IndexMillisecondGO.__reversed__()": "Dictionary-Like", "IndexMillisecondGO.values": "Dictionary-Like", "IndexMillisecondGO.interface": "Display", "IndexMillisecondGO.__repr__()": "Display", "IndexMillisecondGO.__str__()": "Display", "IndexMillisecondGO.display()": "Display", "IndexMillisecondGO.display_tall()": "Display", "IndexMillisecondGO.display_wide()": "Display", "IndexMillisecondGO.drop.iloc[]": "Selector", "IndexMillisecondGO.drop.loc[]": "Selector", "IndexMillisecondGO.[]": "Selector", "IndexMillisecondGO.iloc[]": "Selector", "IndexMillisecondGO.loc[]": "Selector", "IndexMillisecondGO.iter_label()": "Iterator", "IndexMillisecondGO.iter_label().apply()": "Iterator", "IndexMillisecondGO.iter_label().apply_iter()": "Iterator", "IndexMillisecondGO.iter_label().apply_iter_items()": "Iterator", "IndexMillisecondGO.iter_label().apply_pool()": "Iterator", "IndexMillisecondGO.__add__()": "Operator Binary", "IndexMillisecondGO.__and__()": "Operator Binary", "IndexMillisecondGO.__eq__()": "Operator Binary", "IndexMillisecondGO.__floordiv__()": "Operator Binary", "IndexMillisecondGO.__ge__()": "Operator Binary", "IndexMillisecondGO.__gt__()": "Operator Binary", "IndexMillisecondGO.__le__()": "Operator Binary", "IndexMillisecondGO.__lt__()": "Operator Binary", "IndexMillisecondGO.__matmul__()": "Operator Binary", "IndexMillisecondGO.__mod__()": "Operator Binary", "IndexMillisecondGO.__mul__()": "Operator Binary", "IndexMillisecondGO.__ne__()": "Operator Binary", "IndexMillisecondGO.__or__()": "Operator Binary", "IndexMillisecondGO.__pow__()": "Operator Binary", "IndexMillisecondGO.__radd__()": "Operator Binary", "IndexMillisecondGO.__rfloordiv__()": "Operator Binary", "IndexMillisecondGO.__rmatmul__()": "Operator Binary", "IndexMillisecondGO.__rmul__()": "Operator Binary", "IndexMillisecondGO.__rshift__()": "Operator Binary", "IndexMillisecondGO.__rsub__()": "Operator Binary", "IndexMillisecondGO.__rtruediv__()": "Operator Binary", "IndexMillisecondGO.__sub__()": "Operator Binary", "IndexMillisecondGO.__truediv__()": "Operator Binary", "IndexMillisecondGO.__xor__()": "Operator Binary", "IndexMillisecondGO.__abs__()": "Operator Unary", "IndexMillisecondGO.__invert__()": "Operator Unary", "IndexMillisecondGO.__neg__()": "Operator Unary", "IndexMillisecondGO.__pos__()": "Operator Unary", "IndexMillisecondGO.via_values.apply()": "Accessor Values", "IndexMillisecondGO.via_values.__array_ufunc__()": "Accessor Values", "IndexMillisecondGO.via_values.__call__()": "Accessor Values", "IndexMillisecondGO.via_dt.__call__()": "Accessor Datetime", "IndexMillisecondGO.via_dt.year": "Accessor Datetime", "IndexMillisecondGO.via_dt.year_month": "Accessor Datetime", "IndexMillisecondGO.via_dt.year_quarter": "Accessor Datetime", "IndexMillisecondGO.via_dt.month": "Accessor Datetime", "IndexMillisecondGO.via_dt.day": "Accessor Datetime", "IndexMillisecondGO.via_dt.hour": "Accessor Datetime", "IndexMillisecondGO.via_dt.minute": "Accessor Datetime", "IndexMillisecondGO.via_dt.second": "Accessor Datetime", "IndexMillisecondGO.via_dt.weekday()": "Accessor Datetime", "IndexMillisecondGO.via_dt.quarter()": "Accessor Datetime", "IndexMillisecondGO.via_dt.is_month_end()": "Accessor Datetime", "IndexMillisecondGO.via_dt.is_month_start()": "Accessor Datetime", "IndexMillisecondGO.via_dt.is_year_end()": "Accessor Datetime", "IndexMillisecondGO.via_dt.is_year_start()": "Accessor Datetime", "IndexMillisecondGO.via_dt.is_quarter_end()": "Accessor Datetime", "IndexMillisecondGO.via_dt.is_quarter_start()": "Accessor Datetime", "IndexMillisecondGO.via_dt.timetuple()": "Accessor Datetime", "IndexMillisecondGO.via_dt.isoformat()": "Accessor Datetime", "IndexMillisecondGO.via_dt.fromisoformat()": "Accessor Datetime", "IndexMillisecondGO.via_dt.strftime()": "Accessor Datetime", "IndexMillisecondGO.via_dt.strptime()": "Accessor Datetime", "IndexMillisecondGO.via_dt.strpdate()": "Accessor Datetime", "IndexMillisecondGO.via_str.__getitem__()": "Accessor String", "IndexMillisecondGO.via_str.capitalize()": "Accessor String", "IndexMillisecondGO.via_str.center()": "Accessor String", "IndexMillisecondGO.via_str.contains()": "Accessor String", "IndexMillisecondGO.via_str.count()": "Accessor String", "IndexMillisecondGO.via_str.decode()": "Accessor String", "IndexMillisecondGO.via_str.encode()": "Accessor String", "IndexMillisecondGO.via_str.endswith()": "Accessor String", "IndexMillisecondGO.via_str.find()": "Accessor String", "IndexMillisecondGO.via_str.format()": "Accessor String", "IndexMillisecondGO.via_str.index()": "Accessor String", "IndexMillisecondGO.via_str.isalnum()": "Accessor String", "IndexMillisecondGO.via_str.isalpha()": "Accessor String", "IndexMillisecondGO.via_str.isdecimal()": "Accessor String", "IndexMillisecondGO.via_str.isdigit()": "Accessor String", "IndexMillisecondGO.via_str.islower()": "Accessor String", "IndexMillisecondGO.via_str.isnumeric()": "Accessor String", "IndexMillisecondGO.via_str.isspace()": "Accessor String", "IndexMillisecondGO.via_str.istitle()": "Accessor String", "IndexMillisecondGO.via_str.isupper()": "Accessor String", "IndexMillisecondGO.via_str.ljust()": "Accessor String", "IndexMillisecondGO.via_str.len()": "Accessor String", "IndexMillisecondGO.via_str.lower()": "Accessor String", "IndexMillisecondGO.via_str.lstrip()": "Accessor String", "IndexMillisecondGO.via_str.partition()": "Accessor String", "IndexMillisecondGO.via_str.replace()": "Accessor String", "IndexMillisecondGO.via_str.rfind()": "Accessor String", "IndexMillisecondGO.via_str.rindex()": "Accessor String", "IndexMillisecondGO.via_str.rjust()": "Accessor String", "IndexMillisecondGO.via_str.rpartition()": "Accessor String", "IndexMillisecondGO.via_str.rsplit()": "Accessor String", "IndexMillisecondGO.via_str.rstrip()": "Accessor String", "IndexMillisecondGO.via_str.split()": "Accessor String", "IndexMillisecondGO.via_str.startswith()": "Accessor String", "IndexMillisecondGO.via_str.strip()": "Accessor String", "IndexMillisecondGO.via_str.swapcase()": "Accessor String", "IndexMillisecondGO.via_str.title()": "Accessor String", "IndexMillisecondGO.via_str.upper()": "Accessor String", "IndexMillisecondGO.via_str.zfill()": "Accessor String", "IndexMillisecondGO.via_re().search()": "Accessor Regular Expression", "IndexMillisecondGO.via_re().match()": "Accessor Regular Expression", "IndexMillisecondGO.via_re().fullmatch()": "Accessor Regular Expression", "IndexMillisecondGO.via_re().split()": "Accessor Regular Expression", "IndexMillisecondGO.via_re().findall()": "Accessor Regular Expression", "IndexMillisecondGO.via_re().sub()": "Accessor Regular Expression", "IndexMillisecondGO.via_re().subn()": "Accessor Regular Expression", "IndexMillisecondGO.via_hashlib().to_bytes()": "Accessor Hashlib", "IndexMillisecondGO.via_hashlib().md5()": "Accessor Hashlib", "IndexMillisecondGO.via_hashlib().sha256()": "Accessor Hashlib", "IndexMillisecondGO.via_hashlib().sha512()": "Accessor Hashlib", "IndexMillisecondGO.via_hashlib().sha3_256()": "Accessor Hashlib", "IndexMillisecondGO.via_hashlib().sha3_512()": "Accessor Hashlib", "IndexMillisecondGO.via_hashlib().shake_128()": "Accessor Hashlib", "IndexMillisecondGO.via_hashlib().shake_256()": "Accessor Hashlib", "IndexMillisecondGO.via_hashlib().blake2b()": "Accessor Hashlib", "IndexMillisecondGO.via_hashlib().blake2s()": "Accessor Hashlib", "IndexMillisecondGO.via_type_clinic.to_hint()": "Accessor Type Clinic", "IndexMillisecondGO.via_type_clinic.check()": "Accessor Type Clinic", "IndexMillisecondGO.via_type_clinic.warn()": "Accessor Type Clinic", "IndexMillisecondGO.via_type_clinic.__call__()": "Accessor Type Clinic", "IndexMillisecondGO.via_type_clinic.__repr__()": "Accessor Type Clinic", "IndexMicrosecond.__init__()": "Constructor", "IndexMicrosecond.from_difference()": "Constructor", "IndexMicrosecond.from_intersection()": "Constructor", "IndexMicrosecond.from_labels()": "Constructor", "IndexMicrosecond.from_pandas()": "Constructor", "IndexMicrosecond.from_union()": "Constructor", "IndexMicrosecond.to_html()": "Exporter", "IndexMicrosecond.to_html_datatables()": "Exporter", "IndexMicrosecond.to_pandas()": "Exporter", "IndexMicrosecond.to_series()": "Exporter", "IndexMicrosecond.to_visidata()": "Exporter", "IndexMicrosecond.STATIC": "Attribute", "IndexMicrosecond.depth": "Attribute", "IndexMicrosecond.dtype": "Attribute", "IndexMicrosecond.index_types": "Attribute", "IndexMicrosecond.memory": "Attribute", "IndexMicrosecond.mloc": "Attribute", "IndexMicrosecond.name": "Attribute", "IndexMicrosecond.names": "Attribute", "IndexMicrosecond.nbytes": "Attribute", "IndexMicrosecond.ndim": "Attribute", "IndexMicrosecond.positions": "Attribute", "IndexMicrosecond.shape": "Attribute", "IndexMicrosecond.size": "Attribute", "IndexMicrosecond.__array__()": "Method", "IndexMicrosecond.__array_ufunc__()": "Method", "IndexMicrosecond.__bool__()": "Method", "IndexMicrosecond.__copy__()": "Method", "IndexMicrosecond.__deepcopy__()": "Method", "IndexMicrosecond.__len__()": "Method", "IndexMicrosecond.all()": "Method", "IndexMicrosecond.any()": "Method", "IndexMicrosecond.astype()": "Method", "IndexMicrosecond.copy()": "Method", "IndexMicrosecond.cumprod()": "Method", "IndexMicrosecond.cumsum()": "Method", "IndexMicrosecond.difference()": "Method", "IndexMicrosecond.dropfalsy()": "Method", "IndexMicrosecond.dropna()": "Method", "IndexMicrosecond.equals()": "Method", "IndexMicrosecond.fillfalsy()": "Method", "IndexMicrosecond.fillna()": "Method", "IndexMicrosecond.head()": "Method", "IndexMicrosecond.iloc_searchsorted()": "Method", "IndexMicrosecond.intersection()": "Method", "IndexMicrosecond.is_sorted()": "Method", "IndexMicrosecond.isfalsy()": "Method", "IndexMicrosecond.isin()": "Method", "IndexMicrosecond.isna()": "Method", "IndexMicrosecond.label_widths_at_depth()": "Method", "IndexMicrosecond.level_add()": "Method", "IndexMicrosecond.loc_searchsorted()": "Method", "IndexMicrosecond.loc_to_iloc()": "Method", "IndexMicrosecond.max()": "Method", "IndexMicrosecond.mean()": "Method", "IndexMicrosecond.median()": "Method", "IndexMicrosecond.min()": "Method", "IndexMicrosecond.notfalsy()": "Method", "IndexMicrosecond.notna()": "Method", "IndexMicrosecond.prod()": "Method", "IndexMicrosecond.relabel()": "Method", "IndexMicrosecond.rename()": "Method", "IndexMicrosecond.roll()": "Method", "IndexMicrosecond.sample()": "Method", "IndexMicrosecond.sort()": "Method", "IndexMicrosecond.std()": "Method", "IndexMicrosecond.sum()": "Method", "IndexMicrosecond.tail()": "Method", "IndexMicrosecond.union()": "Method", "IndexMicrosecond.unique()": "Method", "IndexMicrosecond.values_at_depth()": "Method", "IndexMicrosecond.var()": "Method", "IndexMicrosecond.__contains__()": "Dictionary-Like", "IndexMicrosecond.__iter__()": "Dictionary-Like", "IndexMicrosecond.__reversed__()": "Dictionary-Like", "IndexMicrosecond.values": "Dictionary-Like", "IndexMicrosecond.interface": "Display", "IndexMicrosecond.__repr__()": "Display", "IndexMicrosecond.__str__()": "Display", "IndexMicrosecond.display()": "Display", "IndexMicrosecond.display_tall()": "Display", "IndexMicrosecond.display_wide()": "Display", "IndexMicrosecond.drop.iloc[]": "Selector", "IndexMicrosecond.drop.loc[]": "Selector", "IndexMicrosecond.[]": "Selector", "IndexMicrosecond.iloc[]": "Selector", "IndexMicrosecond.loc[]": "Selector", "IndexMicrosecond.iter_label()": "Iterator", "IndexMicrosecond.iter_label().apply()": "Iterator", "IndexMicrosecond.iter_label().apply_iter()": "Iterator", "IndexMicrosecond.iter_label().apply_iter_items()": "Iterator", "IndexMicrosecond.iter_label().apply_pool()": "Iterator", "IndexMicrosecond.__add__()": "Operator Binary", "IndexMicrosecond.__and__()": "Operator Binary", "IndexMicrosecond.__eq__()": "Operator Binary", "IndexMicrosecond.__floordiv__()": "Operator Binary", "IndexMicrosecond.__ge__()": "Operator Binary", "IndexMicrosecond.__gt__()": "Operator Binary", "IndexMicrosecond.__le__()": "Operator Binary", "IndexMicrosecond.__lt__()": "Operator Binary", "IndexMicrosecond.__matmul__()": "Operator Binary", "IndexMicrosecond.__mod__()": "Operator Binary", "IndexMicrosecond.__mul__()": "Operator Binary", "IndexMicrosecond.__ne__()": "Operator Binary", "IndexMicrosecond.__or__()": "Operator Binary", "IndexMicrosecond.__pow__()": "Operator Binary", "IndexMicrosecond.__radd__()": "Operator Binary", "IndexMicrosecond.__rfloordiv__()": "Operator Binary", "IndexMicrosecond.__rmatmul__()": "Operator Binary", "IndexMicrosecond.__rmul__()": "Operator Binary", "IndexMicrosecond.__rshift__()": "Operator Binary", "IndexMicrosecond.__rsub__()": "Operator Binary", "IndexMicrosecond.__rtruediv__()": "Operator Binary", "IndexMicrosecond.__sub__()": "Operator Binary", "IndexMicrosecond.__truediv__()": "Operator Binary", "IndexMicrosecond.__xor__()": "Operator Binary", "IndexMicrosecond.__abs__()": "Operator Unary", "IndexMicrosecond.__invert__()": "Operator Unary", "IndexMicrosecond.__neg__()": "Operator Unary", "IndexMicrosecond.__pos__()": "Operator Unary", "IndexMicrosecond.via_values.apply()": "Accessor Values", "IndexMicrosecond.via_values.__array_ufunc__()": "Accessor Values", "IndexMicrosecond.via_values.__call__()": "Accessor Values", "IndexMicrosecond.via_dt.__call__()": "Accessor Datetime", "IndexMicrosecond.via_dt.year": "Accessor Datetime", "IndexMicrosecond.via_dt.year_month": "Accessor Datetime", "IndexMicrosecond.via_dt.year_quarter": "Accessor Datetime", "IndexMicrosecond.via_dt.month": "Accessor Datetime", "IndexMicrosecond.via_dt.day": "Accessor Datetime", "IndexMicrosecond.via_dt.hour": "Accessor Datetime", "IndexMicrosecond.via_dt.minute": "Accessor Datetime", "IndexMicrosecond.via_dt.second": "Accessor Datetime", "IndexMicrosecond.via_dt.weekday()": "Accessor Datetime", "IndexMicrosecond.via_dt.quarter()": "Accessor Datetime", "IndexMicrosecond.via_dt.is_month_end()": "Accessor Datetime", "IndexMicrosecond.via_dt.is_month_start()": "Accessor Datetime", "IndexMicrosecond.via_dt.is_year_end()": "Accessor Datetime", "IndexMicrosecond.via_dt.is_year_start()": "Accessor Datetime", "IndexMicrosecond.via_dt.is_quarter_end()": "Accessor Datetime", "IndexMicrosecond.via_dt.is_quarter_start()": "Accessor Datetime", "IndexMicrosecond.via_dt.timetuple()": "Accessor Datetime", "IndexMicrosecond.via_dt.isoformat()": "Accessor Datetime", "IndexMicrosecond.via_dt.fromisoformat()": "Accessor Datetime", "IndexMicrosecond.via_dt.strftime()": "Accessor Datetime", "IndexMicrosecond.via_dt.strptime()": "Accessor Datetime", "IndexMicrosecond.via_dt.strpdate()": "Accessor Datetime", "IndexMicrosecond.via_str.__getitem__()": "Accessor String", "IndexMicrosecond.via_str.capitalize()": "Accessor String", "IndexMicrosecond.via_str.center()": "Accessor String", "IndexMicrosecond.via_str.contains()": "Accessor String", "IndexMicrosecond.via_str.count()": "Accessor String", "IndexMicrosecond.via_str.decode()": "Accessor String", "IndexMicrosecond.via_str.encode()": "Accessor String", "IndexMicrosecond.via_str.endswith()": "Accessor String", "IndexMicrosecond.via_str.find()": "Accessor String", "IndexMicrosecond.via_str.format()": "Accessor String", "IndexMicrosecond.via_str.index()": "Accessor String", "IndexMicrosecond.via_str.isalnum()": "Accessor String", "IndexMicrosecond.via_str.isalpha()": "Accessor String", "IndexMicrosecond.via_str.isdecimal()": "Accessor String", "IndexMicrosecond.via_str.isdigit()": "Accessor String", "IndexMicrosecond.via_str.islower()": "Accessor String", "IndexMicrosecond.via_str.isnumeric()": "Accessor String", "IndexMicrosecond.via_str.isspace()": "Accessor String", "IndexMicrosecond.via_str.istitle()": "Accessor String", "IndexMicrosecond.via_str.isupper()": "Accessor String", "IndexMicrosecond.via_str.ljust()": "Accessor String", "IndexMicrosecond.via_str.len()": "Accessor String", "IndexMicrosecond.via_str.lower()": "Accessor String", "IndexMicrosecond.via_str.lstrip()": "Accessor String", "IndexMicrosecond.via_str.partition()": "Accessor String", "IndexMicrosecond.via_str.replace()": "Accessor String", "IndexMicrosecond.via_str.rfind()": "Accessor String", "IndexMicrosecond.via_str.rindex()": "Accessor String", "IndexMicrosecond.via_str.rjust()": "Accessor String", "IndexMicrosecond.via_str.rpartition()": "Accessor String", "IndexMicrosecond.via_str.rsplit()": "Accessor String", "IndexMicrosecond.via_str.rstrip()": "Accessor String", "IndexMicrosecond.via_str.split()": "Accessor String", "IndexMicrosecond.via_str.startswith()": "Accessor String", "IndexMicrosecond.via_str.strip()": "Accessor String", "IndexMicrosecond.via_str.swapcase()": "Accessor String", "IndexMicrosecond.via_str.title()": "Accessor String", "IndexMicrosecond.via_str.upper()": "Accessor String", "IndexMicrosecond.via_str.zfill()": "Accessor String", "IndexMicrosecond.via_re().search()": "Accessor Regular Expression", "IndexMicrosecond.via_re().match()": "Accessor Regular Expression", "IndexMicrosecond.via_re().fullmatch()": "Accessor Regular Expression", "IndexMicrosecond.via_re().split()": "Accessor Regular Expression", "IndexMicrosecond.via_re().findall()": "Accessor Regular Expression", "IndexMicrosecond.via_re().sub()": "Accessor Regular Expression", "IndexMicrosecond.via_re().subn()": "Accessor Regular Expression", "IndexMicrosecond.via_hashlib().to_bytes()": "Accessor Hashlib", "IndexMicrosecond.via_hashlib().md5()": "Accessor Hashlib", "IndexMicrosecond.via_hashlib().sha256()": "Accessor Hashlib", "IndexMicrosecond.via_hashlib().sha512()": "Accessor Hashlib", "IndexMicrosecond.via_hashlib().sha3_256()": "Accessor Hashlib", "IndexMicrosecond.via_hashlib().sha3_512()": "Accessor Hashlib", "IndexMicrosecond.via_hashlib().shake_128()": "Accessor Hashlib", "IndexMicrosecond.via_hashlib().shake_256()": "Accessor Hashlib", "IndexMicrosecond.via_hashlib().blake2b()": "Accessor Hashlib", "IndexMicrosecond.via_hashlib().blake2s()": "Accessor Hashlib", "IndexMicrosecond.via_type_clinic.to_hint()": "Accessor Type Clinic", "IndexMicrosecond.via_type_clinic.check()": "Accessor Type Clinic", "IndexMicrosecond.via_type_clinic.warn()": "Accessor Type Clinic", "IndexMicrosecond.via_type_clinic.__call__()": "Accessor Type Clinic", "IndexMicrosecond.via_type_clinic.__repr__()": "Accessor Type Clinic", "IndexMicrosecondGO.__init__()": "Constructor", "IndexMicrosecondGO.from_difference()": "Constructor", "IndexMicrosecondGO.from_intersection()": "Constructor", "IndexMicrosecondGO.from_labels()": "Constructor", "IndexMicrosecondGO.from_pandas()": "Constructor", "IndexMicrosecondGO.from_union()": "Constructor", "IndexMicrosecondGO.to_html()": "Exporter", "IndexMicrosecondGO.to_html_datatables()": "Exporter", "IndexMicrosecondGO.to_pandas()": "Exporter", "IndexMicrosecondGO.to_series()": "Exporter", "IndexMicrosecondGO.to_visidata()": "Exporter", "IndexMicrosecondGO.STATIC": "Attribute", "IndexMicrosecondGO.depth": "Attribute", "IndexMicrosecondGO.dtype": "Attribute", "IndexMicrosecondGO.index_types": "Attribute", "IndexMicrosecondGO.memory": "Attribute", "IndexMicrosecondGO.mloc": "Attribute", "IndexMicrosecondGO.name": "Attribute", "IndexMicrosecondGO.names": "Attribute", "IndexMicrosecondGO.nbytes": "Attribute", "IndexMicrosecondGO.ndim": "Attribute", "IndexMicrosecondGO.positions": "Attribute", "IndexMicrosecondGO.shape": "Attribute", "IndexMicrosecondGO.size": "Attribute", "IndexMicrosecondGO.__array__()": "Method", "IndexMicrosecondGO.__array_ufunc__()": "Method", "IndexMicrosecondGO.__bool__()": "Method", "IndexMicrosecondGO.__copy__()": "Method", "IndexMicrosecondGO.__deepcopy__()": "Method", "IndexMicrosecondGO.__len__()": "Method", "IndexMicrosecondGO.all()": "Method", "IndexMicrosecondGO.any()": "Method", "IndexMicrosecondGO.append()": "Method", "IndexMicrosecondGO.astype()": "Method", "IndexMicrosecondGO.copy()": "Method", "IndexMicrosecondGO.cumprod()": "Method", "IndexMicrosecondGO.cumsum()": "Method", "IndexMicrosecondGO.difference()": "Method", "IndexMicrosecondGO.dropfalsy()": "Method", "IndexMicrosecondGO.dropna()": "Method", "IndexMicrosecondGO.equals()": "Method", "IndexMicrosecondGO.extend()": "Method", "IndexMicrosecondGO.fillfalsy()": "Method", "IndexMicrosecondGO.fillna()": "Method", "IndexMicrosecondGO.head()": "Method", "IndexMicrosecondGO.iloc_searchsorted()": "Method", "IndexMicrosecondGO.intersection()": "Method", "IndexMicrosecondGO.is_sorted()": "Method", "IndexMicrosecondGO.isfalsy()": "Method", "IndexMicrosecondGO.isin()": "Method", "IndexMicrosecondGO.isna()": "Method", "IndexMicrosecondGO.label_widths_at_depth()": "Method", "IndexMicrosecondGO.level_add()": "Method", "IndexMicrosecondGO.loc_searchsorted()": "Method", "IndexMicrosecondGO.loc_to_iloc()": "Method", "IndexMicrosecondGO.max()": "Method", "IndexMicrosecondGO.mean()": "Method", "IndexMicrosecondGO.median()": "Method", "IndexMicrosecondGO.min()": "Method", "IndexMicrosecondGO.notfalsy()": "Method", "IndexMicrosecondGO.notna()": "Method", "IndexMicrosecondGO.prod()": "Method", "IndexMicrosecondGO.relabel()": "Method", "IndexMicrosecondGO.rename()": "Method", "IndexMicrosecondGO.roll()": "Method", "IndexMicrosecondGO.sample()": "Method", "IndexMicrosecondGO.sort()": "Method", "IndexMicrosecondGO.std()": "Method", "IndexMicrosecondGO.sum()": "Method", "IndexMicrosecondGO.tail()": "Method", "IndexMicrosecondGO.union()": "Method", "IndexMicrosecondGO.unique()": "Method", "IndexMicrosecondGO.values_at_depth()": "Method", "IndexMicrosecondGO.var()": "Method", "IndexMicrosecondGO.__contains__()": "Dictionary-Like", "IndexMicrosecondGO.__iter__()": "Dictionary-Like", "IndexMicrosecondGO.__reversed__()": "Dictionary-Like", "IndexMicrosecondGO.values": "Dictionary-Like", "IndexMicrosecondGO.interface": "Display", "IndexMicrosecondGO.__repr__()": "Display", "IndexMicrosecondGO.__str__()": "Display", "IndexMicrosecondGO.display()": "Display", "IndexMicrosecondGO.display_tall()": "Display", "IndexMicrosecondGO.display_wide()": "Display", "IndexMicrosecondGO.drop.iloc[]": "Selector", "IndexMicrosecondGO.drop.loc[]": "Selector", "IndexMicrosecondGO.[]": "Selector", "IndexMicrosecondGO.iloc[]": "Selector", "IndexMicrosecondGO.loc[]": "Selector", "IndexMicrosecondGO.iter_label()": "Iterator", "IndexMicrosecondGO.iter_label().apply()": "Iterator", "IndexMicrosecondGO.iter_label().apply_iter()": "Iterator", "IndexMicrosecondGO.iter_label().apply_iter_items()": "Iterator", "IndexMicrosecondGO.iter_label().apply_pool()": "Iterator", "IndexMicrosecondGO.__add__()": "Operator Binary", "IndexMicrosecondGO.__and__()": "Operator Binary", "IndexMicrosecondGO.__eq__()": "Operator Binary", "IndexMicrosecondGO.__floordiv__()": "Operator Binary", "IndexMicrosecondGO.__ge__()": "Operator Binary", "IndexMicrosecondGO.__gt__()": "Operator Binary", "IndexMicrosecondGO.__le__()": "Operator Binary", "IndexMicrosecondGO.__lt__()": "Operator Binary", "IndexMicrosecondGO.__matmul__()": "Operator Binary", "IndexMicrosecondGO.__mod__()": "Operator Binary", "IndexMicrosecondGO.__mul__()": "Operator Binary", "IndexMicrosecondGO.__ne__()": "Operator Binary", "IndexMicrosecondGO.__or__()": "Operator Binary", "IndexMicrosecondGO.__pow__()": "Operator Binary", "IndexMicrosecondGO.__radd__()": "Operator Binary", "IndexMicrosecondGO.__rfloordiv__()": "Operator Binary", "IndexMicrosecondGO.__rmatmul__()": "Operator Binary", "IndexMicrosecondGO.__rmul__()": "Operator Binary", "IndexMicrosecondGO.__rshift__()": "Operator Binary", "IndexMicrosecondGO.__rsub__()": "Operator Binary", "IndexMicrosecondGO.__rtruediv__()": "Operator Binary", "IndexMicrosecondGO.__sub__()": "Operator Binary", "IndexMicrosecondGO.__truediv__()": "Operator Binary", "IndexMicrosecondGO.__xor__()": "Operator Binary", "IndexMicrosecondGO.__abs__()": "Operator Unary", "IndexMicrosecondGO.__invert__()": "Operator Unary", "IndexMicrosecondGO.__neg__()": "Operator Unary", "IndexMicrosecondGO.__pos__()": "Operator Unary", "IndexMicrosecondGO.via_values.apply()": "Accessor Values", "IndexMicrosecondGO.via_values.__array_ufunc__()": "Accessor Values", "IndexMicrosecondGO.via_values.__call__()": "Accessor Values", "IndexMicrosecondGO.via_dt.__call__()": "Accessor Datetime", "IndexMicrosecondGO.via_dt.year": "Accessor Datetime", "IndexMicrosecondGO.via_dt.year_month": "Accessor Datetime", "IndexMicrosecondGO.via_dt.year_quarter": "Accessor Datetime", "IndexMicrosecondGO.via_dt.month": "Accessor Datetime", "IndexMicrosecondGO.via_dt.day": "Accessor Datetime", "IndexMicrosecondGO.via_dt.hour": "Accessor Datetime", "IndexMicrosecondGO.via_dt.minute": "Accessor Datetime", "IndexMicrosecondGO.via_dt.second": "Accessor Datetime", "IndexMicrosecondGO.via_dt.weekday()": "Accessor Datetime", "IndexMicrosecondGO.via_dt.quarter()": "Accessor Datetime", "IndexMicrosecondGO.via_dt.is_month_end()": "Accessor Datetime", "IndexMicrosecondGO.via_dt.is_month_start()": "Accessor Datetime", "IndexMicrosecondGO.via_dt.is_year_end()": "Accessor Datetime", "IndexMicrosecondGO.via_dt.is_year_start()": "Accessor Datetime", "IndexMicrosecondGO.via_dt.is_quarter_end()": "Accessor Datetime", "IndexMicrosecondGO.via_dt.is_quarter_start()": "Accessor Datetime", "IndexMicrosecondGO.via_dt.timetuple()": "Accessor Datetime", "IndexMicrosecondGO.via_dt.isoformat()": "Accessor Datetime", "IndexMicrosecondGO.via_dt.fromisoformat()": "Accessor Datetime", "IndexMicrosecondGO.via_dt.strftime()": "Accessor Datetime", "IndexMicrosecondGO.via_dt.strptime()": "Accessor Datetime", "IndexMicrosecondGO.via_dt.strpdate()": "Accessor Datetime", "IndexMicrosecondGO.via_str.__getitem__()": "Accessor String", "IndexMicrosecondGO.via_str.capitalize()": "Accessor String", "IndexMicrosecondGO.via_str.center()": "Accessor String", "IndexMicrosecondGO.via_str.contains()": "Accessor String", "IndexMicrosecondGO.via_str.count()": "Accessor String", "IndexMicrosecondGO.via_str.decode()": "Accessor String", "IndexMicrosecondGO.via_str.encode()": "Accessor String", "IndexMicrosecondGO.via_str.endswith()": "Accessor String", "IndexMicrosecondGO.via_str.find()": "Accessor String", "IndexMicrosecondGO.via_str.format()": "Accessor String", "IndexMicrosecondGO.via_str.index()": "Accessor String", "IndexMicrosecondGO.via_str.isalnum()": "Accessor String", "IndexMicrosecondGO.via_str.isalpha()": "Accessor String", "IndexMicrosecondGO.via_str.isdecimal()": "Accessor String", "IndexMicrosecondGO.via_str.isdigit()": "Accessor String", "IndexMicrosecondGO.via_str.islower()": "Accessor String", "IndexMicrosecondGO.via_str.isnumeric()": "Accessor String", "IndexMicrosecondGO.via_str.isspace()": "Accessor String", "IndexMicrosecondGO.via_str.istitle()": "Accessor String", "IndexMicrosecondGO.via_str.isupper()": "Accessor String", "IndexMicrosecondGO.via_str.ljust()": "Accessor String", "IndexMicrosecondGO.via_str.len()": "Accessor String", "IndexMicrosecondGO.via_str.lower()": "Accessor String", "IndexMicrosecondGO.via_str.lstrip()": "Accessor String", "IndexMicrosecondGO.via_str.partition()": "Accessor String", "IndexMicrosecondGO.via_str.replace()": "Accessor String", "IndexMicrosecondGO.via_str.rfind()": "Accessor String", "IndexMicrosecondGO.via_str.rindex()": "Accessor String", "IndexMicrosecondGO.via_str.rjust()": "Accessor String", "IndexMicrosecondGO.via_str.rpartition()": "Accessor String", "IndexMicrosecondGO.via_str.rsplit()": "Accessor String", "IndexMicrosecondGO.via_str.rstrip()": "Accessor String", "IndexMicrosecondGO.via_str.split()": "Accessor String", "IndexMicrosecondGO.via_str.startswith()": "Accessor String", "IndexMicrosecondGO.via_str.strip()": "Accessor String", "IndexMicrosecondGO.via_str.swapcase()": "Accessor String", "IndexMicrosecondGO.via_str.title()": "Accessor String", "IndexMicrosecondGO.via_str.upper()": "Accessor String", "IndexMicrosecondGO.via_str.zfill()": "Accessor String", "IndexMicrosecondGO.via_re().search()": "Accessor Regular Expression", "IndexMicrosecondGO.via_re().match()": "Accessor Regular Expression", "IndexMicrosecondGO.via_re().fullmatch()": "Accessor Regular Expression", "IndexMicrosecondGO.via_re().split()": "Accessor Regular Expression", "IndexMicrosecondGO.via_re().findall()": "Accessor Regular Expression", "IndexMicrosecondGO.via_re().sub()": "Accessor Regular Expression", "IndexMicrosecondGO.via_re().subn()": "Accessor Regular Expression", "IndexMicrosecondGO.via_hashlib().to_bytes()": "Accessor Hashlib", "IndexMicrosecondGO.via_hashlib().md5()": "Accessor Hashlib", "IndexMicrosecondGO.via_hashlib().sha256()": "Accessor Hashlib", "IndexMicrosecondGO.via_hashlib().sha512()": "Accessor Hashlib", "IndexMicrosecondGO.via_hashlib().sha3_256()": "Accessor Hashlib", "IndexMicrosecondGO.via_hashlib().sha3_512()": "Accessor Hashlib", "IndexMicrosecondGO.via_hashlib().shake_128()": "Accessor Hashlib", "IndexMicrosecondGO.via_hashlib().shake_256()": "Accessor Hashlib", "IndexMicrosecondGO.via_hashlib().blake2b()": "Accessor Hashlib", "IndexMicrosecondGO.via_hashlib().blake2s()": "Accessor Hashlib", "IndexMicrosecondGO.via_type_clinic.to_hint()": "Accessor Type Clinic", "IndexMicrosecondGO.via_type_clinic.check()": "Accessor Type Clinic", "IndexMicrosecondGO.via_type_clinic.warn()": "Accessor Type Clinic", "IndexMicrosecondGO.via_type_clinic.__call__()": "Accessor Type Clinic", "IndexMicrosecondGO.via_type_clinic.__repr__()": "Accessor Type Clinic", "IndexNanosecond.__init__()": "Constructor", "IndexNanosecond.from_difference()": "Constructor", "IndexNanosecond.from_intersection()": "Constructor", "IndexNanosecond.from_labels()": "Constructor", "IndexNanosecond.from_pandas()": "Constructor", "IndexNanosecond.from_union()": "Constructor", "IndexNanosecond.to_html()": "Exporter", "IndexNanosecond.to_html_datatables()": "Exporter", "IndexNanosecond.to_pandas()": "Exporter", "IndexNanosecond.to_series()": "Exporter", "IndexNanosecond.to_visidata()": "Exporter", "IndexNanosecond.STATIC": "Attribute", "IndexNanosecond.depth": "Attribute", "IndexNanosecond.dtype": "Attribute", "IndexNanosecond.index_types": "Attribute", "IndexNanosecond.memory": "Attribute", "IndexNanosecond.mloc": "Attribute", "IndexNanosecond.name": "Attribute", "IndexNanosecond.names": "Attribute", "IndexNanosecond.nbytes": "Attribute", "IndexNanosecond.ndim": "Attribute", "IndexNanosecond.positions": "Attribute", "IndexNanosecond.shape": "Attribute", "IndexNanosecond.size": "Attribute", "IndexNanosecond.__array__()": "Method", "IndexNanosecond.__array_ufunc__()": "Method", "IndexNanosecond.__bool__()": "Method", "IndexNanosecond.__copy__()": "Method", "IndexNanosecond.__deepcopy__()": "Method", "IndexNanosecond.__len__()": "Method", "IndexNanosecond.all()": "Method", "IndexNanosecond.any()": "Method", "IndexNanosecond.astype()": "Method", "IndexNanosecond.copy()": "Method", "IndexNanosecond.cumprod()": "Method", "IndexNanosecond.cumsum()": "Method", "IndexNanosecond.difference()": "Method", "IndexNanosecond.dropfalsy()": "Method", "IndexNanosecond.dropna()": "Method", "IndexNanosecond.equals()": "Method", "IndexNanosecond.fillfalsy()": "Method", "IndexNanosecond.fillna()": "Method", "IndexNanosecond.head()": "Method", "IndexNanosecond.iloc_searchsorted()": "Method", "IndexNanosecond.intersection()": "Method", "IndexNanosecond.is_sorted()": "Method", "IndexNanosecond.isfalsy()": "Method", "IndexNanosecond.isin()": "Method", "IndexNanosecond.isna()": "Method", "IndexNanosecond.label_widths_at_depth()": "Method", "IndexNanosecond.level_add()": "Method", "IndexNanosecond.loc_searchsorted()": "Method", "IndexNanosecond.loc_to_iloc()": "Method", "IndexNanosecond.max()": "Method", "IndexNanosecond.mean()": "Method", "IndexNanosecond.median()": "Method", "IndexNanosecond.min()": "Method", "IndexNanosecond.notfalsy()": "Method", "IndexNanosecond.notna()": "Method", "IndexNanosecond.prod()": "Method", "IndexNanosecond.relabel()": "Method", "IndexNanosecond.rename()": "Method", "IndexNanosecond.roll()": "Method", "IndexNanosecond.sample()": "Method", "IndexNanosecond.sort()": "Method", "IndexNanosecond.std()": "Method", "IndexNanosecond.sum()": "Method", "IndexNanosecond.tail()": "Method", "IndexNanosecond.union()": "Method", "IndexNanosecond.unique()": "Method", "IndexNanosecond.values_at_depth()": "Method", "IndexNanosecond.var()": "Method", "IndexNanosecond.__contains__()": "Dictionary-Like", "IndexNanosecond.__iter__()": "Dictionary-Like", "IndexNanosecond.__reversed__()": "Dictionary-Like", "IndexNanosecond.values": "Dictionary-Like", "IndexNanosecond.interface": "Display", "IndexNanosecond.__repr__()": "Display", "IndexNanosecond.__str__()": "Display", "IndexNanosecond.display()": "Display", "IndexNanosecond.display_tall()": "Display", "IndexNanosecond.display_wide()": "Display", "IndexNanosecond.drop.iloc[]": "Selector", "IndexNanosecond.drop.loc[]": "Selector", "IndexNanosecond.[]": "Selector", "IndexNanosecond.iloc[]": "Selector", "IndexNanosecond.loc[]": "Selector", "IndexNanosecond.iter_label()": "Iterator", "IndexNanosecond.iter_label().apply()": "Iterator", "IndexNanosecond.iter_label().apply_iter()": "Iterator", "IndexNanosecond.iter_label().apply_iter_items()": "Iterator", "IndexNanosecond.iter_label().apply_pool()": "Iterator", "IndexNanosecond.__add__()": "Operator Binary", "IndexNanosecond.__and__()": "Operator Binary", "IndexNanosecond.__eq__()": "Operator Binary", "IndexNanosecond.__floordiv__()": "Operator Binary", "IndexNanosecond.__ge__()": "Operator Binary", "IndexNanosecond.__gt__()": "Operator Binary", "IndexNanosecond.__le__()": "Operator Binary", "IndexNanosecond.__lt__()": "Operator Binary", "IndexNanosecond.__matmul__()": "Operator Binary", "IndexNanosecond.__mod__()": "Operator Binary", "IndexNanosecond.__mul__()": "Operator Binary", "IndexNanosecond.__ne__()": "Operator Binary", "IndexNanosecond.__or__()": "Operator Binary", "IndexNanosecond.__pow__()": "Operator Binary", "IndexNanosecond.__radd__()": "Operator Binary", "IndexNanosecond.__rfloordiv__()": "Operator Binary", "IndexNanosecond.__rmatmul__()": "Operator Binary", "IndexNanosecond.__rmul__()": "Operator Binary", "IndexNanosecond.__rshift__()": "Operator Binary", "IndexNanosecond.__rsub__()": "Operator Binary", "IndexNanosecond.__rtruediv__()": "Operator Binary", "IndexNanosecond.__sub__()": "Operator Binary", "IndexNanosecond.__truediv__()": "Operator Binary", "IndexNanosecond.__xor__()": "Operator Binary", "IndexNanosecond.__abs__()": "Operator Unary", "IndexNanosecond.__invert__()": "Operator Unary", "IndexNanosecond.__neg__()": "Operator Unary", "IndexNanosecond.__pos__()": "Operator Unary", "IndexNanosecond.via_values.apply()": "Accessor Values", "IndexNanosecond.via_values.__array_ufunc__()": "Accessor Values", "IndexNanosecond.via_values.__call__()": "Accessor Values", "IndexNanosecond.via_dt.__call__()": "Accessor Datetime", "IndexNanosecond.via_dt.year": "Accessor Datetime", "IndexNanosecond.via_dt.year_month": "Accessor Datetime", "IndexNanosecond.via_dt.year_quarter": "Accessor Datetime", "IndexNanosecond.via_dt.month": "Accessor Datetime", "IndexNanosecond.via_dt.day": "Accessor Datetime", "IndexNanosecond.via_dt.hour": "Accessor Datetime", "IndexNanosecond.via_dt.minute": "Accessor Datetime", "IndexNanosecond.via_dt.second": "Accessor Datetime", "IndexNanosecond.via_dt.weekday()": "Accessor Datetime", "IndexNanosecond.via_dt.quarter()": "Accessor Datetime", "IndexNanosecond.via_dt.is_month_end()": "Accessor Datetime", "IndexNanosecond.via_dt.is_month_start()": "Accessor Datetime", "IndexNanosecond.via_dt.is_year_end()": "Accessor Datetime", "IndexNanosecond.via_dt.is_year_start()": "Accessor Datetime", "IndexNanosecond.via_dt.is_quarter_end()": "Accessor Datetime", "IndexNanosecond.via_dt.is_quarter_start()": "Accessor Datetime", "IndexNanosecond.via_dt.timetuple()": "Accessor Datetime", "IndexNanosecond.via_dt.isoformat()": "Accessor Datetime", "IndexNanosecond.via_dt.fromisoformat()": "Accessor Datetime", "IndexNanosecond.via_dt.strftime()": "Accessor Datetime", "IndexNanosecond.via_dt.strptime()": "Accessor Datetime", "IndexNanosecond.via_dt.strpdate()": "Accessor Datetime", "IndexNanosecond.via_str.__getitem__()": "Accessor String", "IndexNanosecond.via_str.capitalize()": "Accessor String", "IndexNanosecond.via_str.center()": "Accessor String", "IndexNanosecond.via_str.contains()": "Accessor String", "IndexNanosecond.via_str.count()": "Accessor String", "IndexNanosecond.via_str.decode()": "Accessor String", "IndexNanosecond.via_str.encode()": "Accessor String", "IndexNanosecond.via_str.endswith()": "Accessor String", "IndexNanosecond.via_str.find()": "Accessor String", "IndexNanosecond.via_str.format()": "Accessor String", "IndexNanosecond.via_str.index()": "Accessor String", "IndexNanosecond.via_str.isalnum()": "Accessor String", "IndexNanosecond.via_str.isalpha()": "Accessor String", "IndexNanosecond.via_str.isdecimal()": "Accessor String", "IndexNanosecond.via_str.isdigit()": "Accessor String", "IndexNanosecond.via_str.islower()": "Accessor String", "IndexNanosecond.via_str.isnumeric()": "Accessor String", "IndexNanosecond.via_str.isspace()": "Accessor String", "IndexNanosecond.via_str.istitle()": "Accessor String", "IndexNanosecond.via_str.isupper()": "Accessor String", "IndexNanosecond.via_str.ljust()": "Accessor String", "IndexNanosecond.via_str.len()": "Accessor String", "IndexNanosecond.via_str.lower()": "Accessor String", "IndexNanosecond.via_str.lstrip()": "Accessor String", "IndexNanosecond.via_str.partition()": "Accessor String", "IndexNanosecond.via_str.replace()": "Accessor String", "IndexNanosecond.via_str.rfind()": "Accessor String", "IndexNanosecond.via_str.rindex()": "Accessor String", "IndexNanosecond.via_str.rjust()": "Accessor String", "IndexNanosecond.via_str.rpartition()": "Accessor String", "IndexNanosecond.via_str.rsplit()": "Accessor String", "IndexNanosecond.via_str.rstrip()": "Accessor String", "IndexNanosecond.via_str.split()": "Accessor String", "IndexNanosecond.via_str.startswith()": "Accessor String", "IndexNanosecond.via_str.strip()": "Accessor String", "IndexNanosecond.via_str.swapcase()": "Accessor String", "IndexNanosecond.via_str.title()": "Accessor String", "IndexNanosecond.via_str.upper()": "Accessor String", "IndexNanosecond.via_str.zfill()": "Accessor String", "IndexNanosecond.via_re().search()": "Accessor Regular Expression", "IndexNanosecond.via_re().match()": "Accessor Regular Expression", "IndexNanosecond.via_re().fullmatch()": "Accessor Regular Expression", "IndexNanosecond.via_re().split()": "Accessor Regular Expression", "IndexNanosecond.via_re().findall()": "Accessor Regular Expression", "IndexNanosecond.via_re().sub()": "Accessor Regular Expression", "IndexNanosecond.via_re().subn()": "Accessor Regular Expression", "IndexNanosecond.via_hashlib().to_bytes()": "Accessor Hashlib", "IndexNanosecond.via_hashlib().md5()": "Accessor Hashlib", "IndexNanosecond.via_hashlib().sha256()": "Accessor Hashlib", "IndexNanosecond.via_hashlib().sha512()": "Accessor Hashlib", "IndexNanosecond.via_hashlib().sha3_256()": "Accessor Hashlib", "IndexNanosecond.via_hashlib().sha3_512()": "Accessor Hashlib", "IndexNanosecond.via_hashlib().shake_128()": "Accessor Hashlib", "IndexNanosecond.via_hashlib().shake_256()": "Accessor Hashlib", "IndexNanosecond.via_hashlib().blake2b()": "Accessor Hashlib", "IndexNanosecond.via_hashlib().blake2s()": "Accessor Hashlib", "IndexNanosecond.via_type_clinic.to_hint()": "Accessor Type Clinic", "IndexNanosecond.via_type_clinic.check()": "Accessor Type Clinic", "IndexNanosecond.via_type_clinic.warn()": "Accessor Type Clinic", "IndexNanosecond.via_type_clinic.__call__()": "Accessor Type Clinic", "IndexNanosecond.via_type_clinic.__repr__()": "Accessor Type Clinic", "IndexNanosecondGO.__init__()": "Constructor", "IndexNanosecondGO.from_difference()": "Constructor", "IndexNanosecondGO.from_intersection()": "Constructor", "IndexNanosecondGO.from_labels()": "Constructor", "IndexNanosecondGO.from_pandas()": "Constructor", "IndexNanosecondGO.from_union()": "Constructor", "IndexNanosecondGO.to_html()": "Exporter", "IndexNanosecondGO.to_html_datatables()": "Exporter", "IndexNanosecondGO.to_pandas()": "Exporter", "IndexNanosecondGO.to_series()": "Exporter", "IndexNanosecondGO.to_visidata()": "Exporter", "IndexNanosecondGO.STATIC": "Attribute", "IndexNanosecondGO.depth": "Attribute", "IndexNanosecondGO.dtype": "Attribute", "IndexNanosecondGO.index_types": "Attribute", "IndexNanosecondGO.memory": "Attribute", "IndexNanosecondGO.mloc": "Attribute", "IndexNanosecondGO.name": "Attribute", "IndexNanosecondGO.names": "Attribute", "IndexNanosecondGO.nbytes": "Attribute", "IndexNanosecondGO.ndim": "Attribute", "IndexNanosecondGO.positions": "Attribute", "IndexNanosecondGO.shape": "Attribute", "IndexNanosecondGO.size": "Attribute", "IndexNanosecondGO.__array__()": "Method", "IndexNanosecondGO.__array_ufunc__()": "Method", "IndexNanosecondGO.__bool__()": "Method", "IndexNanosecondGO.__copy__()": "Method", "IndexNanosecondGO.__deepcopy__()": "Method", "IndexNanosecondGO.__len__()": "Method", "IndexNanosecondGO.all()": "Method", "IndexNanosecondGO.any()": "Method", "IndexNanosecondGO.append()": "Method", "IndexNanosecondGO.astype()": "Method", "IndexNanosecondGO.copy()": "Method", "IndexNanosecondGO.cumprod()": "Method", "IndexNanosecondGO.cumsum()": "Method", "IndexNanosecondGO.difference()": "Method", "IndexNanosecondGO.dropfalsy()": "Method", "IndexNanosecondGO.dropna()": "Method", "IndexNanosecondGO.equals()": "Method", "IndexNanosecondGO.extend()": "Method", "IndexNanosecondGO.fillfalsy()": "Method", "IndexNanosecondGO.fillna()": "Method", "IndexNanosecondGO.head()": "Method", "IndexNanosecondGO.iloc_searchsorted()": "Method", "IndexNanosecondGO.intersection()": "Method", "IndexNanosecondGO.is_sorted()": "Method", "IndexNanosecondGO.isfalsy()": "Method", "IndexNanosecondGO.isin()": "Method", "IndexNanosecondGO.isna()": "Method", "IndexNanosecondGO.label_widths_at_depth()": "Method", "IndexNanosecondGO.level_add()": "Method", "IndexNanosecondGO.loc_searchsorted()": "Method", "IndexNanosecondGO.loc_to_iloc()": "Method", "IndexNanosecondGO.max()": "Method", "IndexNanosecondGO.mean()": "Method", "IndexNanosecondGO.median()": "Method", "IndexNanosecondGO.min()": "Method", "IndexNanosecondGO.notfalsy()": "Method", "IndexNanosecondGO.notna()": "Method", "IndexNanosecondGO.prod()": "Method", "IndexNanosecondGO.relabel()": "Method", "IndexNanosecondGO.rename()": "Method", "IndexNanosecondGO.roll()": "Method", "IndexNanosecondGO.sample()": "Method", "IndexNanosecondGO.sort()": "Method", "IndexNanosecondGO.std()": "Method", "IndexNanosecondGO.sum()": "Method", "IndexNanosecondGO.tail()": "Method", "IndexNanosecondGO.union()": "Method", "IndexNanosecondGO.unique()": "Method", "IndexNanosecondGO.values_at_depth()": "Method", "IndexNanosecondGO.var()": "Method", "IndexNanosecondGO.__contains__()": "Dictionary-Like", "IndexNanosecondGO.__iter__()": "Dictionary-Like", "IndexNanosecondGO.__reversed__()": "Dictionary-Like", "IndexNanosecondGO.values": "Dictionary-Like", "IndexNanosecondGO.interface": "Display", "IndexNanosecondGO.__repr__()": "Display", "IndexNanosecondGO.__str__()": "Display", "IndexNanosecondGO.display()": "Display", "IndexNanosecondGO.display_tall()": "Display", "IndexNanosecondGO.display_wide()": "Display", "IndexNanosecondGO.drop.iloc[]": "Selector", "IndexNanosecondGO.drop.loc[]": "Selector", "IndexNanosecondGO.[]": "Selector", "IndexNanosecondGO.iloc[]": "Selector", "IndexNanosecondGO.loc[]": "Selector", "IndexNanosecondGO.iter_label()": "Iterator", "IndexNanosecondGO.iter_label().apply()": "Iterator", "IndexNanosecondGO.iter_label().apply_iter()": "Iterator", "IndexNanosecondGO.iter_label().apply_iter_items()": "Iterator", "IndexNanosecondGO.iter_label().apply_pool()": "Iterator", "IndexNanosecondGO.__add__()": "Operator Binary", "IndexNanosecondGO.__and__()": "Operator Binary", "IndexNanosecondGO.__eq__()": "Operator Binary", "IndexNanosecondGO.__floordiv__()": "Operator Binary", "IndexNanosecondGO.__ge__()": "Operator Binary", "IndexNanosecondGO.__gt__()": "Operator Binary", "IndexNanosecondGO.__le__()": "Operator Binary", "IndexNanosecondGO.__lt__()": "Operator Binary", "IndexNanosecondGO.__matmul__()": "Operator Binary", "IndexNanosecondGO.__mod__()": "Operator Binary", "IndexNanosecondGO.__mul__()": "Operator Binary", "IndexNanosecondGO.__ne__()": "Operator Binary", "IndexNanosecondGO.__or__()": "Operator Binary", "IndexNanosecondGO.__pow__()": "Operator Binary", "IndexNanosecondGO.__radd__()": "Operator Binary", "IndexNanosecondGO.__rfloordiv__()": "Operator Binary", "IndexNanosecondGO.__rmatmul__()": "Operator Binary", "IndexNanosecondGO.__rmul__()": "Operator Binary", "IndexNanosecondGO.__rshift__()": "Operator Binary", "IndexNanosecondGO.__rsub__()": "Operator Binary", "IndexNanosecondGO.__rtruediv__()": "Operator Binary", "IndexNanosecondGO.__sub__()": "Operator Binary", "IndexNanosecondGO.__truediv__()": "Operator Binary", "IndexNanosecondGO.__xor__()": "Operator Binary", "IndexNanosecondGO.__abs__()": "Operator Unary", "IndexNanosecondGO.__invert__()": "Operator Unary", "IndexNanosecondGO.__neg__()": "Operator Unary", "IndexNanosecondGO.__pos__()": "Operator Unary", "IndexNanosecondGO.via_values.apply()": "Accessor Values", "IndexNanosecondGO.via_values.__array_ufunc__()": "Accessor Values", "IndexNanosecondGO.via_values.__call__()": "Accessor Values", "IndexNanosecondGO.via_dt.__call__()": "Accessor Datetime", "IndexNanosecondGO.via_dt.year": "Accessor Datetime", "IndexNanosecondGO.via_dt.year_month": "Accessor Datetime", "IndexNanosecondGO.via_dt.year_quarter": "Accessor Datetime", "IndexNanosecondGO.via_dt.month": "Accessor Datetime", "IndexNanosecondGO.via_dt.day": "Accessor Datetime", "IndexNanosecondGO.via_dt.hour": "Accessor Datetime", "IndexNanosecondGO.via_dt.minute": "Accessor Datetime", "IndexNanosecondGO.via_dt.second": "Accessor Datetime", "IndexNanosecondGO.via_dt.weekday()": "Accessor Datetime", "IndexNanosecondGO.via_dt.quarter()": "Accessor Datetime", "IndexNanosecondGO.via_dt.is_month_end()": "Accessor Datetime", "IndexNanosecondGO.via_dt.is_month_start()": "Accessor Datetime", "IndexNanosecondGO.via_dt.is_year_end()": "Accessor Datetime", "IndexNanosecondGO.via_dt.is_year_start()": "Accessor Datetime", "IndexNanosecondGO.via_dt.is_quarter_end()": "Accessor Datetime", "IndexNanosecondGO.via_dt.is_quarter_start()": "Accessor Datetime", "IndexNanosecondGO.via_dt.timetuple()": "Accessor Datetime", "IndexNanosecondGO.via_dt.isoformat()": "Accessor Datetime", "IndexNanosecondGO.via_dt.fromisoformat()": "Accessor Datetime", "IndexNanosecondGO.via_dt.strftime()": "Accessor Datetime", "IndexNanosecondGO.via_dt.strptime()": "Accessor Datetime", "IndexNanosecondGO.via_dt.strpdate()": "Accessor Datetime", "IndexNanosecondGO.via_str.__getitem__()": "Accessor String", "IndexNanosecondGO.via_str.capitalize()": "Accessor String", "IndexNanosecondGO.via_str.center()": "Accessor String", "IndexNanosecondGO.via_str.contains()": "Accessor String", "IndexNanosecondGO.via_str.count()": "Accessor String", "IndexNanosecondGO.via_str.decode()": "Accessor String", "IndexNanosecondGO.via_str.encode()": "Accessor String", "IndexNanosecondGO.via_str.endswith()": "Accessor String", "IndexNanosecondGO.via_str.find()": "Accessor String", "IndexNanosecondGO.via_str.format()": "Accessor String", "IndexNanosecondGO.via_str.index()": "Accessor String", "IndexNanosecondGO.via_str.isalnum()": "Accessor String", "IndexNanosecondGO.via_str.isalpha()": "Accessor String", "IndexNanosecondGO.via_str.isdecimal()": "Accessor String", "IndexNanosecondGO.via_str.isdigit()": "Accessor String", "IndexNanosecondGO.via_str.islower()": "Accessor String", "IndexNanosecondGO.via_str.isnumeric()": "Accessor String", "IndexNanosecondGO.via_str.isspace()": "Accessor String", "IndexNanosecondGO.via_str.istitle()": "Accessor String", "IndexNanosecondGO.via_str.isupper()": "Accessor String", "IndexNanosecondGO.via_str.ljust()": "Accessor String", "IndexNanosecondGO.via_str.len()": "Accessor String", "IndexNanosecondGO.via_str.lower()": "Accessor String", "IndexNanosecondGO.via_str.lstrip()": "Accessor String", "IndexNanosecondGO.via_str.partition()": "Accessor String", "IndexNanosecondGO.via_str.replace()": "Accessor String", "IndexNanosecondGO.via_str.rfind()": "Accessor String", "IndexNanosecondGO.via_str.rindex()": "Accessor String", "IndexNanosecondGO.via_str.rjust()": "Accessor String", "IndexNanosecondGO.via_str.rpartition()": "Accessor String", "IndexNanosecondGO.via_str.rsplit()": "Accessor String", "IndexNanosecondGO.via_str.rstrip()": "Accessor String", "IndexNanosecondGO.via_str.split()": "Accessor String", "IndexNanosecondGO.via_str.startswith()": "Accessor String", "IndexNanosecondGO.via_str.strip()": "Accessor String", "IndexNanosecondGO.via_str.swapcase()": "Accessor String", "IndexNanosecondGO.via_str.title()": "Accessor String", "IndexNanosecondGO.via_str.upper()": "Accessor String", "IndexNanosecondGO.via_str.zfill()": "Accessor String", "IndexNanosecondGO.via_re().search()": "Accessor Regular Expression", "IndexNanosecondGO.via_re().match()": "Accessor Regular Expression", "IndexNanosecondGO.via_re().fullmatch()": "Accessor Regular Expression", "IndexNanosecondGO.via_re().split()": "Accessor Regular Expression", "IndexNanosecondGO.via_re().findall()": "Accessor Regular Expression", "IndexNanosecondGO.via_re().sub()": "Accessor Regular Expression", "IndexNanosecondGO.via_re().subn()": "Accessor Regular Expression", "IndexNanosecondGO.via_hashlib().to_bytes()": "Accessor Hashlib", "IndexNanosecondGO.via_hashlib().md5()": "Accessor Hashlib", "IndexNanosecondGO.via_hashlib().sha256()": "Accessor Hashlib", "IndexNanosecondGO.via_hashlib().sha512()": "Accessor Hashlib", "IndexNanosecondGO.via_hashlib().sha3_256()": "Accessor Hashlib", "IndexNanosecondGO.via_hashlib().sha3_512()": "Accessor Hashlib", "IndexNanosecondGO.via_hashlib().shake_128()": "Accessor Hashlib", "IndexNanosecondGO.via_hashlib().shake_256()": "Accessor Hashlib", "IndexNanosecondGO.via_hashlib().blake2b()": "Accessor Hashlib", "IndexNanosecondGO.via_hashlib().blake2s()": "Accessor Hashlib", "IndexNanosecondGO.via_type_clinic.to_hint()": "Accessor Type Clinic", "IndexNanosecondGO.via_type_clinic.check()": "Accessor Type Clinic", "IndexNanosecondGO.via_type_clinic.warn()": "Accessor Type Clinic", "IndexNanosecondGO.via_type_clinic.__call__()": "Accessor Type Clinic", "IndexNanosecondGO.via_type_clinic.__repr__()": "Accessor Type Clinic", "HLoc.__init__()": "Constructor", "HLoc.STATIC": "Attribute", "HLoc.key": "Attribute", "HLoc.__len__()": "Method", "HLoc.__iter__()": "Dictionary-Like", "HLoc.__repr__()": "Display", "HLoc.__str__()": "Display", "ILoc.__init__()": "Constructor", "ILoc.STATIC": "Attribute", "ILoc.key": "Attribute", "ILoc.__repr__()": "Display", "ILoc.__str__()": "Display", "TypeClinic.__init__()": "Constructor", "TypeClinic.to_hint()": "Exporter", "TypeClinic.__call__()": "Method", "TypeClinic.check()": "Method", "TypeClinic.warn()": "Method", "TypeClinic.__repr__()": "Display", "TypeClinic.__str__()": "Display", "CallGuard.check()": "Method", "CallGuard.warn()": "Method", "ClinicResult.__init__()": "Constructor", "ClinicResult.to_str()": "Exporter", "ClinicResult.validated": "Attribute", "ClinicResult.__bool__()": "Method", "ClinicResult.__len__()": "Method", "ClinicResult.__iter__()": "Dictionary-Like", "ClinicResult.__repr__()": "Display", "ClinicResult.__str__()": "Display", "Require.Apply()": "Constructor", "Require.LabelsMatch()": "Constructor", "Require.LabelsOrder()": "Constructor", "Require.Len()": "Constructor", "Require.Name()": "Constructor", "Require.Shape()": "Constructor", "WWW.from_file()": "Constructor", "WWW.from_gzip()": "Constructor", "WWW.from_zip()": "Constructor", "FillValueAuto.__init__()": "Constructor", "FillValueAuto.from_default()": "Constructor", "FillValueAuto.M": "Attribute", "FillValueAuto.O": "Attribute", "FillValueAuto.S": "Attribute", "FillValueAuto.U": "Attribute", "FillValueAuto.V": "Attribute", "FillValueAuto.b": "Attribute", "FillValueAuto.c": "Attribute", "FillValueAuto.f": "Attribute", "FillValueAuto.i": "Attribute", "FillValueAuto.m": "Attribute", "FillValueAuto.u": "Attribute", "FillValueAuto.__repr__()": "Display", "FillValueAuto.__str__()": "Display", "FillValueAuto.[]": "Selector", "DisplayActive.__init__()": "Constructor", "DisplayActive.FILE_NAME": "Attribute", "DisplayActive.read()": "Method", "DisplayActive.set()": "Method", "DisplayActive.update()": "Method", "DisplayActive.write()": "Method", "DisplayActive.get()": "Dictionary-Like", "DisplayActive.__repr__()": "Display", "DisplayActive.__str__()": "Display", "DisplayConfig.__init__()": "Constructor", "DisplayConfig.from_default()": "Constructor", "DisplayConfig.from_file()": "Constructor", "DisplayConfig.from_json()": "Constructor", "DisplayConfig.to_dict()": "Exporter", "DisplayConfig.to_display_config()": "Exporter", "DisplayConfig.to_json()": "Exporter", "DisplayConfig.to_transpose()": "Exporter", "DisplayConfig.cell_align_left": "Attribute", "DisplayConfig.cell_max_width": "Attribute", "DisplayConfig.cell_max_width_leftmost": "Attribute", "DisplayConfig.cell_placeholder": "Attribute", "DisplayConfig.display_columns": "Attribute", "DisplayConfig.display_format": "Attribute", "DisplayConfig.display_rows": "Attribute", "DisplayConfig.include_columns": "Attribute", "DisplayConfig.include_index": "Attribute", "DisplayConfig.type_color": "Attribute", "DisplayConfig.type_color_bool": "Attribute", "DisplayConfig.type_color_bus": "Attribute", "DisplayConfig.type_color_complex": "Attribute", "DisplayConfig.type_color_datetime": "Attribute", "DisplayConfig.type_color_default": "Attribute", "DisplayConfig.type_color_float": "Attribute", "DisplayConfig.type_color_frame": "Attribute", "DisplayConfig.type_color_index": "Attribute", "DisplayConfig.type_color_int": "Attribute", "DisplayConfig.type_color_object": "Attribute", "DisplayConfig.type_color_quilt": "Attribute", "DisplayConfig.type_color_series": "Attribute", "DisplayConfig.type_color_str": "Attribute", "DisplayConfig.type_color_timedelta": "Attribute", "DisplayConfig.type_delimiter_left": "Attribute", "DisplayConfig.type_delimiter_right": "Attribute", "DisplayConfig.type_show": "Attribute", "DisplayConfig.value_format_complex_positional": "Attribute", "DisplayConfig.value_format_complex_scientific": "Attribute", "DisplayConfig.value_format_float_positional": "Attribute", "DisplayConfig.value_format_float_scientific": "Attribute", "DisplayConfig.write()": "Method", "DisplayConfig.interface": "Display", "DisplayConfig.__repr__()": "Display", "DisplayConfig.__str__()": "Display", "StoreConfig.__init__()": "Constructor", "StoreConfig.from_frame()": "Constructor", "StoreConfig.to_store_config_he()": "Exporter", "StoreConfig.columns_constructors": "Attribute", "StoreConfig.columns_depth": "Attribute", "StoreConfig.columns_name_depth_level": "Attribute", "StoreConfig.columns_select": "Attribute", "StoreConfig.consolidate_blocks": "Attribute", "StoreConfig.dtypes": "Attribute", "StoreConfig.include_columns": "Attribute", "StoreConfig.include_columns_name": "Attribute", "StoreConfig.include_index": "Attribute", "StoreConfig.include_index_name": "Attribute", "StoreConfig.index_constructors": "Attribute", "StoreConfig.index_depth": "Attribute", "StoreConfig.index_name_depth_level": "Attribute", "StoreConfig.label_decoder": "Attribute", "StoreConfig.label_encoder": "Attribute", "StoreConfig.merge_hierarchical_labels": "Attribute", "StoreConfig.mp_context": "Attribute", "StoreConfig.read_chunksize": "Attribute", "StoreConfig.read_frame_filter": "Attribute", "StoreConfig.read_max_workers": "Attribute", "StoreConfig.skip_footer": "Attribute", "StoreConfig.skip_header": "Attribute", "StoreConfig.trim_nadir": "Attribute", "StoreConfig.write_chunksize": "Attribute", "StoreConfig.write_max_workers": "Attribute", "StoreConfig.label_decode()": "Method", "StoreConfig.label_encode()": "Method", "StoreConfig.interface": "Display", "StoreConfig.__repr__()": "Display", "StoreConfig.__str__()": "Display", "StoreFilter.__init__()": "Constructor", "StoreFilter.from_type_filter_array()": "Constructor", "StoreFilter.from_type_filter_element()": "Constructor", "StoreFilter.to_type_filter_array()": "Exporter", "StoreFilter.to_type_filter_element()": "Exporter", "StoreFilter.from_nan": "Attribute", "StoreFilter.from_nat": "Attribute", "StoreFilter.from_neginf": "Attribute", "StoreFilter.from_none": "Attribute", "StoreFilter.from_posinf": "Attribute", "StoreFilter.to_nan": "Attribute", "StoreFilter.to_nat": "Attribute", "StoreFilter.to_neginf": "Attribute", "StoreFilter.to_none": "Attribute", "StoreFilter.to_posinf": "Attribute", "StoreFilter.value_format_complex_positional": "Attribute", "StoreFilter.value_format_complex_scientific": "Attribute", "StoreFilter.value_format_float_positional": "Attribute", "StoreFilter.value_format_float_scientific": "Attribute", "StoreFilter.interface": "Display", "StoreFilter.__repr__()": "Display", "StoreFilter.__str__()": "Display", "IndexAutoFactory.__init__()": "Constructor", "IndexAutoFactory.from_optional_constructor()": "Constructor", "IndexAutoFactory.to_index()": "Exporter", "IndexAutoFactory.__repr__()": "Display", "IndexAutoFactory.__str__()": "Display", "IndexDefaultConstructorFactory.__init__()": "Constructor", "IndexDefaultConstructorFactory.__call__()": "Method", "IndexDefaultConstructorFactory.__repr__()": "Display", "IndexDefaultConstructorFactory.__str__()": "Display", "IndexAutoConstructorFactory.__init__()": "Constructor", "IndexAutoConstructorFactory.to_index()": "Exporter", "IndexAutoConstructorFactory.__call__()": "Method", "IndexAutoConstructorFactory.__repr__()": "Display", "IndexAutoConstructorFactory.__str__()": "Display", "NPZ.__init__()": "Constructor", "NPZ.from_arrays()": "Constructor", "NPZ.from_frames()": "Constructor", "NPZ.contents": "Attribute", "NPZ.nbytes": "Attribute", "NPZ.__enter__()": "Method", "NPZ.__exit__()": "Method", "NPZ.interface": "Display", "NPZ.__repr__()": "Display", "NPZ.__str__()": "Display", "NPY.__init__()": "Constructor", "NPY.from_arrays()": "Constructor", "NPY.from_frames()": "Constructor", "NPY.contents": "Attribute", "NPY.nbytes": "Attribute", "NPY.__enter__()": "Method", "NPY.__exit__()": "Method", "NPY.interface": "Display", "NPY.__repr__()": "Display", "NPY.__str__()": "Display", "MemoryDisplay.__init__()": "Constructor", "MemoryDisplay.from_any()": "Constructor", "MemoryDisplay.to_frame()": "Exporter", "MemoryDisplay.__repr__()": "Display", "MemoryDisplay.__str__()": "Display", "Platform.__init__()": "Constructor", "Platform.to_series()": "Exporter", "Platform.__repr__()": "Display", "Platform.__str__()": "Display", "Platform.display()": "Display"}